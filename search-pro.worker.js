const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":953,\"nextId\":953,\"documentIds\":{\"0\":\"1\",\"1\":\"1#介绍\",\"2\":\"1#关于学习\",\"3\":\"1#其它\",\"4\":\"2\",\"5\":\"2#高性能\",\"6\":\"2#高可用\",\"7\":\"2#高扩展性\",\"8\":\"2#安全性\",\"9\":\"3\",\"10\":\"4\",\"11\":\"4#chatgpt\",\"12\":\"4#文心一言\",\"13\":\"4#拼多多市值超过阿里巴巴\",\"14\":\"5\",\"15\":\"5#centos-全面停止维护\",\"16\":\"5#巴黎奥运会\",\"17\":\"7\",\"18\":\"8\",\"19\":\"8#description\",\"20\":\"9\",\"21\":\"10\",\"22\":\"10#价值导向-领域知识\",\"23\":\"10#需求收集与分析\",\"24\":\"10#概设\",\"25\":\"10#详设\",\"26\":\"10#设计编码\",\"27\":\"10#文档能力\",\"28\":\"10#代码美学\",\"29\":\"10#测试\",\"30\":\"10#集成部署\",\"31\":\"10#运行维护\",\"32\":\"10#有效的项目管理\",\"33\":\"11\",\"34\":\"11#硬件组成\",\"35\":\"11#cpu-central-processing-unit\",\"36\":\"11#功能\",\"37\":\"11#组成\",\"38\":\"11#多核cpu\",\"39\":\"11#体系结构\",\"40\":\"11#分类\",\"41\":\"11#按处理机数量分类\",\"42\":\"11#按并行程度分类\",\"43\":\"11#指令系统\",\"44\":\"11#计算机指令的组成\",\"45\":\"11#计算机执行过程\",\"46\":\"11#指令寻址方式\",\"47\":\"11#指令操作数的寻址方式\",\"48\":\"11#cisc和risc\",\"49\":\"11#流水线-risc\",\"50\":\"11#阵列处理机、并行处理机、多处理机\",\"51\":\"11#存储系统\",\"52\":\"11#层次结构\",\"53\":\"11#两级存储\",\"54\":\"11#高速缓存cache\",\"55\":\"11#内存编址计算\",\"56\":\"11#磁盘\",\"57\":\"11#输入-输出技术\",\"58\":\"11#内存和接口地址编址方法\",\"59\":\"11#计算机与外设间的数据交互方式\",\"60\":\"11#总线结构\",\"61\":\"12\",\"62\":\"12#进制\",\"63\":\"12#进制表示\",\"64\":\"12#进制转换\",\"65\":\"12#机器数\",\"66\":\"12#真值\",\"67\":\"12#定点数\",\"68\":\"12#浮点数\",\"69\":\"12#编码方法-码制-为了便于运算-针对-带符号数\",\"70\":\"12#校验码\",\"71\":\"12#_1-码距\",\"72\":\"12#_2-奇偶校验码\",\"73\":\"12#_3-循环冗余校验码crc-cyclic-redundancy-check\",\"74\":\"12#_4-海明码\",\"75\":\"14\",\"76\":\"14#可靠性\",\"77\":\"14#可靠性指标\",\"78\":\"14#串并联系统可靠性\",\"79\":\"14#提高可靠性的措施\",\"80\":\"14#性能评价\",\"81\":\"14#常用方法\",\"82\":\"14#基准程序法\",\"83\":\"15\",\"84\":\"15#功能\",\"85\":\"15#特征\",\"86\":\"15#分类\",\"87\":\"15#_1-关系数据库系统\",\"88\":\"15#_2-面向对象数据库系统\",\"89\":\"15#_3-对象关系数据库系统\",\"90\":\"16\",\"91\":\"16#分类\",\"92\":\"16#三要素\",\"93\":\"16#e-r模型\",\"94\":\"16#概念\",\"95\":\"16#关系模型-表\",\"96\":\"16#关系代数\",\"97\":\"17\",\"98\":\"17#数据库系统\",\"99\":\"17#数据库管理系统\",\"100\":\"17#数据库\",\"101\":\"17#三级模式-两级映像\",\"102\":\"18\",\"103\":\"18#需求分析\",\"104\":\"18#概念结构设计\",\"105\":\"18#逻辑结构设计\",\"106\":\"18#物理设计\",\"107\":\"21\",\"108\":\"22\",\"109\":\"22#安全等级\",\"110\":\"22#典型安全威胁\",\"111\":\"22#加密技术\",\"112\":\"22#_1-对称加密技术\",\"113\":\"22#_2-非对称加密技术\",\"114\":\"22#_3-密钥管理\",\"115\":\"22#认证技术\",\"116\":\"22#pki\",\"117\":\"24\",\"118\":\"25\",\"119\":\"25#定义\",\"120\":\"25#四个特征\",\"121\":\"25#五大功能\",\"122\":\"25#按任务处理方式分类\",\"123\":\"25#_1-批处理操作系统-单道和多道\",\"124\":\"25#_2-分时操作系统\",\"125\":\"25#_3-实时操作系统\",\"126\":\"25#按运行平台分类\",\"127\":\"25#_1-网络操作系统\",\"128\":\"25#_2-分布式操作系统\",\"129\":\"25#_3-微型计算机操作系统\",\"130\":\"25#_4-嵌入式操作系统\",\"131\":\"26\",\"132\":\"27\",\"133\":\"27#界面\",\"134\":\"27#存储格式\",\"135\":\"27#视图模式\",\"136\":\"27#快捷键\",\"137\":\"27#基础工具使用\",\"138\":\"27#常用功能与面板\",\"139\":\"27#其他工具与功能\",\"140\":\"27#技巧\",\"141\":\"27#练习\",\"142\":\"28\",\"143\":\"28#常用\",\"144\":\"29\",\"145\":\"29#钢笔工具p\",\"146\":\"30\",\"147\":\"30#界面、工具与操作\",\"148\":\"30#建模\",\"149\":\"30#材质灯光\",\"150\":\"30#贴图渲染\",\"151\":\"30#动画\",\"152\":\"30#练习\",\"153\":\"31\",\"154\":\"31#矢量图位图\",\"155\":\"31#新建文档与存储\",\"156\":\"31#图层\",\"157\":\"31#分类\",\"158\":\"31#面板\",\"159\":\"31#三大蒙版\",\"160\":\"31#_1-剪切蒙版\",\"161\":\"31#_2-图层蒙版\",\"162\":\"31#_3-快速蒙版\",\"163\":\"31#图层叠加模式\",\"164\":\"31#图层混合模式\",\"165\":\"31#调整功能\",\"166\":\"32\",\"167\":\"32#颜色名字\",\"168\":\"33\",\"169\":\"33#界面\",\"170\":\"33#快捷键-工具\",\"171\":\"33#功能详解\",\"172\":\"33#练习实战\",\"173\":\"34\",\"174\":\"34#一、常用快捷键\",\"175\":\"34#二、工具箱\",\"176\":\"34#移动工具v\",\"177\":\"34#选区m\",\"178\":\"34#套索工具\",\"179\":\"34#橡皮擦e\",\"180\":\"34#钢笔工具p\",\"181\":\"34#文字工具t\",\"182\":\"34#画笔工具\",\"183\":\"34#仿制图章工具\",\"184\":\"34#三、三大功能键\",\"185\":\"34#四、色彩调整、面板快捷键\",\"186\":\"35\",\"187\":\"35#兰花草\",\"188\":\"36\",\"189\":\"36#一千年以后\",\"190\":\"37\",\"191\":\"37#兰亭序\",\"192\":\"38\",\"193\":\"39\",\"194\":\"39#_01\",\"195\":\"39#_02\",\"196\":\"39#_03\",\"197\":\"40\",\"198\":\"40@0\",\"199\":\"41\",\"200\":\"41@0\",\"201\":\"41@1\",\"202\":\"42\",\"203\":\"42@0\",\"204\":\"42@1\",\"205\":\"43\",\"206\":\"43@0\",\"207\":\"43@1\",\"208\":\"44\",\"209\":\"44#markdown-introduction\",\"210\":\"44#markdown-config\",\"211\":\"44#markdown-extension\",\"212\":\"44#vuepress-enhancement\",\"213\":\"44#theme-enhancement\",\"214\":\"44#code-tabs\",\"215\":\"44#tabs\",\"216\":\"44#footnote\",\"217\":\"44#include-files\",\"218\":\"44#tex\",\"219\":\"44#tasklist\",\"220\":\"44#image-enhancement\",\"221\":\"44#superscript-and-subscript\",\"222\":\"44#component\",\"223\":\"44@0\",\"224\":\"44@1\",\"225\":\"45\",\"226\":\"45#page-title\",\"227\":\"45#page-information\",\"228\":\"45#page-content\",\"229\":\"45#components\",\"230\":\"45@0\",\"231\":\"45@1\",\"232\":\"46\",\"233\":\"46#highlight-features\",\"234\":\"46#bar\",\"235\":\"46#foo\",\"236\":\"49\",\"237\":\"53\",\"238\":\"53#定义\",\"239\":\"53#五个特性\",\"240\":\"53#算法分析\",\"241\":\"53#算法表示\",\"242\":\"53#算法设计策略-一般性方法\",\"243\":\"53#人工智能相关算法-了解\",\"244\":\"54\",\"245\":\"54#窗口滑动\",\"246\":\"55\",\"247\":\"55#直接插入排序\",\"248\":\"55#希尔排序\",\"249\":\"55#简单选择排序\",\"250\":\"55#堆排序\",\"251\":\"55#冒泡排序\",\"252\":\"55#快速排序-升级版的冒泡排序\",\"253\":\"55#归并排序-分治法\",\"254\":\"55#基数排序\",\"255\":\"56\",\"256\":\"56#朴素的模式匹配算法\",\"257\":\"56#改进的模式匹配算法-kmp算法\",\"258\":\"57\",\"259\":\"57#低级语言\",\"260\":\"57#高级语言-不依赖于机器硬件-按人类的思维角度出发-抽象程度高-20世纪50年代\",\"261\":\"57#编译型语言与解释型语言的区别\",\"262\":\"58\",\"263\":\"59\",\"264\":\"60\",\"265\":\"60#数据\",\"266\":\"60#运算\",\"267\":\"60#控制\",\"268\":\"60#传输\",\"269\":\"60#函数\",\"270\":\"61\",\"271\":\"61#介绍\",\"272\":\"61#引言\",\"273\":\"62\",\"274\":\"63\",\"275\":\"64\",\"276\":\"64#介绍\",\"277\":\"64#_1-gof-gang-of-four\",\"278\":\"64#一、分类\",\"279\":\"64#_1-创作设计模式-创建型模式creational-design-patterns\",\"280\":\"64#_2-结构设计模式-结构型模式structural-design-patterns\",\"281\":\"64#_3-行为设计模式-行为型模式behavioral-design-patterns\",\"282\":\"64#_4-j2ee设计模式-特别关注表示层\",\"283\":\"64#二、详述\",\"284\":\"64#_1-适配器模式\",\"285\":\"64#_2-建造者模式\",\"286\":\"64#_3-工厂模式\",\"287\":\"64#_4-抽象工厂模式\",\"288\":\"64#_1-javascript设计模式\",\"289\":\"64#_2-javascript-mv-模式\",\"290\":\"64#_3-现代模块化设计模式\",\"291\":\"64#_4-javascript命名空间模式\",\"292\":\"64#_5-插件设计模式\",\"293\":\"64#一、单例模式\",\"294\":\"64#二、二段构建模式\",\"295\":\"64#三、管理者模式\",\"296\":\"64#四、外观模式\",\"297\":\"64#五、防御编程模式\",\"298\":\"64#六、组合模式\",\"299\":\"64#七、观察者模式\",\"300\":\"64#八、中介者模式\",\"301\":\"64#九、委托模式\",\"302\":\"64#练习\",\"303\":\"64#工厂模式-factory-pattern\",\"304\":\"64#抽象工厂模式-abstract-factory-pattern\",\"305\":\"64#单例模式-singleton-pattern\",\"306\":\"64#原型模式-prototype-pattern\",\"307\":\"64#桥接-bridge\",\"308\":\"64#过滤器模式-filter-pattern-或标准模式-criteria-pattern\",\"309\":\"64#组合模式-composite-pattern\",\"310\":\"64#装饰器模式-decorator-pattern\",\"311\":\"64#外观模式-facade-pattern\",\"312\":\"64#享元模式-flyweight-pattern\",\"313\":\"64#代理模式-proxy-pattern\",\"314\":\"64#责任链模式-chain-of-responsibility-pattern\",\"315\":\"64#命令模式-command-pattern\",\"316\":\"64#解释器模式-interpreter-pattern\",\"317\":\"64#迭代器模式-iterator-pattern\",\"318\":\"64#中介者模式-mediator-pattern\",\"319\":\"64#备忘录模式-memento-pattern\",\"320\":\"64#当对象间存在一对多关系时-则使用观察者模式-observer-pattern\",\"321\":\"64#状态模式-state-pattern\",\"322\":\"64#空对象模式-null-object-pattern\",\"323\":\"64#策略模式-strategy-pattern\",\"324\":\"64#模板模式-template-pattern\",\"325\":\"64#访问者模式-visitor-pattern\",\"326\":\"64#mvc-模式\",\"327\":\"64#业务代表模式-business-delegate-pattern\",\"328\":\"64#组合实体模式-composite-entity-pattern\",\"329\":\"64#数据访问对象模式-data-access-object-pattern-或-dao-模式\",\"330\":\"64#前端控制器模式-front-controller-pattern\",\"331\":\"64#拦截过滤器模式-intercepting-filter-pattern\",\"332\":\"64#服务定位器模式-service-locator-pattern\",\"333\":\"64#传输对象模式-transfer-object-pattern\",\"334\":\"64#设计模式相关的网站\",\"335\":\"65\",\"336\":\"65#一、开闭原则-open-close-principle\",\"337\":\"65#二、里氏替换原则-liskov-substitution-principle\",\"338\":\"65#三、依赖倒置原则-dependence-inversion-principle\",\"339\":\"65#四、单一职责原则\",\"340\":\"65#五、接口隔离原则-interface-segregation-principle\",\"341\":\"65#六、迪米特法则-demeter-principle\",\"342\":\"65#七、合成复用原则-composite-reuse-principle\",\"343\":\"65#相关书籍\",\"344\":\"65@0\",\"345\":\"66\",\"346\":\"66#数组\",\"347\":\"66#矩阵\",\"348\":\"66#_1-特殊矩阵\",\"349\":\"66#_2-稀疏矩阵\",\"350\":\"66#广义表\",\"351\":\"67\",\"352\":\"67#线性表\",\"353\":\"67#_1-顺序存储结构-顺序表\",\"354\":\"67#_2-链式存储结构-链表\",\"355\":\"67#栈\",\"356\":\"67#_1-中缀表达式转换为后缀表达式\",\"357\":\"67#队列\",\"358\":\"67#_1-顺序队列\",\"359\":\"67#_2-循环队列\",\"360\":\"67#串\",\"361\":\"67#模式匹配算法\",\"362\":\"69\",\"363\":\"69#定义\",\"364\":\"69#逻辑结构\",\"365\":\"69#存储结构\",\"366\":\"69#抽象数据类型\",\"367\":\"70\",\"368\":\"70#二叉树\",\"369\":\"70#最优二叉树-哈夫曼树\",\"370\":\"70#森林\",\"371\":\"71\",\"372\":\"72\",\"373\":\"73\",\"374\":\"74\",\"375\":\"74#ci-cd\",\"376\":\"75\",\"377\":\"75#关于oss政策\",\"378\":\"75#阿里云oss-对象存储-服务\",\"379\":\"75#_1-ossutil进行上传部署资源\",\"380\":\"75#腾讯云cos服务\",\"381\":\"76\",\"382\":\"77\",\"383\":\"77#监控\",\"384\":\"78\",\"385\":\"78#前端学习方法\",\"386\":\"78#前端目前现状与问题\",\"387\":\"78#一、基础知识\",\"388\":\"78#二、技术短板\",\"389\":\"78#三、技术发展\",\"390\":\"78#前端目标\",\"391\":\"78#微前端\",\"392\":\"78#前端性能监控sentry\",\"393\":\"78#灰度部署\",\"394\":\"78#自动化测试sonic\",\"395\":\"78#低代码-lowcode-engine\",\"396\":\"78#跨平台解决方案\",\"397\":\"80\",\"398\":\"82\",\"399\":\"82#wepapp-的开发\",\"400\":\"83\",\"401\":\"83#人员\",\"402\":\"83#产品\",\"403\":\"83#过程\",\"404\":\"83#项目\",\"405\":\"84\",\"406\":\"84#需求收集\",\"407\":\"84#需求分析\",\"408\":\"86\",\"409\":\"86#一、npm\",\"410\":\"86#node-package-manager\",\"411\":\"86#常用命令\",\"412\":\"86#npx\",\"413\":\"86#二、pnpm\",\"414\":\"86#三、yarn\",\"415\":\"86@0\",\"416\":\"86@1\",\"417\":\"87\",\"418\":\"87#利用-vba-分割-excel大文件-多行按固定行数分成多个文件\",\"419\":\"88\",\"420\":\"88#基本概念\",\"421\":\"88#基本操作\",\"422\":\"88#submodule-操作\",\"423\":\"88#merge\",\"424\":\"88#因为包太大clone失败问题-rpc-fail-early-eof\",\"425\":\"88#一次性推到多个仓库问题\",\"426\":\"88#degit\",\"427\":\"88@0\",\"428\":\"88@1\",\"429\":\"89\",\"430\":\"89#介绍\",\"431\":\"89#下载与更新\",\"432\":\"89#配置\",\"433\":\"89#配置主机端口\",\"434\":\"89#gitlab-ci\",\"435\":\"90\",\"436\":\"90#关于eslint和prettier\",\"437\":\"90#关于换行格式lf和crlf\",\"438\":\"92\",\"439\":\"92#关系代数\",\"440\":\"92#sql\",\"441\":\"93\",\"442\":\"95\",\"443\":\"95#介绍\",\"444\":\"95#_1-distributions-发行版\",\"445\":\"95#linux操作-基本命令\",\"446\":\"95#关于yum\",\"447\":\"95#更换镜像源\",\"448\":\"95#快速搭建带后台的php模板网站-宝塔\",\"449\":\"95#_1-安装\",\"450\":\"95#_2-上传代码\",\"451\":\"95#_3-安装环境-创建网站\",\"452\":\"95#_4-进入网站域名\",\"453\":\"95#仓库\",\"454\":\"95#linux上传下载工具\",\"455\":\"95#_1-filezilla\",\"456\":\"95#_2-lrzsz\",\"457\":\"95#_3-sftp\",\"458\":\"95#linux-下载解压文件过程\",\"459\":\"95#linux安装mysql\",\"460\":\"95#vim学习\",\"461\":\"95#虚拟机vmware\",\"462\":\"95#_1-有时候放久了会自动黑屏\",\"463\":\"95#_2-无法上下移动查看信息-可以输出到一个文件中查看\",\"464\":\"96\",\"465\":\"96#安装homebrew\",\"466\":\"96#brew安装nvm\",\"467\":\"96#brew安装switchhosts\",\"468\":\"96#卸载软件\",\"469\":\"97\",\"470\":\"97#windows\",\"471\":\"97#linux\",\"472\":\"97#macos\",\"473\":\"97#ios\",\"474\":\"97#android\",\"475\":\"97#github-hosts-更新地址\",\"476\":\"98\",\"477\":\"98#command命令\",\"478\":\"98#批处理\",\"479\":\"98#给文件夹设置权限\",\"480\":\"98#删除文件失败问题\",\"481\":\"98#系统禁止运行脚本\",\"482\":\"100\",\"483\":\"100#intro-how-to-learn-vim\",\"484\":\"100#four-steps\",\"485\":\"100#linux中打开文件\",\"486\":\"100#模式切换\",\"487\":\"100#各种命令操作\",\"488\":\"100#appendix\",\"489\":\"100@0\",\"490\":\"100@1\",\"491\":\"101\",\"492\":\"101#概述\",\"493\":\"101#i-o软件\",\"494\":\"101#磁盘调度\",\"495\":\"102\",\"496\":\"102#文件与文件系统\",\"497\":\"102#文件的结构与组织\",\"498\":\"102#文件目录\",\"499\":\"102#存取方法和存储空间的管理\",\"500\":\"104\",\"501\":\"104#进程组成\",\"502\":\"104#三态图\",\"503\":\"104#前趋图\",\"504\":\"104#进程资源图\",\"505\":\"104#进程同步与互斥\",\"506\":\"104#进程调度\",\"507\":\"104#死锁\",\"508\":\"104#线程\",\"509\":\"105\",\"510\":\"105#进程管理\",\"511\":\"105#存储管理\",\"512\":\"105#设备管理\",\"513\":\"105#文件管理\",\"514\":\"105#作业管理\",\"515\":\"106\",\"516\":\"106#基本概念\",\"517\":\"106#管理方案\",\"518\":\"106#分区存储管理\",\"519\":\"106#分页存储管理\",\"520\":\"106#分段存储管理\",\"521\":\"106#段页式存储管理\",\"522\":\"106#虚拟存储管理\",\"523\":\"107\",\"524\":\"108\",\"525\":\"108#introduction\",\"526\":\"108#details\",\"527\":\"109\",\"528\":\"110\",\"529\":\"110#introduction\",\"530\":\"110#details\",\"531\":\"111\",\"532\":\"112\",\"533\":\"112#汇编\",\"534\":\"112#编译\",\"535\":\"112#解释\",\"536\":\"113\",\"537\":\"113#c\",\"538\":\"113#c-1\",\"539\":\"113#c-2\",\"540\":\"113#java\",\"541\":\"113#python\",\"542\":\"113#javascript\",\"543\":\"114\",\"544\":\"114#安装\",\"545\":\"114#国内镜像源地址\",\"546\":\"114#虚拟环境\",\"547\":\"114#基础语法\",\"548\":\"114#界面\",\"549\":\"114#爬虫-不要拿来做不好的事情\",\"550\":\"114#常用库\",\"551\":\"114#学习资料\",\"552\":\"115\",\"553\":\"115#安装\",\"554\":\"115#使用\",\"555\":\"115#具体示例\",\"556\":\"115#动态生成ua\",\"557\":\"115#设置延迟\",\"558\":\"115#pipelines中\",\"559\":\"116\",\"560\":\"116#从其他机器连接mysql-提示-not-allowed\",\"561\":\"116#错误链接过多-导致ip被block\",\"562\":\"117\",\"563\":\"117#安全设置\",\"564\":\"118\",\"565\":\"118#设计理念\",\"566\":\"118#基本概念\",\"567\":\"118#脚本快速生成物料模板\",\"568\":\"118#passport\",\"569\":\"119\",\"570\":\"119#官网学习\",\"571\":\"119#nodejs版本切换工具\",\"572\":\"119#restful规范\",\"573\":\"120\",\"574\":\"120#概况\",\"575\":\"120#核心概念\",\"576\":\"120#主要使用步骤\",\"577\":\"121\",\"578\":\"121#安装\",\"579\":\"121#基础操作\",\"580\":\"121#dockerfile\",\"581\":\"121#镜像\",\"582\":\"121#_1-添加镜像地址\",\"583\":\"121#_2-设置镜像-centos-7\",\"584\":\"122\",\"585\":\"122#常用命令\",\"586\":\"122#nginx-conf\",\"587\":\"123\",\"588\":\"123#方舟编译器-arkcompiler\",\"589\":\"124\",\"590\":\"124#xcomponent组件\",\"591\":\"125\",\"592\":\"125#下载安装\",\"593\":\"125#诊断开发环境\",\"594\":\"125#启用中文化插件\",\"595\":\"125#创建工程\",\"596\":\"125#代码编辑器\",\"597\":\"125#预览器\",\"598\":\"125#模拟器、真机\",\"599\":\"125#hdc常用命令\",\"600\":\"126\",\"601\":\"126#鸿蒙应用开发\",\"602\":\"126#鸿蒙应用\",\"603\":\"127\",\"604\":\"127#关于编程\",\"605\":\"127#html\",\"606\":\"127#css\",\"607\":\"127#javascript\",\"608\":\"127#附录\",\"609\":\"128\",\"610\":\"128#一-基础命名\",\"611\":\"128#二-注释的写法\",\"612\":\"128#三-id的命名\",\"613\":\"128#四-class的命名\",\"614\":\"129\",\"615\":\"130\",\"616\":\"130#jquery\",\"617\":\"130#zepto\",\"618\":\"130#lodash\",\"619\":\"130#axios\",\"620\":\"130#qrcodejs\",\"621\":\"130#echarts\",\"622\":\"130#quill\",\"623\":\"131\",\"624\":\"131#关键技术\",\"625\":\"132\",\"626\":\"132#工程环境安装与配置\",\"627\":\"132#windows-下用-vscode-或者-as-android-studio-进行开发\",\"628\":\"132#flutter依赖-类似web前端工程依赖\",\"629\":\"132#常用插件\",\"630\":\"132#基本概念一-widget\",\"631\":\"132#widget-element-renderobject\",\"632\":\"132#statelesswidget-statefulwidget\",\"633\":\"132#基本概念二、-state\",\"634\":\"132#基本概念三、-生命周期\",\"635\":\"132#其他ui组件库\",\"636\":\"132#相关问题\",\"637\":\"132#一、安卓调试时-gradle下载慢的问题-安装依赖后-依赖中一般也会慢\",\"638\":\"132#二、安装完三方fluttertoast依赖后运行报错\",\"639\":\"132#三、打包的时候报kotlin版本不对\",\"640\":\"132#四、keystore打包签名\",\"641\":\"133\",\"642\":\"134\",\"643\":\"134#特性\",\"644\":\"134#内存分配与垃圾回收\",\"645\":\"134#单线程模型\",\"646\":\"134#无需单独的声明式布局语言\",\"647\":\"134#类型\",\"648\":\"134#内置基本类型\",\"649\":\"134#函数\",\"650\":\"134#类\",\"651\":\"134#可选参数\",\"652\":\"134#继承\",\"653\":\"134#实现\",\"654\":\"134#混入\",\"655\":\"134#特殊概念\",\"656\":\"135\",\"657\":\"136\",\"658\":\"136#前端规范\",\"659\":\"137\",\"660\":\"137#命名\",\"661\":\"137#编码\",\"662\":\"137#ide配置\",\"663\":\"137#代码检查与格式化\",\"664\":\"137#codereview\",\"665\":\"139\",\"666\":\"139#_1-本地开发时-main-js中-import-scss未生效-编译build后生效\",\"667\":\"139#_2-luckysheet-无法导入图片问题-未处理onecellanchor\",\"668\":\"139#_3-chrome浏览器中如何防止input-type-password-自动选择存储的账号密码-230816\",\"669\":\"139#_4-vue中有没有好的方式处理中英文转换后的样式问题-230816\",\"670\":\"140\",\"671\":\"140#学js-es标准是最好的资料\",\"672\":\"140#基础\",\"673\":\"140#核心\",\"674\":\"140#进阶\",\"675\":\"140#atwood定律\",\"676\":\"140#推荐书籍\",\"677\":\"140#第一步\",\"678\":\"140#第二步\",\"679\":\"140#第三步\",\"680\":\"141\",\"681\":\"141#强制类型转换\",\"682\":\"141@0\",\"683\":\"141@1\",\"684\":\"142\",\"685\":\"142#fetch\",\"686\":\"142#eventloop\",\"687\":\"142#强缓存与协商缓存的区别\",\"688\":\"142#eventsource和长轮询的差别\",\"689\":\"142#websocket-是怎么保持的长连接\",\"690\":\"142#transform是否会调用gpu\",\"691\":\"142#浏览器渲染原理-重绘和重排-回流的区别-gc的两种类型是什么\",\"692\":\"143\",\"693\":\"143#_1-架构的演进\",\"694\":\"143#_2-整体流程\",\"695\":\"143#_3-渲染流程\",\"696\":\"143#_4-浏览器中的js执行机制\",\"697\":\"143#_5-性能优化\",\"698\":\"143#_6-缓存\",\"699\":\"143#_7-浏览器安全\",\"700\":\"144\",\"701\":\"144#scrollintoview\",\"702\":\"146\",\"703\":\"146#执行上下文\",\"704\":\"146#变量提升\",\"705\":\"147\",\"706\":\"148\",\"707\":\"149\",\"708\":\"150\",\"709\":\"150#介绍\",\"710\":\"150#官网文档\",\"711\":\"150#注意各端的管理规则\",\"712\":\"151\",\"713\":\"151#html\",\"714\":\"151#css\",\"715\":\"151#layout\",\"716\":\"152\",\"717\":\"152#virtual-dom\",\"718\":\"152#ssr\",\"719\":\"153\",\"720\":\"153#类型-通俗定义\",\"721\":\"153#安装与编译\",\"722\":\"153#typescript中的数据类型\",\"723\":\"153#类型注解\",\"724\":\"153#基础数据类型\",\"725\":\"153#变量声明\",\"726\":\"153#接口\",\"727\":\"153#对象类型接口\",\"728\":\"153#可索引类型接口\",\"729\":\"153#函数类型接口\",\"730\":\"153#混合类型接口\",\"731\":\"153#类类型接口\",\"732\":\"153#接口继承接口\",\"733\":\"153#接口继承类\",\"734\":\"153#泛型\",\"735\":\"153#泛型变量-t\",\"736\":\"153#函数\",\"737\":\"153#类\",\"738\":\"153#代码检查\",\"739\":\"153#_1-使用tslint\",\"740\":\"153#_2-使用eslint\",\"741\":\"157\",\"742\":\"157#变量\",\"743\":\"157#关键字与保留字\",\"744\":\"157#严格模式\",\"745\":\"157#数据类型\",\"746\":\"157#操作符\",\"747\":\"157#语句\",\"748\":\"158\",\"749\":\"159\",\"750\":\"159#内置类型-八种\",\"751\":\"159#基本数据类型\",\"752\":\"159#引用数据类型\",\"753\":\"159#null\",\"754\":\"159#undefined\",\"755\":\"159#boolean\",\"756\":\"159#number\",\"757\":\"159#bigint\",\"758\":\"159#string\",\"759\":\"159#symbol\",\"760\":\"159#object\",\"761\":\"159#function\",\"762\":\"159#array\",\"763\":\"159#date\",\"764\":\"159#json\",\"765\":\"159@0\",\"766\":\"159@1\",\"767\":\"161\",\"768\":\"162\",\"769\":\"162#settimeout-callback\",\"770\":\"162#generator\",\"771\":\"162#promise\",\"772\":\"162#async-await\",\"773\":\"163\",\"774\":\"163#什么是ecmascript-这里后续都用es代替\",\"775\":\"163#如何演变到现在的es-6-版本\",\"776\":\"163#如何查看各浏览器-nodejs对es6的支持度\",\"777\":\"163#如何处理es6的兼容问题-即如何使用babel转码器\",\"778\":\"163#新版本es7-请跳转es7\",\"779\":\"163#es6新特性有哪些\",\"780\":\"163#_1-let-和-const\",\"781\":\"163#_2-变量的解构赋值\",\"782\":\"163#_3-字符串扩展\",\"783\":\"163#_4-正则的扩展\",\"784\":\"163#_5-数值的扩展\",\"785\":\"163#_6-数组的扩展\",\"786\":\"163#_7-函数的扩展\",\"787\":\"163#_8-对象的扩展\",\"788\":\"163#_9-symbol\",\"789\":\"163#_10-proxy和reflect\",\"790\":\"163#_11-二进制数组\",\"791\":\"163#_12-set和map数据结构\",\"792\":\"163#_13-iterator和for-of循环\",\"793\":\"163#_14-generator函数\",\"794\":\"163#_15-promise对象\",\"795\":\"163#_16-异步操作和async函数\",\"796\":\"163#_17-class\",\"797\":\"163#_18-修饰器\",\"798\":\"163#_19-module\",\"799\":\"164\",\"800\":\"165\",\"801\":\"166\",\"802\":\"166#箭头函数\",\"803\":\"166#iife\",\"804\":\"167\",\"805\":\"167#原型链\",\"806\":\"168\",\"807\":\"168#this\",\"808\":\"168#call\",\"809\":\"168#apply\",\"810\":\"168#闭包\",\"811\":\"169\",\"812\":\"169#webpack\",\"813\":\"169#vite\",\"814\":\"169#两者的区别\",\"815\":\"170\",\"816\":\"170#单例模式\",\"817\":\"170#策略模式\",\"818\":\"170#代理模式\",\"819\":\"170#迭代器模式\",\"820\":\"170#发布-订阅者模式\",\"821\":\"170#命令模式\",\"822\":\"170#组合模式\",\"823\":\"170#模板方法模式\",\"824\":\"170#享元模式\",\"825\":\"170#职责链模式\",\"826\":\"170#中介者模式\",\"827\":\"170#装饰者模式\",\"828\":\"170#状态模式\",\"829\":\"170#适配器模式\",\"830\":\"171\",\"831\":\"171#单一职责\",\"832\":\"171#最少知识\",\"833\":\"171#开闭\",\"834\":\"172\",\"835\":\"172#commonjs\",\"836\":\"172#amd\",\"837\":\"172#cmd\",\"838\":\"173\",\"839\":\"173#接口与面向接口编程\",\"840\":\"173#合理使用三元运算符\",\"841\":\"173#合理使用链式调用\",\"842\":\"174\",\"843\":\"174#选择器\",\"844\":\"175\",\"845\":\"175#_1-在div进行css3动画时-translate-scale-容易发生字体变模糊的情况\",\"846\":\"175#_2\",\"847\":\"176\",\"848\":\"176#核心知识点\",\"849\":\"176#normalize\",\"850\":\"176#css预处理器\",\"851\":\"176#bootstrap\",\"852\":\"178\",\"853\":\"178#早期-固定宽度布局\",\"854\":\"178#早期-流式布局\",\"855\":\"178#弹性布局\",\"856\":\"178#响应式布局\",\"857\":\"181\",\"858\":\"182\",\"859\":\"183\",\"860\":\"183#只有一个input时按enter键会触发submit\",\"861\":\"183#ts项目打包时有时候会报一些错误\",\"862\":\"184\",\"863\":\"184#对比vue2-x-vue3-x变化在哪里\",\"864\":\"184#diff算法\",\"865\":\"184#架构部分\",\"866\":\"184#新增特性\",\"867\":\"184#不兼容的change\",\"868\":\"184#env\",\"869\":\"184#深度选择器\",\"870\":\"185\",\"871\":\"185#文档类型声明-doctype\",\"872\":\"185#基础标记-描述功能的符号-语法\",\"873\":\"185#_1-基本结构标记\",\"874\":\"185#_2-格式标记\",\"875\":\"185#_3-文本标记\",\"876\":\"185#_4-图像标记\",\"877\":\"185#_5-超链接\",\"878\":\"185#_6-表格\",\"879\":\"185#_7-表单\",\"880\":\"185#_8-框架集\",\"881\":\"185#元素\",\"882\":\"185#_1-元素嵌套\",\"883\":\"185#_2-属性和值\",\"884\":\"185#字符实体\",\"885\":\"185#示例\",\"886\":\"186\",\"887\":\"186#grid布局实现自定义表格\",\"888\":\"186@0\",\"889\":\"186@1\",\"890\":\"187\",\"891\":\"187#语义化标签\",\"892\":\"187#表单增强\",\"893\":\"187#_1-新的inputtype\",\"894\":\"187#_2-新的表单元素\",\"895\":\"187#_3-新的表单属性\",\"896\":\"187#canvas\",\"897\":\"187#svg\",\"898\":\"187#video-audio\",\"899\":\"187#webworker\",\"900\":\"187#地理定位\",\"901\":\"187#拖放api\",\"902\":\"187#webstorage\",\"903\":\"187#_1-sessionstorage\",\"904\":\"187#_2-localstorage\",\"905\":\"188\",\"906\":\"188#html版本\",\"907\":\"188#文件格式\",\"908\":\"189\",\"909\":\"189#inline\",\"910\":\"189#inline-block\",\"911\":\"189#block\",\"912\":\"189#flex\",\"913\":\"189#inline-flex\",\"914\":\"189#grid\",\"915\":\"189#inline-grid\",\"916\":\"189#table\",\"917\":\"189#none\",\"918\":\"190\",\"919\":\"190@1\",\"920\":\"192\",\"921\":\"192#一、通常用法-入门-须完全掌握\",\"922\":\"192#_1、变量声明-用-符-而less用-符\",\"923\":\"192#_2、嵌套-和less一样\",\"924\":\"192#_3、导入css文件-partial-import\",\"925\":\"192#_4、混合-mixin\",\"926\":\"192#_5、继承-extend\",\"927\":\"192#_6、运算符\",\"928\":\"192#_7、-选择器\",\"929\":\"192#_8、注释\",\"930\":\"192#_9、-function-函数\",\"931\":\"192#二、高级用法-进阶-尽可能掌握\",\"932\":\"192#_1、sassscript\",\"933\":\"192#_1-1、\",\"934\":\"192#_1-2、控制语句\",\"935\":\"192#三、使用技巧\",\"936\":\"192#_1、\",\"937\":\"192#_2、\",\"938\":\"192@1\",\"939\":\"193\",\"940\":\"193@1\",\"941\":\"194\",\"942\":\"194#命名\",\"943\":\"195\",\"944\":\"196\",\"945\":\"197\",\"946\":\"198\",\"947\":\"199\",\"948\":\"200\",\"949\":\"201\",\"950\":\"202\",\"951\":\"203\",\"952\":\"204\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[1,30],\"2\":[1],\"3\":[1],\"4\":[1,17],\"5\":[1],\"6\":[1],\"7\":[1],\"8\":[1],\"9\":[1],\"10\":[1],\"11\":[1],\"12\":[1],\"13\":[1],\"14\":[1],\"15\":[2,7],\"16\":[1,4],\"17\":[2,42],\"18\":[2],\"19\":[1,28],\"20\":[1,10],\"21\":[1,31],\"22\":[2,5],\"23\":[1],\"24\":[1],\"25\":[1],\"26\":[1],\"27\":[1,1],\"28\":[1,7],\"29\":[1,4],\"30\":[1],\"31\":[1],\"32\":[1,5],\"33\":[1],\"34\":[1,10],\"35\":[5,2],\"36\":[1,16],\"37\":[1,34],\"38\":[1,5],\"39\":[1],\"40\":[1],\"41\":[1,5],\"42\":[1,18],\"43\":[1,4],\"44\":[1,11],\"45\":[1,3],\"46\":[1,2],\"47\":[1,1],\"48\":[1,6],\"49\":[3,15],\"50\":[3],\"51\":[1,1],\"52\":[1,7],\"53\":[1,9],\"54\":[1,31],\"55\":[1,5],\"56\":[1,20],\"57\":[2],\"58\":[1,5],\"59\":[1,14],\"60\":[1,12],\"61\":[1],\"62\":[1],\"63\":[1,18],\"64\":[1,40],\"65\":[1,11],\"66\":[1,1],\"67\":[1,11],\"68\":[1,21],\"69\":[1,24],\"70\":[1],\"71\":[2,10],\"72\":[2,7],\"73\":[6,10],\"74\":[2,9],\"75\":[1],\"76\":[1],\"77\":[1,14],\"78\":[1,12],\"79\":[1,4],\"80\":[1],\"81\":[1,5],\"82\":[1,4],\"83\":[1,1],\"84\":[1],\"85\":[1],\"86\":[1],\"87\":[2],\"88\":[2],\"89\":[2],\"90\":[1],\"91\":[1,4],\"92\":[1,3],\"93\":[2,17],\"94\":[1,10],\"95\":[3,21],\"96\":[1,3],\"97\":[1],\"98\":[1,4],\"99\":[1,2],\"100\":[1,2],\"101\":[2,3],\"102\":[1],\"103\":[1,3],\"104\":[1,2],\"105\":[1,3],\"106\":[1,1],\"107\":[1],\"108\":[1],\"109\":[1],\"110\":[1,4],\"111\":[1],\"112\":[2],\"113\":[2],\"114\":[2],\"115\":[1],\"116\":[1],\"117\":[1,13],\"118\":[1],\"119\":[1,6],\"120\":[1,15],\"121\":[1,16],\"122\":[1],\"123\":[4],\"124\":[2,3],\"125\":[2,2],\"126\":[1],\"127\":[2,10],\"128\":[2,3],\"129\":[2,4],\"130\":[2,12],\"131\":[1],\"132\":[1,13],\"133\":[1,8],\"134\":[1,7],\"135\":[1,9],\"136\":[1],\"137\":[1],\"138\":[1],\"139\":[1],\"140\":[1],\"141\":[1],\"142\":[1],\"143\":[1,13],\"144\":[1],\"145\":[1,14],\"146\":[1,9],\"147\":[2],\"148\":[1],\"149\":[1],\"150\":[1],\"151\":[1],\"152\":[1],\"153\":[1],\"154\":[1,8],\"155\":[1,24],\"156\":[1],\"157\":[1,7],\"158\":[1,2],\"159\":[1],\"160\":[2,7],\"161\":[2],\"162\":[2],\"163\":[1],\"164\":[1],\"165\":[1],\"166\":[1],\"167\":[1,2],\"168\":[1,11],\"169\":[1,8],\"170\":[1],\"171\":[1],\"172\":[1],\"173\":[1,9],\"174\":[2,88],\"175\":[2,5],\"176\":[1,4],\"177\":[1,13],\"178\":[1,4],\"179\":[1,1],\"180\":[1,7],\"181\":[1,2],\"182\":[1,3],\"183\":[1,3],\"184\":[2,45],\"185\":[3,26],\"186\":[4],\"187\":[1],\"188\":[4],\"189\":[1],\"190\":[4],\"191\":[1],\"192\":[1],\"193\":[2],\"194\":[1],\"195\":[1],\"196\":[1],\"197\":[2],\"198\":[null,null,1],\"199\":[4,40],\"200\":[null,null,1],\"201\":[null,null,1],\"202\":[2,10],\"203\":[null,null,1],\"204\":[null,null,1],\"205\":[1,44],\"206\":[null,null,1],\"207\":[null,null,1],\"208\":[2,32],\"209\":[2,19],\"210\":[2,25],\"211\":[2,18],\"212\":[2,16],\"213\":[2,18],\"214\":[2,2],\"215\":[1,2],\"216\":[1,7],\"217\":[2,2],\"218\":[1,26],\"219\":[1,6],\"220\":[2,8],\"221\":[3,4],\"222\":[1],\"223\":[null,null,1],\"224\":[null,null,1],\"225\":[2,10],\"226\":[2,20],\"227\":[2,27],\"228\":[2,30],\"229\":[1,29],\"230\":[null,null,1],\"231\":[null,null,3],\"232\":[1],\"233\":[2],\"234\":[1,2],\"235\":[1,2],\"236\":[1],\"237\":[2],\"238\":[1,8],\"239\":[1,15],\"240\":[1,18],\"241\":[1],\"242\":[3,16],\"243\":[3],\"244\":[1],\"245\":[1],\"246\":[1],\"247\":[1,6],\"248\":[1,8],\"249\":[1,13],\"250\":[1,10],\"251\":[1,37],\"252\":[3,52],\"253\":[3],\"254\":[1,12],\"255\":[1],\"256\":[1],\"257\":[3],\"258\":[1],\"259\":[1,26],\"260\":[6,33],\"261\":[1],\"262\":[1],\"263\":[1,11],\"264\":[1],\"265\":[1,5],\"266\":[1,4],\"267\":[1,3],\"268\":[1,2],\"269\":[1],\"270\":[1],\"271\":[1,8],\"272\":[1,18],\"273\":[1,3],\"274\":[1],\"275\":[1],\"276\":[1,11],\"277\":[6,3],\"278\":[2],\"279\":[6,16],\"280\":[6,22],\"281\":[6,33],\"282\":[4,25],\"283\":[2,1],\"284\":[2,96],\"285\":[2,53],\"286\":[2,68],\"287\":[2],\"288\":[2,175],\"289\":[4],\"290\":[2,5],\"291\":[2],\"292\":[2],\"293\":[2,8],\"294\":[2],\"295\":[2],\"296\":[2],\"297\":[2],\"298\":[2],\"299\":[2],\"300\":[2],\"301\":[2],\"302\":[1,36],\"303\":[4,128],\"304\":[5,175],\"305\":[4,285],\"306\":[4,177],\"307\":[3,125],\"308\":[6,107],\"309\":[4,141],\"310\":[4,126],\"311\":[4,97],\"312\":[4,176],\"313\":[4,132],\"314\":[6,145],\"315\":[4,146],\"316\":[4,118],\"317\":[4,107],\"318\":[4,117],\"319\":[4,108],\"320\":[5,135],\"321\":[4,126],\"322\":[5,86],\"323\":[4,103],\"324\":[4,111],\"325\":[4,108],\"326\":[2,84],\"327\":[5,86],\"328\":[5,94],\"329\":[8,115],\"330\":[5,83],\"331\":[5,96],\"332\":[5,118],\"333\":[5,111],\"334\":[1,36],\"335\":[1],\"336\":[6,22],\"337\":[6,21],\"338\":[6,15],\"339\":[2,8],\"340\":[6,1],\"341\":[5,8],\"342\":[6,3],\"343\":[1],\"344\":[null,null,1],\"345\":[2],\"346\":[1,2],\"347\":[1],\"348\":[2],\"349\":[2],\"350\":[1],\"351\":[1,1],\"352\":[1,21],\"353\":[4,8],\"354\":[4,15],\"355\":[1,15],\"356\":[2,20],\"357\":[1,13],\"358\":[2],\"359\":[2],\"360\":[1,1],\"361\":[1],\"362\":[1],\"363\":[1,36],\"364\":[1,13],\"365\":[1,6],\"366\":[1,52],\"367\":[1],\"368\":[1],\"369\":[3,20],\"370\":[1],\"371\":[3],\"372\":[1,11],\"373\":[1],\"374\":[1],\"375\":[2,8],\"376\":[1],\"377\":[1,1],\"378\":[3],\"379\":[2,2],\"380\":[1,1],\"381\":[1],\"382\":[1],\"383\":[1],\"384\":[1],\"385\":[1,3],\"386\":[1],\"387\":[2,1],\"388\":[2,1],\"389\":[2,1],\"390\":[1,3],\"391\":[1,8],\"392\":[1],\"393\":[1],\"394\":[1],\"395\":[4],\"396\":[1,6],\"397\":[1,1],\"398\":[1,1],\"399\":[2],\"400\":[1,4],\"401\":[1,6],\"402\":[1,2],\"403\":[1],\"404\":[1],\"405\":[1,15],\"406\":[1],\"407\":[1],\"408\":[1],\"409\":[2],\"410\":[3],\"411\":[1,12],\"412\":[1,7],\"413\":[1,11],\"414\":[2],\"415\":[null,null,1],\"416\":[null,null,3],\"417\":[1],\"418\":[6,140],\"419\":[1],\"420\":[1,17],\"421\":[1,50],\"422\":[2,12],\"423\":[1,14],\"424\":[6,15],\"425\":[1,24],\"426\":[1],\"427\":[null,null,1],\"428\":[null,null,1],\"429\":[1],\"430\":[1,4],\"431\":[1,78],\"432\":[1],\"433\":[1,14],\"434\":[2,7],\"435\":[1],\"436\":[1,9],\"437\":[1,36],\"438\":[1],\"439\":[1],\"440\":[1],\"441\":[1,7],\"442\":[1],\"443\":[1],\"444\":[4,4],\"445\":[3,98],\"446\":[1],\"447\":[1,29],\"448\":[1,3],\"449\":[2,18],\"450\":[2,9],\"451\":[3,9],\"452\":[2,6],\"453\":[1,12],\"454\":[1],\"455\":[2],\"456\":[2,9],\"457\":[2,7],\"458\":[2,31],\"459\":[1,9],\"460\":[1],\"461\":[1],\"462\":[2,2],\"463\":[3,6],\"464\":[1],\"465\":[1,24],\"466\":[1,33],\"467\":[1,4],\"468\":[1,6],\"469\":[1],\"470\":[1],\"471\":[1],\"472\":[1],\"473\":[1],\"474\":[1],\"475\":[3,14],\"476\":[1],\"477\":[1,32],\"478\":[1,40],\"479\":[1,8],\"480\":[1,29],\"481\":[1,12],\"482\":[1],\"483\":[1,8],\"484\":[2,7],\"485\":[1,4],\"486\":[1,26],\"487\":[1,163],\"488\":[1,1],\"489\":[null,null,1],\"490\":[null,null,2],\"491\":[1],\"492\":[1],\"493\":[2],\"494\":[1],\"495\":[1],\"496\":[1],\"497\":[1],\"498\":[1],\"499\":[1],\"500\":[1,2],\"501\":[1,6],\"502\":[1,4],\"503\":[1,7],\"504\":[1,9],\"505\":[1,41],\"506\":[1,6],\"507\":[1],\"508\":[1],\"509\":[1],\"510\":[1],\"511\":[1],\"512\":[1],\"513\":[1],\"514\":[1],\"515\":[1],\"516\":[1],\"517\":[1],\"518\":[1],\"519\":[1],\"520\":[1],\"521\":[1],\"522\":[1],\"523\":[1],\"524\":[2],\"525\":[1,5],\"526\":[1,2],\"527\":[1,4],\"528\":[2],\"529\":[1,5],\"530\":[1,2],\"531\":[1,4],\"532\":[1],\"533\":[1],\"534\":[1],\"535\":[1],\"536\":[1],\"537\":[1],\"538\":[1],\"539\":[1],\"540\":[1],\"541\":[1],\"542\":[1],\"543\":[1],\"544\":[1,3],\"545\":[1,24],\"546\":[1],\"547\":[1],\"548\":[1],\"549\":[3,2],\"550\":[1,3],\"551\":[1,2],\"552\":[1],\"553\":[1,2],\"554\":[1,23],\"555\":[1],\"556\":[1,97],\"557\":[1,8],\"558\":[1,40],\"559\":[2],\"560\":[4,2],\"561\":[2,10],\"562\":[1],\"563\":[1],\"564\":[1],\"565\":[1,1],\"566\":[1,27],\"567\":[1,8],\"568\":[1,55],\"569\":[1],\"570\":[1],\"571\":[1,19],\"572\":[1,6],\"573\":[1,1],\"574\":[1,1],\"575\":[1,4],\"576\":[1,25],\"577\":[1],\"578\":[1],\"579\":[1,29],\"580\":[1,21],\"581\":[1,5],\"582\":[2,55],\"583\":[5,30],\"584\":[1,1],\"585\":[1,3],\"586\":[2],\"587\":[1,2],\"588\":[3],\"589\":[1,3],\"590\":[1],\"591\":[2,6],\"592\":[1,3],\"593\":[1,8],\"594\":[1,9],\"595\":[1,24],\"596\":[1,133],\"597\":[1,6],\"598\":[2],\"599\":[1],\"600\":[1,4],\"601\":[1,6],\"602\":[1,9],\"603\":[1],\"604\":[1,1],\"605\":[1],\"606\":[1],\"607\":[1],\"608\":[1,1],\"609\":[1],\"610\":[3,70],\"611\":[3,4],\"612\":[3,101],\"613\":[3,59],\"614\":[1],\"615\":[1],\"616\":[1],\"617\":[1],\"618\":[1],\"619\":[1],\"620\":[1],\"621\":[1],\"622\":[1],\"623\":[1,11],\"624\":[1,4],\"625\":[1],\"626\":[1],\"627\":[8,118],\"628\":[3,31],\"629\":[1,14],\"630\":[2,4],\"631\":[3],\"632\":[2,4],\"633\":[2,5],\"634\":[2],\"635\":[1,11],\"636\":[1],\"637\":[5,36],\"638\":[2,84],\"639\":[2,22],\"640\":[2],\"641\":[1],\"642\":[1,7],\"643\":[1,11],\"644\":[1],\"645\":[1,4],\"646\":[1],\"647\":[1,15],\"648\":[1,6],\"649\":[1],\"650\":[1],\"651\":[1,2],\"652\":[1],\"653\":[1],\"654\":[1],\"655\":[1,4],\"656\":[1],\"657\":[1,11],\"658\":[1],\"659\":[1],\"660\":[1],\"661\":[1],\"662\":[1],\"663\":[1],\"664\":[1],\"665\":[1],\"666\":[7],\"667\":[4],\"668\":[6],\"669\":[4],\"670\":[1,23],\"671\":[1,19],\"672\":[1,10],\"673\":[1,15],\"674\":[1,8],\"675\":[1,2],\"676\":[1],\"677\":[1,8],\"678\":[1,8],\"679\":[1,7],\"680\":[1],\"681\":[1],\"682\":[null,null,2],\"683\":[null,null,1],\"684\":[2],\"685\":[1,5],\"686\":[1],\"687\":[1],\"688\":[1],\"689\":[2],\"690\":[1],\"691\":[4],\"692\":[1],\"693\":[2,26],\"694\":[2,2],\"695\":[1],\"696\":[2],\"697\":[2,2],\"698\":[2],\"699\":[2],\"700\":[1],\"701\":[1],\"702\":[1],\"703\":[1],\"704\":[1,17],\"705\":[1],\"706\":[3,39],\"707\":[1],\"708\":[1],\"709\":[1,4],\"710\":[1],\"711\":[1],\"712\":[1],\"713\":[1],\"714\":[1],\"715\":[1],\"716\":[1],\"717\":[2],\"718\":[1],\"719\":[1,7],\"720\":[3,43],\"721\":[1,23],\"722\":[1,17],\"723\":[1,6],\"724\":[1,158],\"725\":[1,1],\"726\":[1,7],\"727\":[1,30],\"728\":[1],\"729\":[1],\"730\":[1],\"731\":[1],\"732\":[1],\"733\":[1],\"734\":[1,2],\"735\":[1],\"736\":[1,100],\"737\":[1],\"738\":[1,25],\"739\":[2,36],\"740\":[2],\"741\":[1],\"742\":[1],\"743\":[1],\"744\":[1],\"745\":[1],\"746\":[1],\"747\":[1],\"748\":[1],\"749\":[1,28],\"750\":[3],\"751\":[1,7],\"752\":[1,4],\"753\":[1,10],\"754\":[1],\"755\":[1],\"756\":[1],\"757\":[1],\"758\":[1],\"759\":[1,5],\"760\":[1,7],\"761\":[1,6],\"762\":[1,1],\"763\":[1],\"764\":[1],\"765\":[null,null,2],\"766\":[null,null,1],\"767\":[1],\"768\":[1],\"769\":[3],\"770\":[1],\"771\":[1],\"772\":[2],\"773\":[1],\"774\":[3,24],\"775\":[3,36],\"776\":[2,21],\"777\":[3,9],\"778\":[3],\"779\":[1],\"780\":[4,30],\"781\":[2],\"782\":[2],\"783\":[2],\"784\":[2],\"785\":[2],\"786\":[2],\"787\":[2],\"788\":[2],\"789\":[2],\"790\":[2],\"791\":[2],\"792\":[3],\"793\":[2],\"794\":[2],\"795\":[2],\"796\":[2],\"797\":[2],\"798\":[2],\"799\":[1],\"800\":[1],\"801\":[1],\"802\":[1],\"803\":[1],\"804\":[1],\"805\":[1],\"806\":[1,2],\"807\":[1],\"808\":[1],\"809\":[1],\"810\":[1],\"811\":[1],\"812\":[1],\"813\":[1],\"814\":[1],\"815\":[1,11],\"816\":[1],\"817\":[1],\"818\":[1],\"819\":[1],\"820\":[3],\"821\":[1],\"822\":[1],\"823\":[1],\"824\":[1],\"825\":[1],\"826\":[1],\"827\":[1],\"828\":[1],\"829\":[1],\"830\":[1],\"831\":[1],\"832\":[1],\"833\":[1],\"834\":[1],\"835\":[1],\"836\":[1],\"837\":[1],\"838\":[1],\"839\":[1],\"840\":[1,3],\"841\":[1,3],\"842\":[1],\"843\":[1,52],\"844\":[1],\"845\":[5,31],\"846\":[2],\"847\":[1],\"848\":[1,7],\"849\":[1],\"850\":[1],\"851\":[1,2],\"852\":[1],\"853\":[2],\"854\":[2,2],\"855\":[1],\"856\":[1,11],\"857\":[2],\"858\":[1,12],\"859\":[2],\"860\":[1,25],\"861\":[1,15],\"862\":[2],\"863\":[4],\"864\":[1,66],\"865\":[1,2],\"866\":[1,12],\"867\":[1,135],\"868\":[2,6],\"869\":[1,10],\"870\":[1],\"871\":[3,30],\"872\":[3,8],\"873\":[2,32],\"874\":[2,40],\"875\":[2,45],\"876\":[2,2],\"877\":[2,2],\"878\":[2],\"879\":[2],\"880\":[2,104],\"881\":[1,4],\"882\":[2],\"883\":[2],\"884\":[1,65],\"885\":[1,2],\"886\":[1],\"887\":[1],\"888\":[null,null,2],\"889\":[null,null,1],\"890\":[1],\"891\":[1],\"892\":[1,6],\"893\":[2,74],\"894\":[2,56],\"895\":[2,99],\"896\":[1],\"897\":[1],\"898\":[2],\"899\":[1],\"900\":[1],\"901\":[1],\"902\":[1,6],\"903\":[2],\"904\":[2,5],\"905\":[1,6],\"906\":[1,21],\"907\":[1,4],\"908\":[1,1],\"909\":[1,10],\"910\":[2,5],\"911\":[1,2],\"912\":[1,20],\"913\":[2,1],\"914\":[1],\"915\":[2],\"916\":[1],\"917\":[1,7],\"918\":[1],\"919\":[null,null,1],\"920\":[1,37],\"921\":[5],\"922\":[6,29],\"923\":[4,31],\"924\":[5,11],\"925\":[4,25],\"926\":[4,17],\"927\":[2,70],\"928\":[2,25],\"929\":[2,49],\"930\":[4,14],\"931\":[5],\"932\":[2,5],\"933\":[2,11],\"934\":[3],\"935\":[2],\"936\":[2],\"937\":[2],\"938\":[null,null,1],\"939\":[1],\"940\":[null,null,1],\"941\":[1],\"942\":[1,12],\"943\":[1,3],\"944\":[1],\"945\":[1],\"946\":[1],\"947\":[1],\"948\":[1],\"949\":[1],\"950\":[1],\"951\":[1],\"952\":[1]},\"averageFieldLength\":[1.5826018630748657,22.03488495717317,0.09540284050722485],\"storedFields\":{\"0\":{\"h\":\"About Author\"},\"1\":{\"h\":\"介绍\",\"t\":[\"Good thinking is the basis of doing anything well\",\"经过在医药和互联网行业的多年工作经验，体会到传统行业与互联网行业差异性，也认识到基础和知识完备性的重要，急于求成只会是浮于表面，杂而不精，置身自己于浩瀚的知识中而苦苦挣扎，更不要说体会技术带来的乐趣了。\",\"技术上：建立自身知识体系，除应用层API之外，更多地关注其底层原理、设计思路和通用理念，对未来中短期技术发展方向有大致思路，并思考将其与过往的经验相结合，构筑进自己的知识体系中。\",\"业务上：站在行业和用户的角度，并关注产品UE背后的决策思考，强化软技能的同时，不断提升自己统筹项目的能力。\"]},\"2\":{\"h\":\"关于学习\"},\"3\":{\"h\":\"其它\"},\"4\":{\"h\":\"架构设计\",\"t\":[\"当软件的规模和复杂大到一定的程度，需要架构指导\",\"架构：系统的顶层设计\",\"需要判断和取舍的思维，真正目的是为了 解决软件系统复杂度带来的问题\",\"不赞成在业务团队设置专门的架构岗位，因为架构是一种能力，而不是职位。如果恰巧，你就在这样的岗位上，那么请一定不要画完架构图就算完成工作，要深入代码细节中去，这样才能发现设计中存在的问题，赢得程序员的尊重。\"]},\"5\":{\"h\":\"高性能\"},\"6\":{\"h\":\"高可用\"},\"7\":{\"h\":\"高扩展性\"},\"8\":{\"h\":\"安全性\"},\"9\":{\"h\":\"计算机基础\"},\"10\":{\"h\":\"2023年\"},\"11\":{\"h\":\"ChatGPT\"},\"12\":{\"h\":\"文心一言\"},\"13\":{\"h\":\"拼多多市值超过阿里巴巴\"},\"14\":{\"h\":\"2024年\"},\"15\":{\"h\":\"CentOS 全面停止维护\",\"t\":[\"公告指出 CentOS 7在2024年6月30日停止技术服务支持，(在此之前 2022年1月1日起CentOS官方已经不再对CentOS 8提供服务支持)\"]},\"16\":{\"h\":\"巴黎奥运会\",\"t\":[\"7月到8月12日；郑钦文创造历史，三大球就没那么好看了\",\"花游夺金\"]},\"17\":{\"h\":\"Project home\",\"t\":[\"This is an example of a project homepage. You can place your main content here.\",\"To use this layout, you need to set home: true in the page front matter.\",\"For related descriptions of configuration items, please see Project HomePage Layout Config.\"]},\"18\":{\"h\":\"Portfolio Home\"},\"19\":{\"h\":\"Description\",\"t\":[\"This is a portfolio home page demo.\",\"To use this layout, you should set home: true and portfolio: true in the page front matter.\",\"For related configuration docs, please see portfolio homepage.\"]},\"20\":{\"h\":\"程序设计\",\"t\":[\"结构化程序设计（抽象问题，解决问题） = 语言 + 数据结构 + 算法\",\"另一种设计技术：面向对象\"]},\"21\":{\"h\":\"软件开发\",\"t\":[\"软件通常分为系统软件和应用软件，早期的软件主要就是指程序。\",\"灵活性和没有银弹（Silver Bullet），是软件行业的有趣之处， 在这个行业里，一个问题会有很多种解法，即使是最简单的函数也至少可以写出10种不同的代码来实现， 因此，知识储备、判断力和思辨力是软件行业给我们提出的更高要求，任何不区分上下文和情景的教条都有可能在实施过程中遭遇惨败。\",\"如今各种软件越来越复杂（技术复杂度、业务复杂度），需要用工程化思维去进行软件开发，保证软件的质量等，就是软件工程。\",\"比如Web应用开发前后端分离方式，整体是一个工程，前后端各自也算是独立工程，需要整体把控。\",\"在关注技术和流程的同时，更需要关注：价值、业务、文档能力、英语能力...\",\"任何时候，产品的质量都是第一位的\"]},\"22\":{\"h\":\"价值导向，领域知识\",\"t\":[\"软件是用来创造价值的，创造 有意义的好的价值\",\"领域业务知识： 有一定的业务知识知道业务背后的逻辑很重要\"]},\"23\":{\"h\":\"需求收集与分析\"},\"24\":{\"h\":\"概设\"},\"25\":{\"h\":\"详设\"},\"26\":{\"h\":\"设计编码\"},\"27\":{\"h\":\"文档能力\",\"t\":[\"编写文档的能力\"]},\"28\":{\"h\":\"代码美学\",\"t\":[\"需要经验、阅读等等获得的\",\"编写干净、文档良好且可维护的（也就是尽量写给别人看的）代码；当有特殊思路时应该写上注释\"]},\"29\":{\"h\":\"测试\",\"t\":[\"单元测试\",\"黑盒\",\"白盒\",\"自动化测试\"]},\"30\":{\"h\":\"集成部署\"},\"31\":{\"h\":\"运行维护\"},\"32\":{\"h\":\"有效的项目管理\",\"t\":[\"制定计划(方向与目标)\",\"进度把控\",\"协调沟通\",\"风险管理\"]},\"33\":{\"h\":\"计算机组成与结构\"},\"34\":{\"h\":\"硬件组成\",\"t\":[\"五大部件：运算器，控制器，存储器（内部、外部），输入设备，输出设备(输入输出设备合称外设)\"]},\"35\":{\"h\":\"CPU（Central Processing Unit）\",\"t\":[\"中央处理单元，硬件系统核心\"]},\"36\":{\"h\":\"功能\",\"t\":[\"程序控制：控制程序执行顺序\",\"操作控制：产生指令操作信号(一条指令功能需要若干操作信号配合)并送往对应的部件\",\"时间控制：控制指令执行过程中操作信号的出现时间、持续时间及出现的时间顺序\",\"数据处理：是CPU最根本的任务，算术运算、逻辑运算等方式\",\"内外部中断(异常)响应处理\"]},\"37\":{\"h\":\"\",\"t\":[\"运算器：执行所有算术、逻辑运算及逻辑测试\",\"ALU算术逻辑单元：算术运算，逻辑运算\",\"AC累加寄存器：暂存数据，运算结果或者源操作数；至少有一个\",\"DR数据缓冲寄存器：暂时存放内存的指令或数据\",\"PSW状态条件寄存器：保存指令运行结果条件码内容\",\"控制器：控制整个CPU工作，CPU的核心\",\"指令寄存器IR：暂存指令\",\"程序计数器PC：程序（下一条）指令执行地址\",\"地址寄存器AR：CPU访问的内存单元地址\",\"指令译码器ID：对指令操作码分析\",\"寄存器组\",\"专用寄存器：也就是运算器和控制器中的\",\"通用寄存器：用途广泛\",\"内部总线\",\"依据指令的不同阶段来区分二进制的指令和数据\"]},\"38\":{\"h\":\"多核CPU\",\"t\":[\"最大优点: 满足用户同时进行多任务处理\",\"单核多线程是交替执行任务，转换时间短\",\"发挥多核性能也需要操作系统和软件的合理分配\"]},\"39\":{\"h\":\"体系结构\"},\"40\":{\"h\":\"分类\"},\"41\":{\"h\":\"按处理机数量分类\",\"t\":[\"单处理系统\",\"并行处理系统：两个以上处理机互联\",\"分布式处理系统：物理上远距离而且松耦合的多计算机系统\"]},\"42\":{\"h\":\"按并行程度分类\",\"t\":[\"Flynn分类法（指令流-控制部分处理 和数据流-处理器处理） \",\"SISD 单指令流、单数据流\",\"SIMD 单多\",\"MISD（不实际，不存在）\",\"MIMD 多多\",\"冯泽云分类法\",\"Handler分类法\",\"Kuck分类法\"]},\"43\":{\"h\":\"指令系统\",\"t\":[\"不同的处理器族支持不同的指令集体系结构（不同CPU 的汇编指令和结构是不同的）\"]},\"44\":{\"h\":\"计算机指令的组成\",\"t\":[\"操作码，操作数(地址码) CPI：指令时钟周期数是指CPU每执行一条指令所需的时钟周期数 MIPS：每秒百万条指令 MHz：10的6次方 GHz：10的9次方\"]},\"45\":{\"h\":\"计算机执行过程\",\"t\":[\"取指令，分析指令，执行指令\"]},\"46\":{\"h\":\"指令寻址方式\",\"t\":[\"顺序，跳跃\"]},\"47\":{\"h\":\"指令操作数的寻址方式\",\"t\":[\"立即寻址直接寻址间接寻址寄存器寻址基址寻址变址寻址\"]},\"48\":{\"h\":\"CISC和RISC\",\"t\":[\"CISC：complex 复杂指令集计算机\",\"RISC：reduced 精简指令集计算机\"]},\"49\":{\"h\":\"流水线（RISC）\",\"t\":[\"原理： 将指令分成不同段，每段由不同的部分去处理\",\"流水线技术：\",\"超流水线技术：时间换空间\",\"超标量技术：空间换时间\",\"超长指令字：空间换时间\",\"流水线周期\",\"流水线执行时间\",\"流水线吞吐率：单位时间内处理的指令的条数\",\"流水线加速比：不采用流水线技术\"]},\"50\":{\"h\":\"阵列处理机、并行处理机、多处理机\"},\"51\":{\"h\":\"存储系统\",\"t\":[\"分级存储体系\"]},\"52\":{\"h\":\"层次结构\",\"t\":[\"（解决存储容量成本和速度之间的矛盾问题）：CPU内部通用寄存器，cache，主存储器，联机磁盘存储器，光盘和磁盘存储器\"]},\"53\":{\"h\":\"两级存储\",\"t\":[\"cache-主存，主存-辅存主存主要是由 DRAM(动态随机存取存储器) 构成的 局部性原理：时间局部性，空间局部性\"]},\"54\":{\"h\":\"高速缓存cache\",\"t\":[\"存储当前最活跃的程序和数据，直接与CPU交互 控制部分和存储器组成 是主存一部分内容的副本，对程序员来说是透明的\",\"地址映射\",\"CPU送出的是主存单元地址，从cache存储器中读写信息，所以需要将主存单元地址转换为cache存储器地址；硬件自动完成映射\",\"直接映射（最容易发生冲突）：cache中的块与主存中的块 是一一对应而且固定的\",\"全相连映射（最不容易发生块冲突）\",\"组组相连映射\",\"替换算法：cache中的块替换\",\"随机替换\",\"先进先出\",\"近期最少使用（最常用）\",\"优先替换\",\"命中率及平均时间\",\"命中与未命中概率相加：90%*1 + 10%*1000\"]},\"55\":{\"h\":\"内存编址计算\",\"t\":[\"1B=8b（存储单位），K，M，G是数量单位\"]},\"56\":{\"h\":\"磁盘\",\"t\":[\"磁盘的结构和参数：正反两面，磁道（同心圆），扇区磁头先找磁道，再找扇区（寻道时间：耗时最长，等待时间）\",\"调度算法\",\"先来先服务\",\"最短寻道时间优先SSTF：会产生饥饿现象，即远处进程可能永远无法访问\",\"扫描算法SCAN：电梯算法（经典）\",\"单向扫描调度算法CSCAN：与电梯不同，只做单向移动\"]},\"57\":{\"h\":\"输入/输出技术\"},\"58\":{\"h\":\"内存和接口地址编址方法\",\"t\":[\"内存与接口地址独立编址方法：缺点是用于接口的指令太少，功能太弱\",\"内存与接口地址统一编址方法：缺点在于整个地址空间被分成两部分\"]},\"59\":{\"h\":\"计算机与外设间的数据交互方式\",\"t\":[\"程序控制方式：CPU主动查询外设是否完成数据传输，效率极低\",\"程序中断方式：外设数据传输完成后，向CPU发送中断（过程：上课有电话进来的例子）\",\"DMA方式（直接主存存取）：DMA控制器完成\",\"在一个总线周期结束后，CPU会响应DMA请求开始读取数据；CPU响应程序中断方式请求是在一条指令执行结束时\"]},\"60\":{\"h\":\"总线结构\",\"t\":[\"总线：指计算机设备和设备之间传输信息的公共数据通道\",\"总线分类：\",\"内部总线-系统总线：数据总线，地址总线，控制总线\",\"外部总线 单工、半双工、全双工\"]},\"61\":{\"h\":\"数据表示\"},\"62\":{\"h\":\"进制\"},\"63\":{\"h\":\"进制表示\",\"t\":[\"0b(二进制)，0x/H(十六进制)\",\"如 0b110111、 0x4FFFF、4FFFFH\",\"D(Demical) 十进制\",\"B(Binary) 二进制\",\"O(Octal) 八进制\",\"H(Hexadicimal) 十六进制\"]},\"64\":{\"h\":\"进制转换\",\"t\":[\"R进制转十进制：位权展开法\",\"41000H: 4×164+1×163+0×162+0×161+0×160 = 266240\",\"浮点数转二进制：乘2取整法\",\"十进制转R进制：短除法\",\" 快捷方式：38 = 25 + 22 + 21 = 100110\",\"M进制转N进制：先转十进制，再转N进制\",\"2转8、2转16（每3位三合一，每4位四合一）：快速转换\",\"如 100 100 转 8， 三个一组：100 = 4 100 = 4，所以结果是 44 如 10 0100 转 16 四个一组：0010 = 21 0100 = 4， 所以结果为 24\"]},\"65\":{\"h\":\"机器数\",\"t\":[\"0和1表示（即二进制计数制），小数点隐含不占位置\",\"无符号数：没有符号位，表示正数\",\"带符号数：机器数的最高位为符号位（正0负1，单双符号位？）\"]},\"66\":{\"h\":\"真值\",\"t\":[\"机器数对应的实际数值\"]},\"67\":{\"h\":\"定点数\",\"t\":[\"定点表示法：\",\"纯小数（定点小数，小数点固定在最高(有效数值)位之前）\",\"纯整数（定点整数，小数点固定在最低(有效数值)位之后）\"]},\"68\":{\"h\":\"\",\"t\":[\"计算机中浮点数的表示(类似科学计数法，只不过十进制变为2进制)：N=F*2E E为阶码，F为尾数；\",\"阶符 --- 阶码 --- 数符 --- 尾数\",\"所能表示的数值范围由阶码确定，所表示的数值精度由尾数确定\",\"浮点数运算：科学计数法(尾数、指数、基数)；计算步骤：对阶（小对大）\"]},\"69\":{\"h\":\"\",\"t\":[\"原码：一个数的正常二进制（0有正0和负0）\",\"[+1]原 = 0 0000001\",\"反码：正数的反码为原码，负数的反码是除符号位外其它各位按位取反（0有正0和负0）\",\"补码：正数的补码为原码，负数的补码为反码末位加1并有进位则进位（0只有一种形式）\",\"移码：原码的补码的符号位取反\",\"数值表示范围：机器字长为n时各种码取值范围（定点整数，定点小数）\",\"原码：-(2n-1 - 1) ~ 2n-1 - 1 反码：-(2n-1 - 1) ~ 2n-1 - 1 补码：-2n-1 ~ 2n-1 - 1 移码：-2n-1 ~ 2n-1 - 1\"]},\"70\":{\"h\":\"校验码\"},\"71\":{\"h\":\"1. 码距\",\"t\":[\"在两个编码中，从A码到B码转换所需要改变的位数 如： 00 转为 11，码距为2 一般：码距越大，越有利于检错和纠错\"]},\"72\":{\"h\":\"2. 奇偶校验码\",\"t\":[\"在编码中增加1位校验位来使编码中1的个数为奇数或者偶数，从而使码距变为2（出错位和校验位）奇校验：奇数个1偶校验：偶数个1只能检一位错，无法纠错\"]},\"73\":{\"h\":\"3. 循环冗余校验码CRC（cyclic redundancy check）\",\"t\":[\"只能检错，不能纠错CRC编码计算步骤：\",\"有一个约定的生成多项式\",\"在原始信息位后加多项式最高次幂个0\",\"将补0后的信息与多项式(对应的二进制)做模2除法，得到余数（前面加0补足最高次幂个）\",\"将原始信息与余数连接起来得到编码\"]},\"74\":{\"h\":\"4. 海明码\",\"t\":[\"本质也是利用奇偶性构成方法是在确定位置（2^n）上插入k个校验位，通过扩大码距实现检错和纠错数据位是n位，校验位是k位；根据数据位计算校验位的值（总共的位数是数据位+校验位），从而得到海明码2的k次方-1≥n+k\"]},\"75\":{\"h\":\"可靠性与性能\"},\"76\":{\"h\":\"可靠性\"},\"77\":{\"h\":\"可靠性指标\",\"t\":[\"平均无故障时间 MTTF=1/失效率\",\"平均故障修复时间 MTTR=1/修复率\",\"平均故障间隔时间 MTBF=MTTF+MTTR\",\"系统可用性 = MTTF/（MTTF+MTTR）*100%\"]},\"78\":{\"h\":\"串并联系统可靠性\",\"t\":[\"串联：R1*R2……(一个设备不可靠，都崩溃)\",\"并联(所有设备不可靠，才崩溃)：1-（1-R1）*（1-R2）…（1-Rn）\",\"N模冗余系统：\"]},\"79\":{\"h\":\"提高可靠性的措施\",\"t\":[\"提高元器件的质量，改善加工工艺和工艺结构，完善电路设计\",\"发展容错技术\"]},\"80\":{\"h\":\"性能评价\"},\"81\":{\"h\":\"常用方法\",\"t\":[\"时钟频率\",\"指令执行速度\",\"等效指令速度法\",\"数据处理速率\",\"核心程序法\"]},\"82\":{\"h\":\"基准程序法\",\"t\":[\"整数测试程序\",\"浮点测试程序\",\"SPEC基准程序\",\"TPC基准程序\"]},\"83\":{\"h\":\"数据库管理系统\",\"t\":[\"位于用户和操作系统之间的数据管理软件\"]},\"84\":{\"h\":\"功能\"},\"85\":{\"h\":\"特征\"},\"86\":{\"h\":\"分类\"},\"87\":{\"h\":\"1. 关系数据库系统\"},\"88\":{\"h\":\"2. 面向对象数据库系统\"},\"89\":{\"h\":\"3. 对象关系数据库系统\"},\"90\":{\"h\":\"数据模型\"},\"91\":{\"h\":\"分类\",\"t\":[\"关系模型\",\"概念模型\",\"网状模型\",\"面向对象模型\"]},\"92\":{\"h\":\"三要素\",\"t\":[\"数据结构\",\"数据操作\",\"数据约束条件\"]},\"93\":{\"h\":\"E-R模型\",\"t\":[\"描述概念数据模型(世界是由一组被称为实体的基本对象和这些对象的联系构成的)，从用户角度进行建模：真正的实体-联系模型\",\"椭圆表示属性（一般没有）\",\"长方形表示实体\",\"菱形表示联系（一般为动词, 实体内部/实体之间的联系）：联系的两端要写联系类型（一对一，一对多，多对多）\"]},\"94\":{\"h\":\"概念\",\"t\":[\"实体：强实体、弱实体\",\"实体集\",\"属性，属性分类\",\"域\",\"码\",\"联系\",\"联系类型\"]},\"95\":{\"h\":\"关系模型(表)\",\"t\":[\"二维表的形式表示的实体-联系模型\",\"表格结构表达实体集，用外键标识实体间的联系\",\"E-R模型转为关系模型：\",\"每个实体（强实体）都对应一个关系模式\",\"1:1联系中，联系可以放到任意两端的实体中，作为一个属性，也可以单独转换为一个关系模式\",\"1:n联系中，联系单独转换为一个关系模式，也可以N端中添加1端实体的主键\",\"M：N中，联系必须转换为单独的一个关系模式，主键是两端的联合主键\"]},\"96\":{\"h\":\"关系代数\",\"t\":[\"并\",\"交\",\"差\"]},\"97\":{\"h\":\"数据库技术\"},\"98\":{\"h\":\"数据库系统\",\"t\":[\"DBS 由数据库、硬件、软件和人员组成\"]},\"99\":{\"h\":\"数据库管理系统\",\"t\":[\"是用户管理数据库的软件，如MySQL\"]},\"100\":{\"h\":\"数据库\",\"t\":[\"DB 数据信息的集合\"]},\"101\":{\"h\":\"三级模式-两级映像\",\"t\":[\"内模式\",\"模式\",\"外模式\",\"内模式-模式\",\"模式-外模式\"]},\"102\":{\"h\":\"数据库分析与设计\"},\"103\":{\"h\":\"需求分析\",\"t\":[\"产出物有数据流图、数据字典、需求说明书\"]},\"104\":{\"h\":\"概念结构设计\",\"t\":[\"设计E-R图\"]},\"105\":{\"h\":\"逻辑结构设计\",\"t\":[\"将E-R图转换为关系模式，转换为实际的表和表中的列属性\"]},\"106\":{\"h\":\"物理设计\",\"t\":[\"生成物理数据库\"]},\"107\":{\"h\":\"计算机网络\"},\"108\":{\"h\":\"网络安全\"},\"109\":{\"h\":\"安全等级\"},\"110\":{\"h\":\"典型安全威胁\",\"t\":[\"授权威胁\",\"拒绝服务\",\"窃听\",\"信息泄露\"]},\"111\":{\"h\":\"加密技术\"},\"112\":{\"h\":\"1. 对称加密技术\"},\"113\":{\"h\":\"2. 非对称加密技术\"},\"114\":{\"h\":\"3. 密钥管理\"},\"115\":{\"h\":\"认证技术\"},\"116\":{\"h\":\"PKI\"},\"117\":{\"h\":\"TCP\",\"t\":[\"A (Address) 记录是用来指定主机名（或域名）对应的IP地址记录。用户可以将该域名下的网站服务器指向到自己的web server，FTP server等上面。同时也可以设置域名的子域名。 通俗的来讲A记录就是服务器的IP,域名绑定A记录就是告诉DNS,当你输入域名的时候给你引导向设置在DNS的A记录所对应的服务器\"]},\"118\":{\"h\":\"操作系统\"},\"119\":{\"h\":\"定义\",\"t\":[\"就是一种系统软件，有效组织和管理计算机的硬件和软件资源、合理调度各作业、方便用户使用的程序集合\",\"通过资源管理提高计算机系统的效率\",\"改善人机界面向用户提供友好的工作环境\"]},\"120\":{\"h\":\"四个特征\",\"t\":[\"并发性：是最重要的特性\",\"共享性：程序、用户可同时访问和使用系统资源\",\"虚拟性：如虚拟内存、虚拟处理器\",\"不确定性（结果可能不一样）\",\"提示\",\"并发：指同一时间有多个事件发生\",\"并行：指同一时间有多个任务进行\"]},\"121\":{\"h\":\"五大功能\",\"t\":[\"进程：CPU执行时间\",\"文件：文件存储、目录、读写存取等\",\"存储：主存储器空间\",\"设备：硬件设备的管理\",\"作业：任务、界面、人机交互、语音控制、虚拟现实等\"]},\"122\":{\"h\":\"按任务处理方式分类\"},\"123\":{\"h\":\"1. 批处理操作系统（单道和多道）\"},\"124\":{\"h\":\"2. 分时操作系统\",\"t\":[\"一个计算机系统与多个终端设备连接，将CPU工作时间划分为许多很短的时间片，轮流为各个终端的用户服务\"]},\"125\":{\"h\":\"3. 实时操作系统\",\"t\":[\"对交互能力要求不高，但要求可靠性要保障\"]},\"126\":{\"h\":\"按运行平台分类\"},\"127\":{\"h\":\"1. 网络操作系统\",\"t\":[\"三种模式：集中模式、C/S模式、对等模式（P2P）\",\"UNIX\",\"Windows NT\",\"NetWare\"]},\"128\":{\"h\":\"2. 分布式操作系统\",\"t\":[\"由多个分散的计算机连接而成的计算机系统，无主次之分，任意两台计算机可以通过通信交换信息\"]},\"129\":{\"h\":\"3. 微型计算机操作系统\",\"t\":[\"Windows、 Mac OS、 Linux\"]},\"130\":{\"h\":\"4. 嵌入式操作系统\",\"t\":[\"微型化，可定制，实时性，可靠性，易移植性\",\"初始化过程（硬件到软件）：片(芯片)级-板级-系统\"]},\"131\":{\"h\":\"常用功能与技巧\"},\"132\":{\"h\":\"AI\",\"t\":[\"PS和AI都只是工具，重要的是设计思维能力！！\",\"矢量图图形处理工具；应用：杂志、LOGO、插画、图标等等\",\"步骤：熟悉界面；熟练掌握各种工具；熟悉各种常用功能；多找素材练习巩固\"]},\"133\":{\"h\":\"界面\",\"t\":[\"同PS\",\"菜单栏\",\"属性栏\",\"工具箱\",\"功能面板\",\"文档窗口：标题栏+画布\",\"状态栏\"]},\"134\":{\"h\":\"存储格式\",\"t\":[\".ai\",\".tif 印刷格式\",\".eps\",\".jpg\",\".png\"]},\"135\":{\"h\":\"视图模式\",\"t\":[\"默认预览\",\"轮廓形式 Ctrl + Y\",\"像素形式 Ctrl + Alt + Y\",\"叠印预览 三键 + Y\"]},\"136\":{\"h\":\"\"},\"137\":{\"h\":\"\"},\"138\":{\"h\":\"\"},\"139\":{\"h\":\"其他工具与功能\"},\"140\":{\"h\":\"技巧\"},\"141\":{\"h\":\"\"},\"142\":{\"h\":\"快捷键\"},\"143\":{\"h\":\"常用\",\"t\":[\"大部分同PS Ctrl + Shift + Alt + K\",\"Ctrl + K 首选项: 调整键盘增量等\",\"Tab\",\"F\",\"Ctrl + J 连接两个锚点\",\"Ctrl + Shift + J 连接前弹参数\"]},\"144\":{\"h\":\"基础工具使用\"},\"145\":{\"h\":\"钢笔工具P\",\"t\":[\"锚点：【直接选择工具】选择锚点（还有【添加删除锚点】工具）\",\"路径 \",\"开放路径\",\"闭合路径\",\"点完锚点后鼠标滑动出现橡皮筋：按住shift, 就是横平竖直/45deg，可在首选项中设置\"]},\"146\":{\"h\":\"Maya\",\"t\":[\"3D动画软件；应用：影视动画、电影特技、游戏等等\",\"步骤：熟练掌握工具与操作；了解整个过程；逐步练习\"]},\"147\":{\"h\":\"界面、工具与操作\"},\"148\":{\"h\":\"建模\"},\"149\":{\"h\":\"材质灯光\"},\"150\":{\"h\":\"贴图渲染\"},\"151\":{\"h\":\"动画\"},\"152\":{\"h\":\"练习\"},\"153\":{\"h\":\"功能详解\"},\"154\":{\"h\":\"矢量图位图\",\"t\":[\"矢量图： 锚点 + 路径\",\"位图： 像素\",\"工具箱中不同的工具针对的图像类型也不同：如画笔工具就不等你用在矢量图上\"]},\"155\":{\"h\":\"新建文档与存储\",\"t\":[\"分辨率：一般选72; 假如打印的时候，可能需要调到300\",\"颜色模式：RGB模式（常用）, CMYK模式(打印)\",\"图像大小和画布大小：是两个不同概念 Ctrl + Alt + I, Ctrl + Alt + C\",\"存储格式：psd, jpg/jpeg, png, 存储为web所用格式Ctrl + Shift + Alt + S\"]},\"156\":{\"h\":\"图层\"},\"157\":{\"h\":\"分类\",\"t\":[\"普通图层\",\"矢量图层(文字图层、形状图层、智能对象)：必须栅格化之后才能才能使用画笔等工具\",\"调整图层\"]},\"158\":{\"h\":\"面板\",\"t\":[\"面板中可以进行图层筛选\",\"可以进行图层锁定\"]},\"159\":{\"h\":\"三大蒙版\"},\"160\":{\"h\":\"1. 剪切蒙版\",\"t\":[\"也就是上一层的内容被限制在下一层的内容范围之内\",\"可以想象成视口，下一层内容范围内就是视口，视口内的可以看见，视口外的看不见\",\"图层与图层，图层与组之间都可以形成\"]},\"161\":{\"h\":\"2. 图层蒙版\"},\"162\":{\"h\":\"3. 快速蒙版\"},\"163\":{\"h\":\"图层叠加模式\"},\"164\":{\"h\":\"图层混合模式\"},\"165\":{\"h\":\"调整功能\"},\"166\":{\"h\":\"Colors\"},\"167\":{\"h\":\"颜色名字\",\"t\":[\"colors.html\"]},\"168\":{\"h\":\"PS\",\"t\":[\"PS和AI都只是工具，重要的是设计思维能力！！\",\"步骤：熟悉 界面 ；熟练掌握 快捷键(工具) ；熟悉 各种功能 ；多找素材 练习巩固\"]},\"169\":{\"h\":\"界面\",\"t\":[\"菜单栏\",\"属性栏\",\"工具箱\",\"功能面板：可单独拖出\",\"文档窗口：可单独拖出，标题栏+画布\",\"状态栏\"]},\"170\":{\"h\":\"\"},\"171\":{\"h\":\"\"},\"172\":{\"h\":\"\"},\"173\":{\"h\":\"快捷键\",\"t\":[\"熟练掌握 最最常用 的即可，忘记时可在PS上方菜单栏中查找或者鼠标放工具箱工具上查看, 还可直接使用 Ctrl+Alt+Shift+K 查看详细信息\",\"三大功能键配合：ShiftCtrlAlt\"]},\"174\":{\"h\":\"一、常用快捷键\",\"t\":[\"Ctrl + N 新建文档\",\"Ctrl + K 首选项：可调整性能等等；操作后 需重启后生效\",\"Ctrl + S 保存文件\",\"Ctrl + Alt + S 存储为\",\"Ctrl + Alt + Z 切换最终状态\",\"Ctrl + O 打开文件\",\"Ctrl + W 关闭文件\",\"F 视图模式切换\",\"Tab 隐藏折叠面板和工具箱（有时候需要重新focus）\",\"Ctrl++ 放大\",\"Ctrl-- 缩小\",\"Space 临时切换为抓手\",\"Ctrl + Shift + Alt + N 新建图层，或者点击面板中新建图层按钮\",\"Ctrl + Shift + N + Enter 新建图层\",\"Ctrl + J 复制图层， 或者从选区新建图层\",\"选中图层后，数字键；调整不透明度\",\"Ctrl + A 全选\",\"Ctrl + Shift + I 反选\",\"Ctrl + T 变换工具\",\"Ctrl + Alt + T 复制变换\",\"Ctrl + Shift + Alt + T 连续复制变换\",\"Ctrl + R 显示隐藏标尺\",\"Ctrl + ; 显示隐藏辅助线\",\"Ctrl + \\\" 显示隐藏网格线\",\"D 复位颜色\",\"X 切换颜色\",\"Ctrl + Delete 填充背景色\",\"Alt + Delete 填充前景色\",\"Alt + 双击左键 解锁； 在cc里面不用解锁就可以拖动\",\"Ctrl + G 图层快速编组\",\"扩展\",\"点击新建组图标，然后将图层拖到组里面\",\"组可以嵌套\",\"选择多个图层Ctrl+G快速编组\",\"选中多个图层，然后进行图层链接，在右上角选择从图层新建组\",\"Ctrl ＋ E 合并图层\",\"Ctrl + Shift + Alt + E 合并图层（盖印，也就是新生成）\",\"Shift + F5 填充（内容识别（例如框选后去水印））\",\"形状选区 加、减选操作： Alt 减选； Shift 加选\",\"Ctrl + F 重复上一次滤镜，加 Alt重新调整参数\",\"Ctrl + I 颜色反向\"]},\"175\":{\"h\":\"二、工具箱\",\"t\":[\"Shift + 工具箱快捷键 （切换）多看属性栏\"]},\"176\":{\"h\":\"移动工具V\",\"t\":[\"属性栏中勾选 【自动选择】图层，可快速选中图层\"]},\"177\":{\"h\":\"选区M\",\"t\":[\"选框工具中可以进行固定大小，点击图标进行选区的变化\",\"Ctrl + D 取消选区\",\"添加选区 Shift\",\"减去选区 Alt\",\"选区交叉 Shift + Alt\",\"按着 Ctrl 点击图层可以进行选择\"]},\"178\":{\"h\":\"套索工具\",\"t\":[\"选择性粘贴\",\"贴入（也就是产生一个蒙板）\"]},\"179\":{\"h\":\"橡皮擦E\",\"t\":[\"利用魔法橡皮擦和容差进行抠图\"]},\"180\":{\"h\":\"钢笔工具P\",\"t\":[\"用钢笔工具进行抠图【联合 alt+左键（取消手柄）、直接选择工具（微调）】\"]},\"181\":{\"h\":\"文字工具T\",\"t\":[\"PS默认会使用Lorem默认填充，可以在首选项中把它取消掉\"]},\"182\":{\"h\":\"画笔工具\",\"t\":[\"[ 缩小画笔\",\"] 放大画笔\"]},\"183\":{\"h\":\"仿制图章工具\",\"t\":[\"按着Alt，可进行复制，可以本张照片也可以跨图片\"]},\"184\":{\"h\":\"三、三大功能键\",\"t\":[\"Shift\",\"移动：水平/垂直\",\"等比例缩放\",\"15度旋转\",\"选中多个连续图层\",\"直线、正圆、正方形等\",\"加选\",\"shift+方向键选中相应的图层模式\",\"工具组工具切换\",\"Alt\",\"绘制图形，从中心开始绘制，常配合shift\",\"临时切换为吸管工具进行吸色\",\"按住Alt拖动图层可进行复制\",\"减选\",\"具有2选1的功能中可切换到另一种\",\"按住Alt键可快速拉出参考线，并可切换水平或垂直\",\"按住单击工具箱可切换\",\"两个图层键按住Alt单击，建立剪切蒙版\",\"Ctrl\",\"按住Ctrl临时调用选择工具\",\"按住单击图层载入选区\",\"加选图层\",\"Ctrl + 0 画布适合屏幕大小\",\"Ctrl + 1 画布100%\",\"调整图层顺序 Ctrl + [ ; Ctrl + ], 再加Shift置于顶层或底层\",\"其他\",\"按住鼠标不放拖动小眼睛\",\"内容识别（可用来删除）可以填充图案\",\"转换为 智能对象 之后进行拉伸等操作后可以防止图像质量下降\"]},\"185\":{\"h\":\"四、色彩调整、面板快捷键\",\"t\":[\"色彩调整\",\"Ctrl + M 曲线\",\"Ctrl + L 色阶\",\"Ctrl + U 色相/饱和度\",\"Ctrl + B 色彩平衡\",\"Ctrl + Shift + U 去色\",\"面板\",\"F7 图层\",\"F5 画笔\",\"F6 颜色\",\"F8 信息\",\"Alt + F9 动作\"]},\"186\":{\"h\":\"Guitar Practice (01)\"},\"187\":{\"h\":\"兰花草\"},\"188\":{\"h\":\"Guitar Practice (02)\"},\"189\":{\"h\":\"一千年以后\"},\"190\":{\"h\":\"Guitar Practice (03)\"},\"191\":{\"h\":\"兰亭序\"},\"192\":{\"h\":\"乐理\"},\"193\":{\"h\":\"Guitar Practice\"},\"194\":{\"h\":\"\"},\"195\":{\"h\":\"\"},\"196\":{\"h\":\"\"},\"197\":{\"h\":\"Features demo\"},\"198\":{\"c\":[\"Guide\"]},\"199\":{\"h\":\"Disabling layout and features\",\"t\":[\"You can disable some function and layout on the page by setting the Frontmatter of the page.\",\"This page is an demo that disables the following features:\",\"Navbar\",\"Sidebar\",\"Breadcrumb\",\"Page information\",\"Contributors\",\"Edit link\",\"Update time\",\"Prev/Next link\",\"Comment\",\"Footer\",\"Back to top button\"]},\"200\":{\"c\":[\"Guide\"]},\"201\":{\"c\":[\"disable\"]},\"202\":{\"h\":\"Encryption Article\",\"t\":[\"The actual article content.\",\"Paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text.\",\"Paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text.\"]},\"203\":{\"c\":[\"Guide\"]},\"204\":{\"c\":[\"encryption\"]},\"205\":{\"h\":\"Layout\",\"t\":[\"The layout contains:\",\"Navbar\",\"Sidebar\",\"Footer\",\"Also each page can contain:\",\"BreadCrumb\",\"Title and information\",\"TOC (Table of Contents)\",\"Meta information including update time and contributors\",\"Comments\",\"The theme also has the following elements:\",\"Darkmode button\",\"Back to top button\",\"Print button\",\"You can customize them in theme options and page frontmatter.\"]},\"206\":{\"c\":[\"Guide\"]},\"207\":{\"c\":[\"Layout\"]},\"208\":{\"h\":\"Markdown Enhance\",\"t\":[\"VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.\",\"You should create and write Markdown files, so that VuePress can convert them to different pages according to file structure.\"]},\"209\":{\"h\":\"Markdown Introduction\",\"t\":[\"If you are a new learner and don't know how to write Markdown, please read Markdown Intro and Markdown Demo.\"]},\"210\":{\"h\":\"Markdown Config\",\"t\":[\"VuePress introduce configuration for each markdown page using Frontmatter.\",\"Frontmatter\",\"Frontmatter is an important concept in VuePress. If you don't know it, you need to read Frontmatter Introduction.\"]},\"211\":{\"h\":\"Markdown Extension\",\"t\":[\"The Markdown content in VuePress will be parsed by markdown-it, which supports syntax extensions via markdown-it plugins.\"]},\"212\":{\"h\":\"VuePress Enhancement\",\"t\":[\"To enrich document writing, VuePress has extended Markdown syntax.\",\"For these extensions, please read Markdown extensions in VuePress.\"]},\"213\":{\"h\":\"Theme Enhancement\",\"t\":[\"By using vuepress-plugin-md-enhance, the theme extends more Markdown syntax and provides richer writing functions.\"]},\"214\":{\"h\":\"Code Tabs\",\"t\":[\"View Detail\"]},\"215\":{\"h\":\"Tabs\",\"t\":[\"View Detail\"]},\"216\":{\"h\":\"Footnote\",\"t\":[\"This text has footnote[1].\",\"View Detail\"]},\"217\":{\"h\":\"Include files\",\"t\":[\"View Detail\"]},\"218\":{\"h\":\"TeX\",\"t\":[\"$$ \\\\frac {\\\\partial^r} {\\\\partial \\\\omega^r} \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) = \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) \\\\left{(\\\\log y)^r + \\\\sum_{i=1}^r \\\\frac {(-1)^i r \\\\cdots (r-i+1) (\\\\log y)^{r-i}} {\\\\omega^i} \\\\right} $$\",\"View Detail\"]},\"219\":{\"h\":\"Tasklist\",\"t\":[\" Plan A\",\" Plan B\",\"View Detail\"]},\"220\":{\"h\":\"Image Enhancement\",\"t\":[\"Support setting color scheme and size.\",\"View Detail\"]},\"221\":{\"h\":\"Superscript and Subscript\",\"t\":[\"19th H2O\",\"View Detail\"]},\"222\":{\"h\":\"Component\"},\"223\":{\"c\":[\"Guide\"]},\"224\":{\"c\":[\"Markdown\"]},\"225\":{\"h\":\"Page Config\",\"t\":[\"Content before more comment is regarded as page excerpt.\"]},\"226\":{\"h\":\"Page Title\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"You can also set title in Markdown's Frontmatter:\",\"--- title: Page Title ---\"]},\"227\":{\"h\":\"Page Information\",\"t\":[\"You can set page information in Markdown's Frontmatter.\",\"The author is Ms.Hope.\",\"The writing date is January 1, 2020\",\"Category is \\\"Guide\\\"\",\"Tags are \\\"Page Config\\\" and \\\"Guide\\\"\"]},\"228\":{\"h\":\"Page Content\",\"t\":[\"You are free to write your Markdown here.\",\"Assets\",\"You can place images besides your Markdown files nd use relative links.\",\"For images in .vuepress/public directory, please use absolute links (i.e.: starting with /).\"]},\"229\":{\"h\":\"Components\",\"t\":[\"Each markdown page is converted into a Vue component, which means you can use Vue syntax in Markdown:\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"You can also create and import your own components.\"]},\"230\":{\"c\":[\"Guide\"]},\"231\":{\"c\":[\"Page config\",\"Guide\"]},\"232\":{\"h\":\"Guide\"},\"233\":{\"h\":\"Highlight Features\"},\"234\":{\"h\":\"Bar\",\"t\":[\"baz\",\"...\"]},\"235\":{\"h\":\"Foo\",\"t\":[\"ray\",\"...\"]},\"236\":{\"h\":\"分治法\"},\"237\":{\"h\":\"算法-概述\"},\"238\":{\"h\":\"定义\",\"t\":[\"Algorithm: 一个有限指令集，每一个指令表示一个或多个操作\",\"每一条指令：有充分明确的目标，不可以有歧义；在计算机能处理的范围之内；描述应不依赖于任何一种计算机语言以及具体实现\"]},\"239\":{\"h\":\"五个特性\",\"t\":[\"有穷性： 一定在有限步骤之后终止\",\"确定性： 固定的输入产生确定的输出\",\"可行性： 可以通过基本运算有限次执行来实现\",\"有输入： 可能没有\",\"有输出： 一个或多个\",\"重要\",\"学习算法最重要的是学习算法的设计过程（算法思维）， 而不是算法本身，理论要与实践相结合\"]},\"240\":{\"h\":\"算法分析\",\"t\":[\"指标\",\"空间复杂度S(n) Space\",\"写成的程序在执行时占用存储单元的长度\",\"长度往往与输入数据的规模n有关\",\"事件复杂度T(n) Time\",\"写成的程序在执行时耗费时间的长度\",\"长度往往与输入数据的规模n有关\",\"机器运算加减法要比乘除法要快很多\",\"分析一般算法的效率\",\"最坏情况复杂度Tworst(n)\",\"平均复杂度Tavg(n)\",\"Tavg(n) <= Tworst(n)\",\"所以一般就分析最坏情况复杂度\",\"复杂度的渐进表示\"]},\"241\":{\"h\":\"算法表示\"},\"242\":{\"h\":\"算法设计策略(一般性方法)\",\"t\":[\"设计算法时正确性，可读性，健壮性，最后考虑高效率和低存储量\",\"查找算法\",\"排序算法\",\"字符串算法\",\"分治法\",\"动态规划法\",\"贪心法\",\"回溯法\",\"分支限界法\",\"概率算法\",\"近似算法\",\"数据挖掘算法\",\"智能优化算法\"]},\"243\":{\"h\":\"人工智能相关算法（了解）\"},\"244\":{\"h\":\"查找\"},\"245\":{\"h\":\"窗口滑动\"},\"246\":{\"h\":\"排序\"},\"247\":{\"h\":\"直接插入排序\",\"t\":[\"给出一队无序的元素时，将第一个元素看做是一个有序的队列，而后从第二个元素起，依次与前面的元素进行比较，直到找到一个小于他的值，才插入\"]},\"248\":{\"h\":\"希尔排序\",\"t\":[\"缩小增量排序，直接插入排序的改进\",\"将整个待排记录序列分割成若干子序列，分别进行直接插入排序，待整个序列中的记录基本有序时，再对全体记录进行一次直接插入排序\",\"最后一轮的增量一定是1\",\"解决大数据的排序问题\"]},\"249\":{\"h\":\"简单选择排序\",\"t\":[\"通过n-i(1 <= i <= n)次关键字之间的比较，从n-i+1个记录中选出关键字最小的记录，并和第i个记录进行交换，当i = n时所有记录有序排列\",\"本质就是每次选择出最小的元素进行交换\"]},\"250\":{\"h\":\"堆排序\",\"t\":[\"构建完全二叉树\",\"构建大根树/小根数\",\"将最根处与最后叶子结点交换，然后继续形成大根/小根\",\"一直重复\",\"适用场景：快速找出最大/最小的前几个\"]},\"251\":{\"h\":\"冒泡排序\",\"t\":[\"想象一下水下的气泡往上冒的过程\",\"/** * 冒泡排序 */ let arr = [8,3,24,45,33,23,41,54,33,22,7,7,4,9,0,110]; let sortedArr = []; function chooseSort(arr) { if(arr.length == 0) { return } for (let i = 1, len = arr.length; i < len; i++) { if (arr[i] <= arr[0]) { let temp = arr[0]; arr[0] = arr[i]; arr[i] = temp; } } sortedArr.push(arr.splice(0,1)[0]); chooseSort(arr); }\"]},\"252\":{\"h\":\"快速排序（升级版的冒泡排序）\",\"t\":[\"选定基准值\",\"分区（小于基准值放左边，大于基准值放右边）；\",\"对于左边与右边的分区递归进行分区（partition）；\",\"第一次轮n次；第二次轮n-1次，，，联想到二叉树，树的高度越低效率就越高\",\"/** * 快速排序 */ console.time(2); let arr = [8,3,24,45,33,23,41,54,33,22,7,7,4,9,0,110]; function quickSort(arr) { if(arr.length < 2) { return arr; } let basic = arr[0]; let left = []; let right = []; for(let i = 1, len = arr.length; i < len; i++) { if(arr[i] < basic) { left.push(arr[i]) } if(arr[i] >= basic) { right.push(arr[i]) } } return quickSort(left).concat([basic]).concat(quickSort(right)); } console.log(quickSort(arr)); console.timeEnd(2);\"]},\"253\":{\"h\":\"归并排序（分治法）\"},\"254\":{\"h\":\"基数排序\",\"t\":[\"快排优化\",\"快速选择算法(只是想找排名第K个的元素)\",\"当我们需要快速找到一个元素X，并且使得小于X的元素数量是K-1个时，那X就是我们要查找的排名第K位的元素了，可以用partition;\",\"堆排序\",\"其它趣味算法\",\"红黑树\",\"哈希表\"]},\"255\":{\"h\":\"字符串匹配\"},\"256\":{\"h\":\"朴素的模式匹配算法\"},\"257\":{\"h\":\"改进的模式匹配算法（KMP算法）\"},\"258\":{\"h\":\"基本概念\"},\"259\":{\"h\":\"低级语言\",\"t\":[\"机器语言(1940年以前)\",\"也就是0101...\",\"# 768+12288-1280 101100000000000000000011 000001010000000000110000 001011010000000000000101\",\"汇编语言(20世纪40年代，用符号表示指令的语言, 又称为符号语言)\",\"人稍微看得懂一点, 有 AND... 等符号（用助记符代替机器指令的操作码，用地址符号（Symbol）或标号（Label）代替指令或操作数的地址）\",\"# 将寄存器BX的内容送到AX中 mov ax,bx\"]},\"260\":{\"h\":\"高级语言(不依赖于机器硬件，按人类的思维角度出发，抽象程度高， 20世纪50年代)\",\"t\":[\"Fortran 第一个高级语言，应用于科学计算，效率高，目前还在（1955 年，名称取自FORmula TRANslator，即公式翻译器）\",\"Pasical 为教学开发，表达能力强\",\"C 指针操作能力强，高效\",\"C++ 面向对象，高效\",\"Java\",\"C#\",\"Python 解释型\",\"Prolog 逻辑型\",\"LISP 函数式(1958 年，名称取自LISt Processor，即枚举处理器)\",\"JavaScript 解释型脚本语言\",\"Go ...\"]},\"261\":{\"h\":\"编译型语言与解释型语言的区别\"},\"262\":{\"h\":\"文法与有限自动机\"},\"263\":{\"h\":\"程序设计语言\",\"t\":[\"人 与 计算机 交流 的符号\",\"或是 人 控制 计算机 用的 话\",\"高级语言有其特定的语法和结构， 固定明确无二义\"]},\"264\":{\"h\":\"基本组成\"},\"265\":{\"h\":\"数据\",\"t\":[\"常量和变量\",\"全局量和局部量：非静态局部变量存储在栈里，全局变量存储在静态数据区里\",\"数据类型\"]},\"266\":{\"h\":\"运算\",\"t\":[\"算术运算\",\"关系运算\",\"逻辑运算\",\"位运算\"]},\"267\":{\"h\":\"控制\",\"t\":[\"顺序\",\"选择\",\"循环\"]},\"268\":{\"h\":\"传输\",\"t\":[\"赋值处理\",\"数据输入输出\"]},\"269\":{\"h\":\"函数\"},\"270\":{\"h\":\"编译原理\"},\"271\":{\"h\":\"介绍\",\"t\":[\"课程内容主要是原理性质，高度抽象\",\"最难及最挑战学习能力的课程之一\",\"词法分析；\",\"语法分析；\",\"语义分析与中间代码产生；\",\"优化；\",\"目标代码生成\"]},\"272\":{\"h\":\"引言\",\"t\":[\"翻译程序（Translator）\",\"把某一种语言程序（源语言程序）等价地转换成另一种语言程序（目标程序）的程序\",\"编译程序（Compiler）\",\"把一种高级语言程序等价地转换成另一种低级语言程序（汇编语言或机器语言程序）的程序\",\"BNF(巴科斯范式)\",\"以简洁描述一种编程语言的语言\",\"产生式\",\"表征程序性知识的最小单位，是指人脑中贮存的一系列如果—那么形式表示的规则\"]},\"273\":{\"h\":\"面向对象技术\",\"t\":[\"面向对象是一种思想，不仅用在编程程序设计中，也可用于软件开发的层面\"]},\"274\":{\"h\":\"UML\"},\"275\":{\"h\":\"设计模式\"},\"276\":{\"h\":\"\",\"t\":[\"其实就是一堆编码套路，解决固定的问题\",\"是一套被反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结\",\"目标： 熟练使用每一个设计模式，知道使用它的目的，并活用！\"]},\"277\":{\"h\":\"1. GOF(Gang of Four)\",\"t\":[\"对接口编程而不是对实现编程。优先使用对象组合而不是继承。\"]},\"278\":{\"h\":\"一、分类\"},\"279\":{\"h\":\"1. 创作设计模式(创建型模式Creational Design Patterns)\",\"t\":[\"解决哪一类问题：对象创建（在创建对象的同时隐藏创建逻辑的方式）\",\"工厂模式（Factory Pattern）\",\"抽象工厂模式（Abstract Factory Pattern）\",\"单例模式（Singleton Pattern）\",\"建造者模式（Builder Pattern）\",\"原型模式（Prototype Pattern）\",\"Constructor\",\"Factory - 针对class\",\"Abstract\",\"Prototype\",\"Singleton\",\"Builder\"]},\"280\":{\"h\":\"2. 结构设计模式(结构型模式Structural Design Patterns)\",\"t\":[\"解决哪一类问题：对象结构（类和对象的组合）\",\"适配器模式（Adapter Pattern)\",\"桥接模式（Bridge Pattern）\",\"过滤器模式（Filter、Criteria Pattern）\",\"组合模式（Composite Pattern）\",\"装饰器模式（Decorator Pattern）\",\"外观模式（Facade Pattern）\",\"享元模式（Flyweight Pattern）\",\"代理模式（Proxy Pattern）\",\"Decorator\",\"Facade\",\"Flyweight\",\"Adapter - 针对class\",\"Proxy\"]},\"281\":{\"h\":\"3. 行为设计模式(行为型模式Behavioral Design Patterns)\",\"t\":[\"解决哪一类问题：独立对象之间相互沟通（对象之间的通信）\",\"责任链模式（Chain of Responsibility Pattern）\",\"命令模式（Command Pattern）\",\"解释器模式（Interpreter Pattern）\",\"迭代器模式（Iterator Pattern）\",\"中介者模式（Mediator Pattern）\",\"备忘录模式（Memento Pattern）\",\"观察者模式（Observer Pattern）\",\"状态模式（State Pattern）\",\"空对象模式（Null Object Pattern）\",\"策略模式（Strategy Pattern）\",\"模板模式（Template Pattern）\",\"访问者模式（Visitor Pattern）\",\"Interpreter - 针对class\",\"TemplateMethod - 针对class\",\"Iterator\",\"Mediator\",\"Observer\",\"Visitor\"]},\"282\":{\"h\":\"4. J2EE设计模式（特别关注表示层）\",\"t\":[\"MVC 模式（MVC Pattern）\",\"业务代表模式（Business Delegate Pattern）\",\"组合实体模式（Composite Entity Pattern）\",\"数据访问对象模式（Data Access Object Pattern）\",\"前端控制器模式（Front Controller Pattern）\",\"拦截过滤器模式（Intercepting Filter Pattern）\",\"服务定位器模式（Service Locator Pattern）\",\"传输对象模式（Transfer Object Pattern）\"]},\"283\":{\"h\":\"二、详述\",\"t\":[\"23种设计模式\"]},\"284\":{\"h\":\"1. 适配器模式\",\"t\":[\"作为两个不兼容接口之间的桥梁, 像现实生活中的读卡器：连接内存卡与电脑，读卡器作为单独的一个类而存在\",\"意图：将一个类的接口转换成客户希望的另外一个接口。适配器模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。\",\"主要解决：主要解决在软件系统中，常常要将一些\\\"现存的对象\\\"放到新的环境中，而新环境要求的接口是现对象不能满足的。\",\"何时使用： 1、系统需要使用现有的类，而此类的接口不符合系统的需要。 2、想要建立一个可以重复使用的类，用于与一些彼此之间没有太大关联的一些类，包括一些可能在将来引进的类一起工作，这些源类不一定有一致的接口。 3、通过接口转换，将一个类插入另一个类系中。（比如老虎和飞禽，现在多了一个飞虎，在不增加实体的需求下，增加一个适配器，在里面包容一个虎对象，实现飞的接口。）\",\"如何解决：继承或依赖（推荐）。\",\"关键代码：适配器继承或依赖已有的对象，实现想要的目标接口。\",\"应用实例： 1、美国电器 110V，中国 220V，就要有一个适配器将 110V 转化为 220V。 2、JAVA JDK 1.1 提供了 Enumeration 接口，而在 1.2 中提供了 Iterator 接口，想要使用 1.2 的 JDK，则要将以前系统的 Enumeration 接口转化为 Iterator 接口，这时就需要适配器模式。 3、在 LINUX 上运行 WINDOWS 程序。 4、JAVA 中的 jdbc。\",\"优点： 1、可以让任何两个没有关联的类一起运行。 2、提高了类的复用。 3、增加了类的透明度。 4、灵活性好。\",\"缺点： 1、过多地使用适配器，会让系统非常零乱，不易整体进行把握。比如，明明看到调用的是 A 接口，其实内部被适配成了 B 接口的实现，一个系统如果太多出现这种情况，无异于一场灾难。因此如果不是很有必要，可以不使用适配器，而是直接对系统进行重构。 2.由于 JAVA 至多继承一个类，所以至多只能适配一个适配者类，而且目标类必须是抽象类。\",\"使用场景：有动机地修改一个正常运行的系统的接口，这时应该考虑使用适配器模式。\",\"注意事项：适配器不是在详细设计时添加的，而是解决正在服役的项目的问题。\"]},\"285\":{\"h\":\"2. 建造者模式\",\"t\":[\"创建对象的最佳方式\",\"意图：将一个复杂的构建与其表示相分离，使得同样的构建过程可以创建不同的表示。\",\"主要解决：主要解决在软件系统中，有时候面临着\\\"一个复杂对象\\\"的创建工作，其通常由各个部分的子对象用一定的算法构成；由于需求的变化，这个复杂对象的各个部分经常面临着剧烈的变化，但是将它们组合在一起的算法却相对稳定。\",\"何时使用：一些基本部件不会变，而其组合经常变化的时候。\",\"如何解决：将变与不变分离开。\",\"关键代码：建造者：创建和提供实例，导演：管理建造出来的实例的依赖关系。\",\"应用实例： 1、去肯德基，汉堡、可乐、薯条、炸鸡翅等是不变的，而其组合是经常变化的，生成出所谓的\\\"套餐\\\"。 2、JAVA 中的 StringBuilder。\",\"优点： 1、建造者独立，易扩展。 2、便于控制细节风险。\",\"缺点： 1、产品必须有共同点，范围有限制。 2、如内部变化复杂，会有很多的建造类。\",\"使用场景： 1、需要生成的对象具有复杂的内部结构。 2、需要生成的对象内部属性本身相互依赖。\",\"注意事项：与工厂模式的区别是：建造者模式更加关注与零件装配的顺序。\"]},\"286\":{\"h\":\"3. 工厂模式\",\"t\":[\"意图：定义一个创建对象的接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类进行。\",\"主要解决：主要解决接口选择的问题。\",\"何时使用：我们明确地计划不同条件下创建不同实例时。\",\"如何解决：让其子类实现工厂接口，返回的也是一个抽象的产品。\",\"关键代码：创建过程在其子类执行。\",\"应用实例： 1、您需要一辆汽车，可以直接从工厂里面提货，而不用去管这辆汽车是怎么做出来的，以及这个汽车里面的具体实现。 2、Hibernate 换数据库只需换方言和驱动就可以。\",\"优点： 1、一个调用者想创建一个对象，只要知道其名称就可以了。 2、扩展性高，如果想增加一个产品，只要扩展一个工厂类就可以。 3、屏蔽产品的具体实现，调用者只关心产品的接口。\",\"缺点：每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加，在一定程度上增加了系统的复杂度，同时也增加了系统具体类的依赖。这并不是什么好事。\",\"使用场景： 1、日志记录器：记录可能记录到本地硬盘、系统事件、远程服务器等，用户可以选择记录日志到什么地方。 2、数据库访问，当用户不知道最后系统采用哪一类数据库，以及数据库可能有变化时。 3、设计一个连接服务器的框架，需要三个协议，\\\"POP3\\\"、\\\"IMAP\\\"、\\\"HTTP\\\"，可以把这三个作为产品类，共同实现一个接口。\",\"注意事项：作为一种创建类模式，在任何需要生成复杂对象的地方，都可以使用工厂方法模式。有一点需要注意的地方就是复杂对象适合使用工厂模式，而简单对象，特别是只需要通过 new 就可以完成创建的对象，无需使用工厂模式。如果使用工厂模式，就需要引入一个工厂类，会增加系统的复杂度。\"]},\"287\":{\"h\":\"4. 抽象工厂模式\"},\"288\":{\"h\":\"1. JavaScript设计模式\",\"t\":[\"Constructor\",\"创建对象\",\"var newO = {}; var newO = Object.create(Object.prototype); var newO = new Object();\",\"对象属性赋值\",\"// Way 01 newO.someKey = 'HelloWorld'; var val = newO.someKey; // Way 02 newO[someKey] = 'HelloWorld'; var val = newO[someKey]; // Way 03 Object.defineProperty(newO, \\\"someKey\\\", { value: \\\"for more control of the property's behavior\\\", writable: true, enumerable: true, configurable: true }) // or var defineProp = function(obj, key, value) { var config = { value: value, writable: true, enumerable: true, configurable: true }; Object.defineProperty(obj, key, config); } var person = Object.create(Object.prototype); defineProp(person, 'car', 'dazhong'); defineProp(person, 'birth', '1991'); defineProp(person, 'hasBeard', true); console.log(person) // Way 04 Object.defineProperties(newO, { 'someKey': { value: 'Hello', writable: true, enumerable: true, configurable: true }, 'anotherKey': { value: 'World', writable: true, enumerable: true, configurable: true } }) // inherit var driver = Object.create(person); defineProps(driver, 'speed', 140);\",\"创建类\",\"// Way 01 构造函数 function Car(model, year, miles) { this.model = model; this.year = year; this.miles = miles; this.toString = function () { return this.model + \\\" has done \\\" + this.miles + \\\" miles\\\"; }; } // Usage: // We can create new instances of the car var civic = new Car(\\\"Honda Civic\\\", 2009, 20000); var mondeo = new Car(\\\"Ford Mondeo\\\", 2010, 5000); // and then open our browser console to view the // output of the toString() method being called on // these objects console.log(civic.toString()); console.log(mondeo.toString());\",\"Module\",\"Module\",\"Object literal notation\",\"AMD modules\",\"CommonJS modules\",\"ECMAScript Harmony modules\",\"对象字面量\",\"Revealing Module\",\"Singleton\",\"有两点需求： 假如没有则创建的实例，假如有则指向已创建的实例，JS中单例提供一个公共的资源空间，并且只提供单一个方法入口\",\" const mySingleton = (function() { let instance; function init() { // Private let privateVariable = 'I am privateVariable'; let privateFunction = () => { console.log('I am privateFunction been called in public func') } return { // Public publicProperty: \\\"I am also public\\\", publicMethod() { console.log( \\\"The public can see me!\\\" ); privateFunction(); } } } return { getInstance() { // here is important!! if(!instance) { instance = init(); } return instance; } } })() // 采用这种工厂模式可以使得获取单例的方式唯一不变 mySingleton.getInstance = function(){ if ( this._instance == null ) { if ( isFoo() ) { this._instance = new FooSingleton(); } else { this._instance = new BasicSingleton(); } } return this._instance; };\",\"Observer\",\"一系列对象的状态变动将通知到观察者中\",\" function ObserverList() { this.observerList = []; } ObserverList.prototype.add = (obj) => { this.observerList.push(obj); return this.observerList; } ObserverList.prototype.count = () => { return this.observerList.length; } ObserverList.prototype.get = (index) => { if(index > -1 && index < this.observerList.length>) { return this.observerList[index]; } } ObserverList.prototype.indexOf = (obj, startIndex) => { var i = startIndex; while ( i < this.observerList.length ) { if( this.observerList[i] === obj ) { return i; } i++; } return -1 } ObserverList.prototype.removeAt = (index) => { return this.observerList.splice(index, 1); }\",\"Mediator\",\"Prototype\",\"Command\",\"Facade\",\"Factory\",\"Mixin\",\"Decorator\",\"Flyweight\"]},\"289\":{\"h\":\"2. JavaScript MV* 模式\"},\"290\":{\"h\":\"3. 现代模块化设计模式\",\"t\":[\"AMD modules\",\"CommonJS modules\",\"ECMAScript Harmony modules\"]},\"291\":{\"h\":\"4. JavaScript命名空间模式\"},\"292\":{\"h\":\"5. 插件设计模式\"},\"293\":{\"h\":\"一、单例模式\",\"t\":[\"// 简单单例 var singleton = { name: 'onlyOne', methods() { } }\"]},\"294\":{\"h\":\"二、二段构建模式\"},\"295\":{\"h\":\"三、管理者模式\"},\"296\":{\"h\":\"四、外观模式\"},\"297\":{\"h\":\"五、防御编程模式\"},\"298\":{\"h\":\"六、组合模式\"},\"299\":{\"h\":\"七、观察者模式\"},\"300\":{\"h\":\"八、中介者模式\"},\"301\":{\"h\":\"九、委托模式\"},\"302\":{\"h\":\"练习\",\"t\":[\"练习\",\"UML\",\"UML\",\"又称统一建模语言或标准建模语言，是始于1997年一个OMG标准，它是一个支持模型化和软件系统开发的图形化语言，为软件开发的所有阶段提供模型化和可视化支持，包括由需求分析到规格，到构造和配置。 面向对象的分析与设计(OOA&D，OOAD)方法的发展在80年代末至90年代中出现了一个高潮，UML是这个高潮的产物。它不仅统一了Booch、Rumbaugh和Jacobson的表示方法，而且对其作了进一步的发展，并最终统一为大众所接受的标准建模语言。\",\"从目标系统的不同角度出发，定义了用例图、类图(类名；属性；操作)、对象图、状态图、活动图、时序图、协作图、构件图、部署图等 9 种图\",\"Rational Rose ; Umlet\"]},\"303\":{\"h\":\"工厂模式（Factory Pattern）\",\"t\":[\"在工厂模式中，我们在创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象。\",\"意图：定义一个创建对象的接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类进行\",\"主要解决：主要解决接口选择的问题\",\"何时使用：我们明确地计划不同条件下创建不同实例时\",\"如何解决：让其子类实现工厂接口，返回的也是一个抽象的产品\",\"关键代码：创建过程在其子类执行\",\"应用实例： 1、您需要一辆汽车，可以直接从工厂里面提货，而不用去管这辆汽车是怎么做出来的，以及这个汽车里面的具体实现。 2、Hibernate 换数据库只需换方言和驱动就可以。\",\"优点： 1、一个调用者想创建一个对象，只要知道其名称就可以了。 2、扩展性高，如果想增加一个产品，只要扩展一个工厂类就可以。 3、屏蔽产品的具体实现，调用者只关心产品的接口。\",\"缺点：每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加，在一定程度上增加了系统的复杂度，同时也增加了系统具体类的依赖。这并不是什么好事。\",\"使用场景： 1、日志记录器：记录可能记录到本地硬盘、系统事件、远程服务器等，用户可以选择记录日志到什么地方。 2、数据库访问，当用户不知道最后系统采用哪一类数据库，以及数据库可能有变化时。 3、设计一个连接服务器的框架，需要三个协议，\\\"POP3\\\"、\\\"IMAP\\\"、\\\"HTTP\\\"，可以把这三个作为产品类，共同实现一个接口。\",\"注意事项：作为一种创建类模式，在任何需要生成复杂对象的地方，都可以使用工厂方法模式。有一点需要注意的地方就是复杂对象适合使用工厂模式，而简单对象，特别是只需要通过 new 就可以完成创建的对象，无需使用工厂模式。如果使用工厂模式，就需要引入一个工厂类，会增加系统的复杂度。\",\"步骤 1: 创建一个接口。\",\"// Shape.java public interface Shape { void draw(); }\",\"步骤 2: 创建实现接口的实体类。\",\"// Rectangle.java public class Rectangle implements Shape { @Override public void draw() { System.out.println(\\\"Inside Rectangle::draw() method.\\\"); } }\",\"// Square.java public class Square implements Shape { @Override public void draw() { System.out.println(\\\"Inside Square::draw() method.\\\"); } }\",\"// Circle.java public class Circle implements Shape { @Override public void draw() { System.out.println(\\\"Inside Circle::draw() method.\\\"); } }\",\"步骤 3: 创建一个工厂，生成基于给定信息的实体类的对象。\",\"// ShapeFactory.java public class ShapeFactory { //使用 getShape 方法获取形状类型的对象 public Shape getShape(String shapeType){ if(shapeType == null){ return null; } if(shapeType.equalsIgnoreCase(\\\"CIRCLE\\\")){ return new Circle(); } else if(shapeType.equalsIgnoreCase(\\\"RECTANGLE\\\")){ return new Rectangle(); } else if(shapeType.equalsIgnoreCase(\\\"SQUARE\\\")){ return new Square(); } return null; } }\",\"步骤 4: 使用该工厂，通过传递类型信息来获取实体类的对象。\",\"// FactoryPatternDemo.java public class FactoryPatternDemo { public static void main(String[] args) { ShapeFactory shapeFactory = new ShapeFactory(); //获取 Circle 的对象，并调用它的 draw 方法 Shape shape1 = shapeFactory.getShape(\\\"CIRCLE\\\"); //调用 Circle 的 draw 方法 shape1.draw(); //获取 Rectangle 的对象，并调用它的 draw 方法 Shape shape2 = shapeFactory.getShape(\\\"RECTANGLE\\\"); //调用 Rectangle 的 draw 方法 shape2.draw(); //获取 Square 的对象，并调用它的 draw 方法 Shape shape3 = shapeFactory.getShape(\\\"SQUARE\\\"); //调用 Square 的 draw 方法 shape3.draw(); } }\",\"步骤 5: 验证输出。\",\"Inside Circle::draw() method. Inside Rectangle::draw() method. Inside Square::draw() method.\"]},\"304\":{\"h\":\"抽象工厂模式（Abstract Factory Pattern）\",\"t\":[\"是围绕一个超级工厂创建其他工厂。该超级工厂又称为其他工厂的工厂。\",\"在抽象工厂模式中，接口是负责创建一个相关对象的工厂，不需要显式指定它们的类。每个生成的工厂都能按照工厂模式提供对象。\",\"意图：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。\",\"主要解决：主要解决接口选择的问题。\",\"何时使用：系统的产品有多于一个的产品族，而系统只消费其中某一族的产品。\",\"如何解决：在一个产品族里面，定义多个产品。\",\"关键代码：在一个工厂里聚合多个同类产品。\",\"应用实例：工作了，为了参加一些聚会，肯定有两套或多套衣服吧，比如说有商务装（成套，一系列具体产品）、时尚装（成套，一系列具体产品），甚至对于一个家庭来说，可能有商务女装、商务男装、时尚女装、时尚男装，这些也都是成套的，即一系列具体产品。假设一种情况（现实中是不存在的，要不然，没法进入共产主义了，但有利于说明抽象工厂模式），在您的家中，某一个衣柜（具体工厂）只能存放某一种这样的衣服（成套，一系列具体产品），每次拿这种成套的衣服时也自然要从这个衣柜中取出了。用 OO 的思想去理解，所有的衣柜（具体工厂）都是衣柜类的（抽象工厂）某一个，而每一件成套的衣服又包括具体的上衣（某一具体产品），裤子（某一具体产品），这些具体的上衣其实也都是上衣（抽象产品），具体的裤子也都是裤子（另一个抽象产品）。\",\"优点：当一个产品族中的多个对象被设计成一起工作时，它能保证客户端始终只使用同一个产品族中的对象。\",\"缺点：产品族扩展非常困难，要增加一个系列的某一产品，既要在抽象的 Creator 里加代码，又要在具体的里面加代码。\",\"使用场景： 1、QQ 换皮肤，一整套一起换。 2、生成不同操作系统的程序。\",\"注意事项：产品族难扩展，产品等级易扩展。\",\"步骤 1: 为形状创建一个接口。\",\"// Shape.java public interface Shape { void draw(); }\",\"步骤 2: 创建实现接口的实体类。\",\"// Rectangle.java public class Rectangle implements Shape { @Override public void draw() { System.out.println(\\\"Inside Rectangle::draw() method.\\\"); } }\",\"// Square.java public class Square implements Shape { @Override public void draw() { System.out.println(\\\"Inside Square::draw() method.\\\"); } }\",\"Circle.java public class Circle implements Shape { @Override public void draw() { System.out.println(\\\"Inside Circle::draw() method.\\\"); }}\",\"步骤 3: 为颜色创建一个接口。\",\"// Color.java public interface Color { void fill(); }\",\"步骤4: 创建实现接口的实体类。\",\"// Red.java public class Red implements Color { @Override public void fill() { System.out.println(\\\"Inside Red::fill() method.\\\"); } }\",\"// Green.java public class Green implements Color { @Override public void fill() { System.out.println(\\\"Inside Green::fill() method.\\\"); } }\",\"// Blue.java public class Blue implements Color { @Override public void fill() { System.out.println(\\\"Inside Blue::fill() method.\\\"); } }\",\"步骤 5: 为 Color 和 Shape 对象创建抽象类来获取工厂。\",\"// AbstractFactory.java public abstract class AbstractFactory { abstract Color getColor(String color); abstract Shape getShape(String shape) ; }\",\"步骤 6: 创建扩展了 AbstractFactory 的工厂类，基于给定的信息生成实体类的对象。\",\"// ShapeFactory.java public class ShapeFactory extends AbstractFactory { @Override public Shape getShape(String shapeType){ if(shapeType == null){ return null; } if(shapeType.equalsIgnoreCase(\\\"CIRCLE\\\")){ return new Circle(); } else if(shapeType.equalsIgnoreCase(\\\"RECTANGLE\\\")){ return new Rectangle(); } else if(shapeType.equalsIgnoreCase(\\\"SQUARE\\\")){ return new Square(); } return null; } @Override Color getColor(String color) { return null; } } // ColorFactory.java public class ColorFactory extends AbstractFactory { @Override public Shape getShape(String shapeType){ return null; } @Override Color getColor(String color) { if(color == null){ return null; } if(color.equalsIgnoreCase(\\\"RED\\\")){ return new Red(); } else if(color.equalsIgnoreCase(\\\"GREEN\\\")){ return new Green(); } else if(color.equalsIgnoreCase(\\\"BLUE\\\")){ return new Blue(); } return null; } }\",\"步骤 7: 创建一个工厂创造器/生成器类，通过传递形状或颜色信息来获取工厂。\",\"// FactoryProducer.java public class FactoryProducer { public static AbstractFactory getFactory(String choice){ if(choice.equalsIgnoreCase(\\\"SHAPE\\\")){ return new ShapeFactory(); } else if(choice.equalsIgnoreCase(\\\"COLOR\\\")){ return new ColorFactory(); } return null; } }\",\"步骤 8: 使用 FactoryProducer 来获取 AbstractFactory，通过传递类型信息来获取实体类的对象。\",\"// AbstractFactoryPatternDemo.java public class AbstractFactoryPatternDemo { public static void main(String[] args) { //获取形状工厂 AbstractFactory shapeFactory = FactoryProducer.getFactory(\\\"SHAPE\\\"); //获取形状为 Circle 的对象 Shape shape1 = shapeFactory.getShape(\\\"CIRCLE\\\"); //调用 Circle 的 draw 方法 shape1.draw(); //获取形状为 Rectangle 的对象 Shape shape2 = shapeFactory.getShape(\\\"RECTANGLE\\\"); //调用 Rectangle 的 draw 方法 shape2.draw(); //获取形状为 Square 的对象 Shape shape3 = shapeFactory.getShape(\\\"SQUARE\\\"); //调用 Square 的 draw 方法 shape3.draw(); //获取颜色工厂 AbstractFactory colorFactory = FactoryProducer.getFactory(\\\"COLOR\\\"); //获取颜色为 Red 的对象 Color color1 = colorFactory.getColor(\\\"RED\\\"); //调用 Red 的 fill 方法 color1.fill(); //获取颜色为 Green 的对象 Color color2 = colorFactory.getColor(\\\"Green\\\"); //调用 Green 的 fill 方法 color2.fill(); //获取颜色为 Blue 的对象 Color color3 = colorFactory.getColor(\\\"BLUE\\\"); //调用 Blue 的 fill 方法 color3.fill(); } }\",\"步骤 9: 验证输出。\",\"Inside Circle::draw() method. Inside Rectangle::draw() method. Inside Square::draw() method. Inside Red::fill() method. Inside Green::fill() method. Inside Blue::fill() method.\"]},\"305\":{\"h\":\"单例模式（Singleton Pattern）\",\"t\":[\"是 Java 中最简单的设计模式之一\",\"这种模式涉及到一个单一的类，该类负责创建自己的对象，同时确保只有单个对象被创建。这个类提供了一种访问其唯一的对象的方式，可以直接访问，不需要实例化该类的对象。\",\"注意：\",\"单例类只能有一个实例。\",\"单例类必须自己创建自己的唯一实例。\",\"单例类必须给所有其他对象提供这一实例。\",\"意图：保证一个类仅有一个实例，并提供一个访问它的全局访问点。\",\"主要解决：一个全局使用的类频繁地创建与销毁。\",\"何时使用：当您想控制实例数目，节省系统资源的时候。\",\"如何解决：判断系统是否已经有这个单例，如果有则返回，如果没有则创建。\",\"关键代码：构造函数是私有的。\",\"应用实例： 1、一个党只能有一个主席。 2、Windows 是多进程多线程的，在操作一个文件的时候，就不可避免地出现多个进程或线程同时操作一个文件的现象，所以所有文件的处理必须通过唯一的实例来进行。 3、一些设备管理器常常设计为单例模式，比如一个电脑有两台打印机，在输出的时候就要处理不能两台打印机打印同一个文件。\",\"优点： 1、在内存里只有一个实例，减少了内存的开销，尤其是频繁的创建和销毁实例（比如管理学院首页页面缓存）。 2、避免对资源的多重占用（比如写文件操作）。\",\"缺点：没有接口，不能继承，与单一职责原则冲突，一个类应该只关心内部逻辑，而不关心外面怎么样来实例化。\",\"使用场景： 1、要求生产唯一序列号。 2、WEB 中的计数器，不用每次刷新都在数据库里加一次，用单例先缓存起来。 3、创建的一个对象需要消耗的资源过多，比如 I/O 与数据库的连接等。\",\"注意事项：getInstance() 方法中需要使用同步锁 synchronized (Singleton.class) 防止多线程同时进入造成 instance 被多次实例化。\",\"步骤 1: 创建一个 Singleton 类。\",\"// SingleObject.java public class SingleObject { //创建 SingleObject 的一个对象 private static SingleObject instance = new SingleObject(); //让构造函数为 private，这样该类就不会被实例化 private SingleObject(){} //获取唯一可用的对象 public static SingleObject getInstance(){ return instance; } public void showMessage(){ System.out.println(\\\"Hello World!\\\"); } }\",\"步骤 2: 从 singleton 类获取唯一的对象。\",\"// SingletonPatternDemo.java public class SingletonPatternDemo { public static void main(String[] args) { //不合法的构造函数 //编译时错误：构造函数 SingleObject() 是不可见的 //SingleObject object = new SingleObject(); //获取唯一可用的对象 SingleObject object = SingleObject.getInstance(); //显示消息 object.showMessage(); } }\",\"步骤 3: 验证输出。\",\"Hello World!\",\"单例模式的几种实现方式 单例模式的实现有多种方式，如下所示：\",\"1、懒汉式，线程不安全 是否 Lazy 初始化：是 是否多线程安全：否 实现难度：易\",\"描述：这种方式是最基本的实现方式，这种实现最大的问题就是不支持多线程。因为没有加锁synchronized，所以严格意义上它并不算单例模式。 这种方式 lazy loading 很明显，不要求线程安全，在多线程不能正常工作。\",\"代码实例：\",\"public class Singleton { private static Singleton instance; private Singleton (){} public static Singleton getInstance() { if (instance == null) { instance = new Singleton(); } return instance; } }\",\"接下来介绍的几种实现方式都支持多线程，但是在性能上有所差异。\",\"2、懒汉式，线程安全 是否 Lazy 初始化：是\",\"是否多线程安全：是\",\"实现难度：易\",\"描述：这种方式具备很好的 lazy loading，能够在多线程中很好的工作，但是，效率很低，99% 情况下不需要同步。 优点：第一次调用才初始化，避免内存浪费。 缺点：必须加锁 synchronized 才能保证单例，但加锁会影响效率。 getInstance() 的性能对应用程序不是很关键（该方法使用不太频繁）。\",\"代码实例：\",\"public class Singleton { private static Singleton instance; private Singleton (){} public static synchronized Singleton getInstance() { if (instance == null) { instance = new Singleton(); } return instance; } }\",\"3、饿汉式 是否 Lazy 初始化：否\",\"是否多线程安全：是\",\"实现难度：易\",\"描述：这种方式比较常用，但容易产生垃圾对象。 优点：没有加锁，执行效率会提高。 缺点：类加载时就初始化，浪费内存。 它基于 classloder 机制避免了多线程的同步问题，不过，instance 在类装载时就实例化，虽然导致类装载的原因有很多种，在单例模式中大多数都是调用 getInstance 方法， 但是也不能确定有其他的方式（或者其他的静态方法）导致类装载，这时候初始化 instance 显然没有达到 lazy loading 的效果。\",\"代码实例：\",\"public class Singleton { private static Singleton instance = new Singleton(); private Singleton (){} public static Singleton getInstance() { return instance; } }\",\"4、双检锁/双重校验锁（DCL，即 double-checked locking） JDK 版本：JDK1.5 起\",\"是否 Lazy 初始化：是\",\"是否多线程安全：是\",\"实现难度：较复杂\",\"描述：这种方式采用双锁机制，安全且在多线程情况下能保持高性能。 getInstance() 的性能对应用程序很关键。\",\"代码实例：\",\"public class Singleton { private volatile static Singleton singleton; private Singleton (){} public static Singleton getSingleton() { if (singleton == null) { synchronized (Singleton.class) { if (singleton == null) { singleton = new Singleton(); } } } return singleton; } }\",\"5、登记式/静态内部类 是否 Lazy 初始化：是\",\"是否多线程安全：是\",\"实现难度：一般\",\"描述：这种方式能达到双检锁方式一样的功效，但实现更简单。对静态域使用延迟初始化，应使用这种方式而不是双检锁方式。这种方式只适用于静态域的情况，双检锁方式可在实例域需要延迟初始化时使用。 这种方式同样利用了 classloder 机制来保证初始化 instance 时只有一个线程，它跟第 3 种方式不同的是：第 3 种方式只要 Singleton 类被装载了，那么 instance 就会被实例化（没有达到 lazy loading 效果），而这种方式是 Singleton 类被装载了，instance 不一定被初始化。因为 SingletonHolder 类没有被主动使用，只有显示通过调用 getInstance 方法时，才会显示装载 SingletonHolder 类，从而实例化 instance。想象一下，如果实例化 instance 很消耗资源，所以想让它延迟加载，另外一方面，又不希望在 Singleton 类加载时就实例化，因为不能确保 Singleton 类还可能在其他的地方被主动使用从而被加载，那么这个时候实例化 instance 显然是不合适的。这个时候，这种方式相比第 3 种方式就显得很合理。\",\"代码实例：\",\"public class Singleton { private static class SingletonHolder { private static final Singleton INSTANCE = new Singleton(); } private Singleton (){} public static final Singleton getInstance() { return SingletonHolder.INSTANCE; } }\",\"6、枚举 JDK 版本：JDK1.5 起\",\"是否 Lazy 初始化：否\",\"是否多线程安全：是\",\"实现难度：易\",\"描述：这种实现方式还没有被广泛采用，但这是实现单例模式的最佳方法。它更简洁，自动支持序列化机制，绝对防止多次实例化。 这种方式是 Effective Java 作者 Josh Bloch 提倡的方式，它不仅能避免多线程同步问题，而且还自动支持序列化机制，防止反序列化重新创建新的对象，绝对防止多次实例化。不过，由于 JDK1.5 之后才加入 enum 特性，用这种方式写不免让人感觉生疏，在实际工作中，也很少用。 不能通过 reflection attack 来调用私有构造方法。\",\"代码实例：\",\"public enum Singleton { INSTANCE; public void whateverMethod() { } }\",\"经验之谈：一般情况下，不建议使用第 1 种和第 2 种懒汉方式，建议使用第 3 种饿汉方式。只有在要明确实现 lazy loading 效果时，才会使用第 5 种登记方式。如果涉及到反序列化创建对象时，可以尝试使用第 6 种枚举方式。如果有其他特殊的需求，可以考虑使用第 4 种双检锁方式。\"]},\"306\":{\"h\":\"原型模式（Prototype Pattern）\",\"t\":[\"是用于创建重复的对象，同时又能保证性能。\",\"这种模式是实现了一个原型接口，该接口用于创建当前对象的克隆。当直接创建对象的代价比较大时，则采用这种模式。例如，一个对象需要在一个高代价的数据库操作之后被创建。我们可以缓存该对象，在下一个请求时返回它的克隆，在需要的时候更新数据库，以此来减少数据库调用。\",\"意图：用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。\",\"主要解决：在运行期建立和删除原型。\",\"何时使用： 1、当一个系统应该独立于它的产品创建，构成和表示时。 2、当要实例化的类是在运行时刻指定时，例如，通过动态装载。 3、为了避免创建一个与产品类层次平行的工厂类层次时。 4、当一个类的实例只能有几个不同状态组合中的一种时。建立相应数目的原型并克隆它们可能比每次用合适的状态手工实例化该类更方便一些。\",\"如何解决：利用已有的一个原型对象，快速地生成和原型对象一样的实例。\",\"关键代码： 1、实现克隆操作，在 JAVA 继承 Cloneable，重写 clone()，在 .NET 中可以使用 Object 类的 MemberwiseClone() 方法来实现对象的浅拷贝或通过序列化的方式来实现深拷贝。 2、原型模式同样用于隔离类对象的使用者和具体类型（易变类）之间的耦合关系，它同样要求这些\\\"易变类\\\"拥有稳定的接口。\",\"应用实例： 1、细胞分裂。 2、JAVA 中的 Object clone() 方法。\",\"优点： 1、性能提高。 2、逃避构造函数的约束。\",\"缺点： 1、配备克隆方法需要对类的功能进行通盘考虑，这对于全新的类不是很难，但对于已有的类不一定很容易，特别当一个类引用不支持串行化的间接对象，或者引用含有循环结构的时候。 2、必须实现 Cloneable 接口。 3、逃避构造函数的约束。\",\"使用场景： 1、资源优化场景。 2、类初始化需要消化非常多的资源，这个资源包括数据、硬件资源等。 3、性能和安全要求的场景。 4、通过 new 产生一个对象需要非常繁琐的数据准备或访问权限，则可以使用原型模式。 5、一个对象多个修改者的场景。 6、一个对象需要提供给其他对象访问，而且各个调用者可能都需要修改其值时，可以考虑使用原型模式拷贝多个对象供调用者使用。 7、在实际项目中，原型模式很少单独出现，一般是和工厂方法模式一起出现，通过 clone 的方法创建一个对象，然后由工厂方法提供给调用者。原型模式已经与 Java 融为浑然一体，大家可以随手拿来使用。\",\"注意事项：与通过对一个类进行实例化来构造新对象不同的是，原型模式是通过拷贝一个现有对象生成新对象的。浅拷贝实现 Cloneable，重写，深拷贝是通过实现 Serializable 读取二进制流。\",\"步骤 1: 创建一个实现了 Clonable 接口的抽象类。\",\"// Shape.java public abstract class Shape implements Cloneable { private String id; protected String type; abstract void draw(); public String getType(){ return type; } public String getId() { return id; } public void setId(String id) { this.id = id; } public Object clone() { Object clone = null; try { clone = super.clone(); } catch (CloneNotSupportedException e) { e.printStackTrace(); } return clone; } }\",\"步骤 2: 创建扩展了上面抽象类的实体类。\",\"// Rectangle.java public class Rectangle extends Shape { public Rectangle(){ type = \\\"Rectangle\\\"; } @Override public void draw() { System.out.println(\\\"Inside Rectangle::draw() method.\\\"); } } // Square.java public class Square extends Shape { public Square(){ type = \\\"Square\\\"; } @Override public void draw() { System.out.println(\\\"Inside Square::draw() method.\\\"); } } // Circle.java public class Circle extends Shape { public Circle(){ type = \\\"Circle\\\"; } @Override public void draw() { System.out.println(\\\"Inside Circle::draw() method.\\\"); }}\",\"步骤 3: 创建一个类，从数据库获取实体类，并把它们存储在一个 Hashtable 中。\",\"// ShapeCache.java import java.util.Hashtable; public class ShapeCache { private static Hashtable<String, Shape> shapeMap = new Hashtable<String, Shape>(); public static Shape getShape(String shapeId) { Shape cachedShape = shapeMap.get(shapeId); return (Shape) cachedShape.clone(); } // 对每种形状都运行数据库查询，并创建该形状 // shapeMap.put(shapeKey, shape); // 例如，我们要添加三种形状 public static void loadCache() { Circle circle = new Circle(); circle.setId(\\\"1\\\"); shapeMap.put(circle.getId(),circle); Square square = new Square(); square.setId(\\\"2\\\"); shapeMap.put(square.getId(),square); Rectangle rectangle = new Rectangle(); rectangle.setId(\\\"3\\\"); shapeMap.put(rectangle.getId(),rectangle); } }\",\"步骤 4: PrototypePatternDemo 使用 ShapeCache 类来获取存储在 Hashtable 中的形状的克隆。\",\"// PrototypePatternDemo.java public class PrototypePatternDemo { public static void main(String[] args) { ShapeCache.loadCache(); Shape clonedShape = (Shape) ShapeCache.getShape(\\\"1\\\"); System.out.println(\\\"Shape : \\\" + clonedShape.getType()); Shape clonedShape2 = (Shape) ShapeCache.getShape(\\\"2\\\"); System.out.println(\\\"Shape : \\\" + clonedShape2.getType()); Shape clonedShape3 = (Shape) ShapeCache.getShape(\\\"3\\\"); System.out.println(\\\"Shape : \\\" + clonedShape3.getType()); } }\",\"步骤 5: 验证输出。\",\"Shape : Circle Shape : Square Shape : Rectangle\"]},\"307\":{\"h\":\"桥接（Bridge）\",\"t\":[\"是用于把抽象化与实现化解耦，使得二者可以独立变化。这种类型的设计模式属于结构型模式，它通过提供抽象化和实现化之间的桥接结构，来实现二者的解耦。\",\"这种模式涉及到一个作为桥接的接口，使得实体类的功能独立于接口实现类。这两种类型的类可被结构化改变而互不影响。\",\"我们通过下面的实例来演示桥接模式（Bridge Pattern）的用法。其中，可以使用相同的抽象类方法但是不同的桥接实现类，来画出不同颜色的圆。\",\"意图：将抽象部分与实现部分分离，使它们都可以独立的变化。\",\"主要解决：在有多种可能会变化的情况下，用继承会造成类爆炸问题，扩展起来不灵活。\",\"何时使用：实现系统可能有多个角度分类，每一种角度都可能变化。\",\"如何解决：把这种多角度分类分离出来，让它们独立变化，减少它们之间耦合。\",\"关键代码：抽象类依赖实现类。\",\"应用实例： 1、猪八戒从天蓬元帅转世投胎到猪，转世投胎的机制将尘世划分为两个等级，即：灵魂和肉体，前者相当于抽象化，后者相当于实现化。生灵通过功能的委派，调用肉体对象的功能，使得生灵可以动态地选择。 2、墙上的开关，可以看到的开关是抽象的，不用管里面具体怎么实现的。\",\"优点： 1、抽象和实现的分离。 2、优秀的扩展能力。 3、实现细节对客户透明。\",\"缺点：桥接模式的引入会增加系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者针对抽象进行设计与编程。\",\"使用场景： 1、如果一个系统需要在构件的抽象化角色和具体化角色之间增加更多的灵活性，避免在两个层次之间建立静态的继承联系，通过桥接模式可以使它们在抽象层建立一个关联关系。 2、对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。 3、一个类存在两个独立变化的维度，且这两个维度都需要进行扩展。\",\"注意事项：对于两个独立变化的维度，使用桥接模式再适合不过了。\",\"步骤 1: 创建桥接实现接口。\",\"// DrawAPI.java public interface DrawAPI { public void drawCircle(int radius, int x, int y); }\",\"步骤 2: 创建实现了 DrawAPI 接口的实体桥接实现类。\",\"// RedCircle.java public class RedCircle implements DrawAPI { @Override public void drawCircle(int radius, int x, int y) { System.out.println(\\\"Drawing Circle[ color: red, radius: \\\" + radius +\\\", x: \\\" +x+\\\", \\\"+ y +\\\"]\\\"); } } // GreenCircle.java public class GreenCircle implements DrawAPI { @Override public void drawCircle(int radius, int x, int y) { System.out.println(\\\"Drawing Circle[ color: green, radius: \\\" + radius +\\\", x: \\\" +x+\\\", \\\"+ y +\\\"]\\\"); } }\",\"步骤 3: 使用 DrawAPI 接口创建抽象类 Shape。\",\"// Shape.java public abstract class Shape { protected DrawAPI drawAPI; protected Shape(DrawAPI drawAPI){ this.drawAPI = drawAPI; } public abstract void draw(); }\",\"步骤 4: 创建实现了 Shape 接口的实体类。\",\"// Circle.java public class Circle extends Shape { private int x, y, radius; public Circle(int x, int y, int radius, DrawAPI drawAPI) { super(drawAPI); this.x = x; this.y = y; this.radius = radius; } public void draw() { drawAPI.drawCircle(radius,x,y); } }\",\"步骤 5: 使用 Shape 和 DrawAPI 类画出不同颜色的圆。\",\"BridgePatternDemo.java public class BridgePatternDemo { public static void main(String[] args) { Shape redCircle = new Circle(100,100, 10, new RedCircle()); Shape greenCircle = new Circle(100,100, 10, new GreenCircle()); redCircle.draw(); greenCircle.draw(); } }\",\"步骤 6: 验证输出。\",\"Drawing Circle[ color: red, radius: 10, x: 100, 100] Drawing Circle[ color: green, radius: 10, x: 100, 100]\"]},\"308\":{\"h\":\"过滤器模式（Filter Pattern）或标准模式（Criteria Pattern）\",\"t\":[\"这种模式允许开发人员使用不同的标准来过滤一组对象，通过逻辑运算以解耦的方式把它们连接起来。这种类型的设计模式属于结构型模式，它结合多个标准来获得单一标准。\",\"步骤 1: 创建一个类，在该类上应用标准。\",\"// Person.java public class Person { private String name; private String gender; private String maritalStatus; public Person(String name,String gender,String maritalStatus){ this.name = name; this.gender = gender; this.maritalStatus = maritalStatus; } public String getName() { return name; } public String getGender() { return gender; } public String getMaritalStatus() { return maritalStatus; } } 步骤 2: 为标准（Criteria）创建一个接口。 ```java Criteria.java import java.util.List;public interface Criteria { public List<Person> meetCriteria(List<Person> persons); }\",\"步骤 3: 创建实现了 Criteria 接口的实体类。\",\"// CriteriaMale.java import java.util.ArrayList;import java.util.List;public class CriteriaMale implements Criteria { @Override public List<Person> meetCriteria(List<Person> persons) { List<Person> malePersons = new ArrayList<Person>(); for (Person person : persons) { if(person.getGender().equalsIgnoreCase(\\\"MALE\\\")){ malePersons.add(person); } } return malePersons; } } // CriteriaFemale.java import java.util.ArrayList;import java.util.List;public class CriteriaFemale implements Criteria { @Override public List<Person> meetCriteria(List<Person> persons) { List<Person> femalePersons = new ArrayList<Person>(); for (Person person : persons) { if(person.getGender().equalsIgnoreCase(\\\"FEMALE\\\")){ femalePersons.add(person); } } return femalePersons; } } // CriteriaSingle.java import java.util.ArrayList;import java.util.List;public class CriteriaSingle implements Criteria { @Override public List<Person> meetCriteria(List<Person> persons) { List<Person> singlePersons = new ArrayList<Person>(); for (Person person : persons) { if(person.getMaritalStatus().equalsIgnoreCase(\\\"SINGLE\\\")){ singlePersons.add(person); } } return singlePersons; } } // AndCriteria.java import java.util.List;public class AndCriteria implements Criteria { private Criteria criteria; private Criteria otherCriteria; public AndCriteria(Criteria criteria, Criteria otherCriteria) { this.criteria = criteria; this.otherCriteria = otherCriteria; } @Override public List<Person> meetCriteria(List<Person> persons) { List<Person> firstCriteriaPersons = criteria.meetCriteria(persons); return otherCriteria.meetCriteria(firstCriteriaPersons); } } // OrCriteria.java import java.util.List;public class OrCriteria implements Criteria { private Criteria criteria; private Criteria otherCriteria; public OrCriteria(Criteria criteria, Criteria otherCriteria) { this.criteria = criteria; this.otherCriteria = otherCriteria; } @Override public List<Person> meetCriteria(List<Person> persons) { List<Person> firstCriteriaItems = criteria.meetCriteria(persons); List<Person> otherCriteriaItems = otherCriteria.meetCriteria(persons); for (Person person : otherCriteriaItems) { if(!firstCriteriaItems.contains(person)){ firstCriteriaItems.add(person); } } return firstCriteriaItems; } }\",\"步骤4: 使用不同的标准（Criteria）和它们的结合来过滤 Person 对象的列表。\",\"// CriteriaPatternDemo.java import java.util.ArrayList; import java.util.List;public class CriteriaPatternDemo { public static void main(String[] args) { List<Person> persons = new ArrayList<Person>(); persons.add(new Person(\\\"Robert\\\",\\\"Male\\\", \\\"Single\\\")); persons.add(new Person(\\\"John\\\",\\\"Male\\\", \\\"Married\\\")); persons.add(new Person(\\\"Laura\\\",\\\"Female\\\", \\\"Married\\\")); persons.add(new Person(\\\"Diana\\\",\\\"Female\\\", \\\"Single\\\")); persons.add(new Person(\\\"Mike\\\",\\\"Male\\\", \\\"Single\\\")); persons.add(new Person(\\\"Bobby\\\",\\\"Male\\\", \\\"Single\\\")); Criteria male = new CriteriaMale(); Criteria female = new CriteriaFemale(); Criteria single = new CriteriaSingle(); Criteria singleMale = new AndCriteria(single, male); Criteria singleOrFemale = new OrCriteria(single, female); System.out.println(\\\"Males: \\\"); printPersons(male.meetCriteria(persons)); System.out.println(\\\"\\\\nFemales: \\\"); printPersons(female.meetCriteria(persons)); System.out.println(\\\"\\\\nSingle Males: \\\"); printPersons(singleMale.meetCriteria(persons)); System.out.println(\\\"\\\\nSingle Or Females: \\\"); printPersons(singleOrFemale.meetCriteria(persons)); } public static void printPersons(List<Person> persons){ for (Person person : persons) { System.out.println(\\\"Person : [ Name : \\\" + person.getName() +\\\", Gender : \\\" + person.getGender() +\\\", Marital Status : \\\" + person.getMaritalStatus() +\\\" ]\\\"); } } } 步骤 5: 验证输出。 ```txt Males: Person : [ Name : Robert, Gender : Male, Marital Status : Single ] Person : [ Name : John, Gender : Male, Marital Status : Married ] Person : [ Name : Mike, Gender : Male, Marital Status : Single ] Person : [ Name : Bobby, Gender : Male, Marital Status : Single ] Females: Person : [ Name : Laura, Gender : Female, Marital Status : Married ] Person : [ Name : Diana, Gender : Female, Marital Status : Single ] Single Males: Person : [ Name : Robert, Gender : Male, Marital Status : Single ] Person : [ Name : Mike, Gender : Male, Marital Status : Single ] Person : [ Name : Bobby, Gender : Male, Marital Status : Single ] Single Or Females: Person : [ Name : Robert, Gender : Male, Marital Status : Single ] Person : [ Name : Diana, Gender : Female, Marital Status : Single ] Person : [ Name : Mike, Gender : Male, Marital Status : Single ] Person : [ Name : Bobby, Gender : Male, Marital Status : Single ] Person : [ Name : Laura, Gender : Female, Marital Status : Married ]\"]},\"309\":{\"h\":\"组合模式（Composite Pattern）\",\"t\":[\"又叫部分整体模式，是用于把一组相似的对象当作一个单一的对象。组合模式依据树形结构来组合对象，用来表示部分以及整体层次。这种类型的设计模式属于结构型模式，它创建了对象组的树形结构。\",\"这种模式创建了一个包含自己对象组的类。该类提供了修改相同对象组的方式。\",\"我们通过下面的实例来演示组合模式的用法。实例演示了一个组织中员工的层次结构。\",\"意图：将对象组合成树形结构以表示\\\"部分-整体\\\"的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。\",\"主要解决：它在我们树型结构的问题中，模糊了简单元素和复杂元素的概念，客户程序可以向处理简单元素一样来处理复杂元素，从而使得客户程序与复杂元素的内部结构解耦。\",\"何时使用： 1、您想表示对象的部分-整体层次结构（树形结构）。 2、您希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。\",\"如何解决：树枝和叶子实现统一接口，树枝内部组合该接口。\",\"关键代码：树枝内部组合该接口，并且含有内部属性 List，里面放 Component。\",\"应用实例： 1、算术表达式包括操作数、操作符和另一个操作数，其中，另一个操作符也可以是操作树、操作符和另一个操作数。 2、在 JAVA AWT 和 SWING 中，对于 Button 和 Checkbox 是树叶，Container 是树枝。\",\"优点： 1、高层模块调用简单。 2、节点自由增加。\",\"缺点：在使用组合模式时，其叶子和树枝的声明都是实现类，而不是接口，违反了依赖倒置原则。\",\"使用场景：部分、整体场景，如树形菜单，文件、文件夹的管理。\",\"注意事项：定义时为具体类。\",\"步骤 1: 创建 Employee 类，该类带有 Employee 对象的列表。\",\"// Employee.java import java.util.ArrayList;import java.util.List;public class Employee { private String name; private String dept; private int salary; private List<Employee> subordinates; //构造函数 public Employee(String name,String dept, int sal) { this.name = name; this.dept = dept; this.salary = sal; subordinates = new ArrayList<Employee>(); } public void add(Employee e) { subordinates.add(e); } public void remove(Employee e) { subordinates.remove(e); } public List<Employee> getSubordinates(){ return subordinates; } public String toString(){ return (\\\"Employee :[ Name : \\\"+ name +\\\", dept : \\\"+ dept + \\\", salary :\\\" + salary+\\\" ]\\\"); } }\",\"步骤 2: 使用 Employee 类来创建和打印员工的层次结构。\",\"// CompositePatternDemo.java public class CompositePatternDemo { public static void main(String[] args) { Employee CEO = new Employee(\\\"John\\\",\\\"CEO\\\", 30000); Employee headSales = new Employee(\\\"Robert\\\",\\\"Head Sales\\\", 20000); Employee headMarketing = new Employee(\\\"Michel\\\",\\\"Head Marketing\\\", 20000); Employee clerk1 = new Employee(\\\"Laura\\\",\\\"Marketing\\\", 10000); Employee clerk2 = new Employee(\\\"Bob\\\",\\\"Marketing\\\", 10000); Employee salesExecutive1 = new Employee(\\\"Richard\\\",\\\"Sales\\\", 10000); Employee salesExecutive2 = new Employee(\\\"Rob\\\",\\\"Sales\\\", 10000); CEO.add(headSales); CEO.add(headMarketing); headSales.add(salesExecutive1); headSales.add(salesExecutive2); headMarketing.add(clerk1); headMarketing.add(clerk2); //打印该组织的所有员工 System.out.println(CEO); for (Employee headEmployee : CEO.getSubordinates()) { System.out.println(headEmployee); for (Employee employee : headEmployee.getSubordinates()) { System.out.println(employee); } } }}\",\"步骤 3: 验证输出。\",\"Employee :[ Name : John, dept : CEO, salary :30000 ] Employee :[ Name : Robert, dept : Head Sales, salary :20000 ] Employee :[ Name : Richard, dept : Sales, salary :10000 ] Employee :[ Name : Rob, dept : Sales, salary :10000 ] Employee :[ Name : Michel, dept : Head Marketing, salary :20000 ] Employee :[ Name : Laura, dept : Marketing, salary :10000 ] Employee :[ Name : Bob, dept : Marketing, salary :10000 ]\"]},\"310\":{\"h\":\"装饰器模式（Decorator Pattern）\",\"t\":[\"允许向一个现有的对象添加新的功能，同时又不改变其结构。这种类型的设计模式属于结构型模式，它是作为现有的类的一个包装。\",\"这种模式创建了一个装饰类，用来包装原有的类，并在保持类方法签名完整性的前提下，提供了额外的功能。\",\"我们通过下面的实例来演示装饰器模式的用法。其中，我们将把一个形状装饰上不同的颜色，同时又不改变形状类。\",\"意图：动态地给一个对象添加一些额外的职责。就增加功能来说，装饰器模式相比生成子类更为灵活。\",\"主要解决：一般的，我们为了扩展一个类经常使用继承方式实现，由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。\",\"何时使用：在不想增加很多子类的情况下扩展类。\",\"如何解决：将具体功能职责划分，同时继承装饰者模式。\",\"关键代码： 1、Component 类充当抽象角色，不应该具体实现。 2、修饰类引用和继承 Component 类，具体扩展类重写父类方法。\",\"应用实例： 1、孙悟空有 72 变，当他变成\\\"庙宇\\\"后，他的根本还是一只猴子，但是他又有了庙宇的功能。 2、不论一幅画有没有画框都可以挂在墙上，但是通常都是有画框的，并且实际上是画框被挂在墙上。在挂在墙上之前，画可以被蒙上玻璃，装到框子里；这时画、玻璃和画框形成了一个物体。\",\"优点：装饰类和被装饰类可以独立发展，不会相互耦合，装饰模式是继承的一个替代模式，装饰模式可以动态扩展一个实现类的功能。\",\"缺点：多层装饰比较复杂。\",\"使用场景： 1、扩展一个类的功能。 2、动态增加功能，动态撤销。\",\"注意事项：可代替继承。\",\"步骤 1: 创建一个接口。\",\"// Shape.java public interface Shape { void draw(); }\",\"步骤 2: 创建实现接口的实体类。\",\"// Rectangle.java public class Rectangle implements Shape { @Override public void draw() { System.out.println(\\\"Shape: Rectangle\\\"); } } // Circle.java public class Circle implements Shape { @Override public void draw() { System.out.println(\\\"Shape: Circle\\\"); } }\",\"步骤 3: 创建实现了 Shape 接口的抽象装饰类。\",\"// ShapeDecorator.java public abstract class ShapeDecorator implements Shape { protected Shape decoratedShape; public ShapeDecorator(Shape decoratedShape){ this.decoratedShape = decoratedShape; } public void draw(){ decoratedShape.draw(); } } 步骤 4: 创建扩展了 ShapeDecorator 类的实体装饰类。 ```java // RedShapeDecorator.java public class RedShapeDecorator extends ShapeDecorator { public RedShapeDecorator(Shape decoratedShape) { super(decoratedShape); } @Override public void draw() { decoratedShape.draw(); setRedBorder(decoratedShape); } private void setRedBorder(Shape decoratedShape){ System.out.println(\\\"Border Color: Red\\\"); } }\",\"步骤 5: 使用 RedShapeDecorator 来装饰 Shape 对象。\",\"// DecoratorPatternDemo.java public class DecoratorPatternDemo { public static void main(String[] args) { Shape circle = new Circle(); Shape redCircle = new RedShapeDecorator(new Circle()); Shape redRectangle = new RedShapeDecorator(new Rectangle()); System.out.println(\\\"Circle with normal border\\\"); circle.draw(); System.out.println(\\\"\\\\nCircle of red border\\\"); redCircle.draw(); System.out.println(\\\"\\\\nRectangle of red border\\\"); redRectangle.draw(); } }\",\"步骤 6: 验证输出。\",\"Circle with normal border Shape: Circle Circle of red border Shape: Circle Border Color: Red Rectangle of red border Shape: Rectangle Border Color: Red\"]},\"311\":{\"h\":\"外观模式（Facade Pattern）\",\"t\":[\"隐藏系统的复杂性，并向客户端提供了一个客户端可以访问系统的接口。这种类型的设计模式属于结构型模式，它向现有的系统添加一个接口，来隐藏系统的复杂性。\",\"这种模式涉及到一个单一的类，该类提供了客户端请求的简化方法和对现有系统类方法的委托调用。\",\"意图：为子系统中的一组接口提供一个一致的界面，外观模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。\",\"主要解决：降低访问复杂系统的内部子系统时的复杂度，简化客户端与之的接口。\",\"何时使用： 1、客户端不需要知道系统内部的复杂联系，整个系统只需提供一个\\\"接待员\\\"即可。 2、定义系统的入口。\",\"如何解决：客户端不与系统耦合，外观类与系统耦合。\",\"关键代码：在客户端和复杂系统之间再加一层，这一层将调用顺序、依赖关系等处理好。\",\"应用实例： 1、去医院看病，可能要去挂号、门诊、划价、取药，让患者或患者家属觉得很复杂，如果有提供接待人员，只让接待人员来处理，就很方便。 2、JAVA 的三层开发模式。\",\"优点： 1、减少系统相互依赖。 2、提高灵活性。 3、提高了安全性。\",\"缺点：不符合开闭原则，如果要改东西很麻烦，继承重写都不合适。\",\"使用场景： 1、为复杂的模块或子系统提供外界访问的模块。 2、子系统相对独立。 3、预防低水平人员带来的风险。\",\"注意事项：在层次化结构中，可以使用外观模式定义系统中每一层的入口。\",\"步骤 1: 创建一个接口。\",\"// Shape.java public interface Shape { void draw(); }\",\"步骤 2: 创建实现接口的实体类。\",\"// Rectangle.java public class Rectangle implements Shape { @Override public void draw() { System.out.println(\\\"Rectangle::draw()\\\"); } } // Square.java public class Square implements Shape { @Override public void draw() { System.out.println(\\\"Square::draw()\\\"); } } // Circle.java public class Circle implements Shape { @Override public void draw() { System.out.println(\\\"Circle::draw()\\\"); } }\",\"步骤 3: 创建一个外观类。\",\" // ShapeMaker.java public class ShapeMaker { private Shape circle; private Shape rectangle; private Shape square; public ShapeMaker() { circle = new Circle(); rectangle = new Rectangle(); square = new Square(); } public void drawCircle(){ circle.draw(); } public void drawRectangle(){ rectangle.draw(); } public void drawSquare(){ square.draw(); } }\",\"步骤 4: 使用该外观类画出各种类型的形状。\",\"// FacadePatternDemo.java public class FacadePatternDemo { public static void main(String[] args) { ShapeMaker shapeMaker = new ShapeMaker(); shapeMaker.drawCircle(); shapeMaker.drawRectangle(); shapeMaker.drawSquare(); } }\",\"步骤 5: 验证输出。\",\"Circle::draw() Rectangle::draw() Square::draw()\"]},\"312\":{\"h\":\"享元模式（Flyweight Pattern）\",\"t\":[\"主要用于减少创建对象的数量，以减少内存占用和提高性能。这种类型的设计模式属于结构型模式，它提供了减少对象数量从而改善应用所需的对象结构的方式。\",\"享元模式尝试重用现有的同类对象，如果未找到匹配的对象，则创建新对象。我们将通过创建 5 个对象来画出 20 个分布于不同位置的圆来演示这种模式。由于只有 5 种可用的颜色，所以 color 属性被用来检查现有的 Circle 对象。\",\"意图：运用共享技术有效地支持大量细粒度的对象。\",\"主要解决：在有大量对象时，有可能会造成内存溢出，我们把其中共同的部分抽象出来，如果有相同的业务请求，直接返回在内存中已有的对象，避免重新创建。\",\"何时使用： 1、系统中有大量对象。 2、这些对象消耗大量内存。 3、这些对象的状态大部分可以外部化。 4、这些对象可以按照内蕴状态分为很多组，当把外蕴对象从对象中剔除出来时，每一组对象都可以用一个对象来代替。 5、系统不依赖于这些对象身份，这些对象是不可分辨的。\",\"如何解决：用唯一标识码判断，如果在内存中有，则返回这个唯一标识码所标识的对象。\",\"关键代码：用 HashMap 存储这些对象。\",\"应用实例： 1、JAVA 中的 String，如果有则返回，如果没有则创建一个字符串保存在字符串缓存池里面。 2、数据库的数据池。\",\"优点：大大减少对象的创建，降低系统的内存，使效率提高。\",\"缺点：提高了系统的复杂度，需要分离出外部状态和内部状态，而且外部状态具有固有化的性质，不应该随着内部状态的变化而变化，否则会造成系统的混乱。\",\"使用场景： 1、系统有大量相似对象。 2、需要缓冲池的场景。\",\"注意事项： 1、注意划分外部状态和内部状态，否则可能会引起线程安全问题。 2、这些类必须有一个工厂对象加以控制。\",\"步骤 1: 创建一个接口。\",\"// Shape.java public interface Shape { void draw(); }\",\"步骤 2: 创建实现接口的实体类。\",\"// Circle.java public class Circle implements Shape { private String color; private int x; private int y; private int radius; public Circle(String color){ this.color = color; } public void setX(int x) { this.x = x; } public void setY(int y) { this.y = y; } public void setRadius(int radius) { this.radius = radius; } @Override public void draw() { System.out.println(\\\"Circle: Draw() [Color : \\\" + color +\\\", x : \\\" + x +\\\", y :\\\" + y +\\\", radius :\\\" + radius); } }\",\"步骤 3: 创建一个工厂，生成基于给定信息的实体类的对象。\",\"// ShapeFactory.java import java.util.HashMap;public class ShapeFactory { private static final HashMap<String, Shape> circleMap = new HashMap(); public static Shape getCircle(String color) { Circle circle = (Circle)circleMap.get(color); if(circle == null) { circle = new Circle(color); circleMap.put(color, circle); System.out.println(\\\"Creating circle of color : \\\" + color); } return circle; } }\",\"步骤 4: 使用该工厂，通过传递颜色信息来获取实体类的对象。\",\"// FlyweightPatternDemo.java public class FlyweightPatternDemo { private static final String colors[] = { \\\"Red\\\", \\\"Green\\\", \\\"Blue\\\", \\\"White\\\", \\\"Black\\\" }; public static void main(String[] args) { for(int i=0; i < 20; ++i) { Circle circle = (Circle)ShapeFactory.getCircle(getRandomColor()); circle.setX(getRandomX()); circle.setY(getRandomY()); circle.setRadius(100); circle.draw(); } } private static String getRandomColor() { return colors[(int)(Math.random()*colors.length)]; } private static int getRandomX() { return (int)(Math.random()*100 ); } private static int getRandomY() { return (int)(Math.random()*100); } }\",\"步骤 5: 验证输出。\",\"Creating circle of color : Black Circle: Draw() [Color : Black, x : 36, y :71, radius :100 Creating circle of color : Green Circle: Draw() [Color : Green, x : 27, y :27, radius :100 Creating circle of color : White Circle: Draw() [Color : White, x : 64, y :10, radius :100 Creating circle of color : Red Circle: Draw() [Color : Red, x : 15, y :44, radius :100 Circle: Draw() [Color : Green, x : 19, y :10, radius :100 Circle: Draw() [Color : Green, x : 94, y :32, radius :100 Circle: Draw() [Color : White, x : 69, y :98, radius :100 Creating circle of color : Blue Circle: Draw() [Color : Blue, x : 13, y :4, radius :100 Circle: Draw() [Color : Green, x : 21, y :21, radius :100 Circle: Draw() [Color : Blue, x : 55, y :86, radius :100 Circle: Draw() [Color : White, x : 90, y :70, radius :100 Circle: Draw() [Color : Green, x : 78, y :3, radius :100 Circle: Draw() [Color : Green, x : 64, y :89, radius :100 Circle: Draw() [Color : Blue, x : 3, y :91, radius :100 Circle: Draw() [Color : Blue, x : 62, y :82, radius :100 Circle: Draw() [Color : Green, x : 97, y :61, radius :100 Circle: Draw() [Color : Green, x : 86, y :12, radius :100 Circle: Draw() [Color : Green, x : 38, y :93, radius :100 Circle: Draw() [Color : Red, x : 76, y :82, radius :100 Circle: Draw() [Color : Blue, x : 95, y :82, radius :100\"]},\"313\":{\"h\":\"代理模式（Proxy Pattern）\",\"t\":[\"一个类代表另一个类的功能。这种类型的设计模式属于结构型模式。\",\"在代理模式中，我们创建具有现有对象的对象，以便向外界提供功能接口。\",\"意图：为其他对象提供一种代理以控制对这个对象的访问。\",\"主要解决：在直接访问对象时带来的问题，比如说：要访问的对象在远程的机器上。在面向对象系统中，有些对象由于某些原因（比如对象创建开销很大，或者某些操作需要安全控制，或者需要进程外的访问），直接访问会给使用者或者系统结构带来很多麻烦，我们可以在访问此对象时加上一个对此对象的访问层。\",\"何时使用：想在访问一个类时做一些控制。\",\"如何解决：增加中间层。\",\"关键代码：实现与被代理类组合。\",\"应用实例： 1、Windows 里面的快捷方式。 2、猪八戒去找高翠兰结果是孙悟空变的，可以这样理解：把高翠兰的外貌抽象出来，高翠兰本人和孙悟空都实现了这个接口，猪八戒访问高翠兰的时候看不出来这个是孙悟空，所以说孙悟空是高翠兰代理类。 3、买火车票不一定在火车站买，也可以去代售点。 4、一张支票或银行存单是账户中资金的代理。支票在市场交易中用来代替现金，并提供对签发人账号上资金的控制。 5、spring aop。\",\"优点： 1、职责清晰。 2、高扩展性。 3、智能化。\",\"缺点： 1、由于在客户端和真实主题之间增加了代理对象，因此有些类型的代理模式可能会造成请求的处理速度变慢。 2、实现代理模式需要额外的工作，有些代理模式的实现非常复杂。\",\"使用场景：按职责来划分，通常有以下使用场景： 1、远程代理。 2、虚拟代理。 3、Copy-on-Write 代理。 4、保护（Protect or Access）代理。 5、Cache代理。 6、防火墙（Firewall）代理。 7、同步化（Synchronization）代理。 8、智能引用（Smart Reference）代理。\",\"注意事项： 1、和适配器模式的区别：适配器模式主要改变所考虑对象的接口，而代理模式不能改变所代理类的接口。 2、和装饰器模式的区别：装饰器模式为了增强功能，而代理模式是为了加以控制。\",\"步骤 1: 创建一个接口。\",\"// Image.java public interface Image { void display(); }\",\"步骤 2: 创建实现接口的实体类。\",\"// RealImage.java public class RealImage implements Image { private String fileName; public RealImage(String fileName){ this.fileName = fileName; loadFromDisk(fileName); } @Override public void display() { System.out.println(\\\"Displaying \\\" + fileName); } private void loadFromDisk(String fileName){ System.out.println(\\\"Loading \\\" + fileName); } } // ProxyImage.java public class ProxyImage implements Image{ private RealImage realImage; private String fileName; public ProxyImage(String fileName){ this.fileName = fileName; } @Override public void display() { if(realImage == null){ realImage = new RealImage(fileName); } realImage.display(); } }\",\"步骤 3: 当被请求时，使用 ProxyImage 来获取 RealImage 类的对象。\",\"// jProxyPatternDemo.java public class ProxyPatternDemo { public static void main(String[] args) { Image image = new ProxyImage(\\\"test_10mb.jpg\\\"); //图像将从磁盘加载 image.display(); System.out.println(\\\"\\\"); //图像将无法从磁盘加载 image.display(); } }\",\"步骤 4: 验证输出。\",\"Loading test_10mb.jpg Displaying test_10mb.jpg Displaying test_10mb.jpg\"]},\"314\":{\"h\":\"责任链模式（Chain of Responsibility Pattern）\",\"t\":[\"为请求创建了一个接收者对象的链。这种模式给予请求的类型，对请求的发送者和接收者进行解耦。\",\"在这种模式中，通常每个接收者都包含对另一个接收者的引用。如果一个对象不能处理该请求，那么它会把相同的请求传给下一个接收者，依此类推。\",\"意图：避免请求发送者与接收者耦合在一起，让多个对象都有可能接收请求，将这些对象连接成一条链，并且沿着这条链传递请求，直到有对象处理它为止。\",\"主要解决：职责链上的处理者负责处理请求，客户只需要将请求发送到职责链上即可，无须关心请求的处理细节和请求的传递，所以职责链将请求的发送者和请求的处理者解耦了。\",\"何时使用：在处理消息的时候以过滤很多道。\",\"如何解决：拦截的类都实现统一接口。\",\"关键代码：Handler 里面聚合它自己，在 HanleRequest 里判断是否合适，如果没达到条件则向下传递，向谁传递之前 set 进去。\",\"应用实例： 1、红楼梦中的\\\"击鼓传花\\\"。 2、JS 中的事件冒泡。 3、JAVA WEB 中 Apache Tomcat 对 Encoding 的处理，Struts2 的拦截器，jsp servlet 的 Filter。\",\"优点： 1、降低耦合度。它将请求的发送者和接收者解耦。 2、简化了对象。使得对象不需要知道链的结构。 3、增强给对象指派职责的灵活性。通过改变链内的成员或者调动它们的次序，允许动态地新增或者删除责任。 4、增加新的请求处理类很方便。\",\"缺点： 1、不能保证请求一定被接收。 2、系统性能将受到一定影响，而且在进行代码调试时不太方便，可能会造成循环调用。 3、可能不容易观察运行时的特征，有碍于除错。\",\"使用场景： 1、有多个对象可以处理同一个请求，具体哪个对象处理该请求由运行时刻自动确定。 2、在不明确指定接收者的情况下，向多个对象中的一个提交一个请求。 3、可动态指定一组对象处理请求。\",\"注意事项：在 JAVA WEB 中遇到很多应用。\",\"步骤 1: 创建抽象的记录器类。\",\"// AbstractLogger.java public abstract class AbstractLogger { public static int INFO = 1; public static int DEBUG = 2; public static int ERROR = 3; protected int level; //责任链中的下一个元素 protected AbstractLogger nextLogger; public void setNextLogger(AbstractLogger nextLogger){ this.nextLogger = nextLogger; } public void logMessage(int level, String message){ if(this.level <= level){ write(message); } if(nextLogger !=null){ nextLogger.logMessage(level, message); } } abstract protected void write(String message); }\",\"步骤 2: 创建扩展了该记录器类的实体类。\",\"// ConsoleLogger.java public class ConsoleLogger extends AbstractLogger { public ConsoleLogger(int level){ this.level = level; } @Override protected void write(String message) { System.out.println(\\\"Standard Console::Logger: \\\" + message); } } // ErrorLogger.java public class ErrorLogger extends AbstractLogger { public ErrorLogger(int level){ this.level = level; } @Override protected void write(String message) { System.out.println(\\\"Error Console::Logger: \\\" + message); } } // FileLogger.java public class FileLogger extends AbstractLogger { public FileLogger(int level){ this.level = level; } @Override protected void write(String message) { System.out.println(\\\"File::Logger: \\\" + message); } }\",\"步骤 3: 创建不同类型的记录器。赋予它们不同的错误级别，并在每个记录器中设置下一个记录器。每个记录器中的下一个记录器代表的是链的一部分。\",\"// ChainPatternDemo.java public class ChainPatternDemo { private static AbstractLogger getChainOfLoggers(){ AbstractLogger errorLogger = new ErrorLogger(AbstractLogger.ERROR); AbstractLogger fileLogger = new FileLogger(AbstractLogger.DEBUG); AbstractLogger consoleLogger = new ConsoleLogger(AbstractLogger.INFO); errorLogger.setNextLogger(fileLogger); fileLogger.setNextLogger(consoleLogger); return errorLogger; } public static void main(String[] args) { AbstractLogger loggerChain = getChainOfLoggers(); loggerChain.logMessage(AbstractLogger.INFO, \\\"This is an information.\\\"); loggerChain.logMessage(AbstractLogger.DEBUG, \\\"This is an debug level information.\\\"); loggerChain.logMessage(AbstractLogger.ERROR, \\\"This is an error information.\\\"); } }\",\"步骤 4: 验证输出。\",\"Standard Console::Logger: This is an information. File::Logger: This is an debug level information. Standard Console::Logger: This is an debug level information. Error Console::Logger: This is an error information. File::Logger: This is an error information. Standard Console::Logger: This is an error information.\"]},\"315\":{\"h\":\"命令模式（Command Pattern）\",\"t\":[\"是一种数据驱动的设计模式，它属于行为型模式。请求以命令的形式包裹在对象中，并传给调用对象。调用对象寻找可以处理该命令的合适的对象，并把该命令传给相应的对象，该对象执行命令。\",\"意图：将一个请求封装成一个对象，从而使您可以用不同的请求对客户进行参数化。\",\"主要解决：在软件系统中，行为请求者与行为实现者通常是一种紧耦合的关系，但某些场合，比如需要对行为进行记录、撤销或重做、事务等处理时，这种无法抵御变化的紧耦合的设计就不太合适。\",\"何时使用：在某些场合，比如要对行为进行\\\"记录、撤销/重做、事务\\\"等处理，这种无法抵御变化的紧耦合是不合适的。在这种情况下，如何将\\\"行为请求者\\\"与\\\"行为实现者\\\"解耦？将一组行为抽象为对象，可以实现二者之间的松耦合。\",\"如何解决：通过调用者调用接受者执行命令，顺序：调用者→接受者→命令。\",\"关键代码：定义三个角色：1、received 真正的命令执行对象 2、Command 3、invoker 使用命令对象的入口\",\"应用实例：struts 1 中的 action 核心控制器 ActionServlet 只有一个，相当于 Invoker，而模型层的类会随着不同的应用有不同的模型类，相当于具体的 Command。\",\"优点： 1、降低了系统耦合度。 2、新的命令可以很容易添加到系统中去。\",\"缺点：使用命令模式可能会导致某些系统有过多的具体命令类。\",\"使用场景：认为是命令的地方都可以使用命令模式，比如： 1、GUI 中每一个按钮都是一条命令。 2、模拟 CMD。\",\"注意事项：系统需要支持命令的撤销(Undo)操作和恢复(Redo)操作，也可以考虑使用命令模式，见命令模式的扩展。\",\"步骤 1: 创建一个命令接口。\",\"// Order.java public interface Order { void execute(); }\",\"步骤 2: 创建一个请求类。\",\"// Stock.java public class Stock { private String name = \\\"ABC\\\"; private int quantity = 10; public void buy(){ System.out.println(\\\"Stock [ Name: \\\"+name+\\\", Quantity: \\\" + quantity +\\\" ] bought\\\"); } public void sell(){ System.out.println(\\\"Stock [ Name: \\\"+name+\\\", Quantity: \\\" + quantity +\\\" ] sold\\\"); } }\",\"步骤 3: 创建实现了 Order 接口的实体类。\",\"// BuyStock.java public class BuyStock implements Order { private Stock abcStock; public BuyStock(Stock abcStock){ this.abcStock = abcStock; } public void execute() { abcStock.buy(); } } // SellStock.java public class SellStock implements Order { private Stock abcStock; public SellStock(Stock abcStock){ this.abcStock = abcStock; } public void execute() { abcStock.sell(); } }\",\"步骤 4: 创建命令调用类。\",\"// Broker.java import java.util.ArrayList; import java.util.List; public class Broker { private List<Order> orderList = new ArrayList<Order>(); public void takeOrder(Order order){ orderList.add(order); } public void placeOrders(){ for (Order order : orderList) { order.execute(); } orderList.clear(); } }\",\"步骤 5: 使用 Broker 类来接受并执行命令。\",\"// CommandPatternDemo.java public class CommandPatternDemo { public static void main(String[] args) { Stock abcStock = new Stock(); BuyStock buyStockOrder = new BuyStock(abcStock); SellStock sellStockOrder = new SellStock(abcStock); Broker broker = new Broker(); broker.takeOrder(buyStockOrder); broker.takeOrder(sellStockOrder); broker.placeOrders(); } }\",\"步骤 6: 验证输出。\",\"Stock [ Name: ABC, Quantity: 10 ] bought Stock [ Name: ABC, Quantity: 10 ] sold\"]},\"316\":{\"h\":\"解释器模式（Interpreter Pattern）\",\"t\":[\"提供了评估语言的语法或表达式的方式，它属于行为型模式。这种模式实现了一个表达式接口，该接口解释一个特定的上下文。这种模式被用在 SQL 解析、符号处理引擎等。\",\"意图：给定一个语言，定义它的文法表示，并定义一个解释器，这个解释器使用该标识来解释语言中的句子。\",\"主要解决：对于一些固定文法构建一个解释句子的解释器。\",\"何时使用：如果一种特定类型的问题发生的频率足够高，那么可能就值得将该问题的各个实例表述为一个简单语言中的句子。这样就可以构建一个解释器，该解释器通过解释这些句子来解决该问题。\",\"如何解决：构件语法树，定义终结符与非终结符。\",\"关键代码：构件环境类，包含解释器之外的一些全局信息，一般是 HashMap。\",\"应用实例：编译器、运算表达式计算。\",\"优点： 1、可扩展性比较好，灵活。 2、增加了新的解释表达式的方式。 3、易于实现简单文法。\",\"缺点： 1、可利用场景比较少。 2、对于复杂的文法比较难维护。 3、解释器模式会引起类膨胀。 4、解释器模式采用递归调用方法。\",\"使用场景： 1、可以将一个需要解释执行的语言中的句子表示为一个抽象语法树。 2、一些重复出现的问题可以用一种简单的语言来进行表达。 3、一个简单语法需要解释的场景。\",\"注意事项：可利用场景比较少，JAVA 中如果碰到可以用 expression4J 代替。\",\"步骤 1: 创建一个表达式接口。\",\"// Expression.java public interface Expression { public boolean interpret(String context); }\",\"步骤 2: 创建实现了上述接口的实体类。\",\"// TerminalExpression.java public class TerminalExpression implements Expression { private String data; public TerminalExpression(String data){ this.data = data; } @Override public boolean interpret(String context) { if(context.contains(data)){ return true; } return false; } } // OrExpression.java public class OrExpression implements Expression { private Expression expr1 = null; private Expression expr2 = null; public OrExpression(Expression expr1, Expression expr2) { this.expr1 = expr1; this.expr2 = expr2; } @Override public boolean interpret(String context) { return expr1.interpret(context) || expr2.interpret(context); } } // AndExpression.java public class AndExpression implements Expression { private Expression expr1 = null; private Expression expr2 = null; public AndExpression(Expression expr1, Expression expr2) { this.expr1 = expr1; this.expr2 = expr2; } @Override public boolean interpret(String context) { return expr1.interpret(context) && expr2.interpret(context); } }\",\"步骤 3: InterpreterPatternDemo 使用 Expression 类来创建规则，并解析它们。\",\"// InterpreterPatternDemo.java public class InterpreterPatternDemo { //规则：Robert 和 John 是男性 public static Expression getMaleExpression(){ Expression robert = new TerminalExpression(\\\"Robert\\\"); Expression john = new TerminalExpression(\\\"John\\\"); return new OrExpression(robert, john); } //规则：Julie 是一个已婚的女性 public static Expression getMarriedWomanExpression(){ Expression julie = new TerminalExpression(\\\"Julie\\\"); Expression married = new TerminalExpression(\\\"Married\\\"); return new AndExpression(julie, married); } public static void main(String[] args) { Expression isMale = getMaleExpression(); Expression isMarriedWoman = getMarriedWomanExpression(); System.out.println(\\\"John is male? \\\" + isMale.interpret(\\\"John\\\")); System.out.println(\\\"Julie is a married women? \\\" + isMarriedWoman.interpret(\\\"Married Julie\\\")); } }\",\"步骤 4: 验证输出。\",\"John is male? true Julie is a married women? true\"]},\"317\":{\"h\":\"迭代器模式（Iterator Pattern）\",\"t\":[\"是 Java 和 .Net 编程环境中非常常用的设计模式。这种模式用于顺序访问集合对象的元素，不需要知道集合对象的底层表示。\",\"意图：提供一种方法顺序访问一个聚合对象中各个元素, 而又无须暴露该对象的内部表示。\",\"主要解决：不同的方式来遍历整个整合对象。\",\"何时使用：遍历一个聚合对象。\",\"如何解决：把在元素之间游走的责任交给迭代器，而不是聚合对象。\",\"关键代码：定义接口：hasNext, next。\",\"应用实例：JAVA 中的 iterator。\",\"优点： 1、它支持以不同的方式遍历一个聚合对象。 2、迭代器简化了聚合类。 3、在同一个聚合上可以有多个遍历。 4、在迭代器模式中，增加新的聚合类和迭代器类都很方便，无须修改原有代码。\",\"缺点：由于迭代器模式将存储数据和遍历数据的职责分离，增加新的聚合类需要对应增加新的迭代器类，类的个数成对增加，这在一定程度上增加了系统的复杂性。\",\"使用场景： 1、访问一个聚合对象的内容而无须暴露它的内部表示。 2、需要为聚合对象提供多种遍历方式。 3、为遍历不同的聚合结构提供一个统一的接口。\",\"注意事项：迭代器模式就是分离了集合对象的遍历行为，抽象出一个迭代器类来负责，这样既可以做到不暴露集合的内部结构，又可让外部代码透明地访问集合内部的数据。\",\"步骤 1: 创建接口。\",\"// Iterator.java public interface Iterator { public boolean hasNext(); public Object next(); } // Container.java public interface Container { public Iterator getIterator(); }\",\"步骤 2: 创建实现了 Container 接口的实体类。该类有实现了 Iterator 接口的内部类 NameIterator。\",\"// NameRepository.java public class NameRepository implements Container { public String names[] = {\\\"Robert\\\" , \\\"John\\\" ,\\\"Julie\\\" , \\\"Lora\\\"}; @Override public Iterator getIterator() { return new NameIterator(); } private class NameIterator implements Iterator { int index; @Override public boolean hasNext() { if(index < names.length){ return true; } return false; } @Override public Object next() { if(this.hasNext()){ return names[index++]; } return null; } } }\",\"步骤 3: 使用 NameRepository 来获取迭代器，并打印名字。\",\"// IteratorPatternDemo.java public class IteratorPatternDemo { public static void main(String[] args) { NameRepository namesRepository = new NameRepository(); for(Iterator iter = namesRepository.getIterator(); iter.hasNext();){ String name = (String)iter.next(); System.out.println(\\\"Name : \\\" + name); } } }\",\"步骤 4: 验证输出。\",\"Name : Robert Name : John Name : Julie Name : Lora\"]},\"318\":{\"h\":\"中介者模式（Mediator Pattern）\",\"t\":[\"是用来降低多个对象和类之间的通信复杂性。这种模式提供了一个中介类，该类通常处理不同类之间的通信，并支持松耦合，使代码易于维护。中介者模式属于行为型模式。\",\"意图：用一个中介对象来封装一系列的对象交互，中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。\",\"主要解决：对象与对象之间存在大量的关联关系，这样势必会导致系统的结构变得很复杂，同时若一个对象发生改变，我们也需要跟踪与之相关联的对象，同时做出相应的处理。\",\"何时使用：多个类相互耦合，形成了网状结构。\",\"如何解决：将上述网状结构分离为星型结构。\",\"关键代码：对象 Colleague 之间的通信封装到一个类中单独处理。\",\"应用实例： 1、中国加入 WTO 之前是各个国家相互贸易，结构复杂，现在是各个国家通过 WTO 来互相贸易。 2、机场调度系统。 3、MVC 框架，其中C（控制器）就是 M（模型）和 V（视图）的中介者。\",\"优点： 1、降低了类的复杂度，将一对多转化成了一对一。 2、各个类之间的解耦。 3、符合迪米特原则。\",\"缺点：中介者会庞大，变得复杂难以维护。\",\"使用场景： 1、系统中对象之间存在比较复杂的引用关系，导致它们之间的依赖关系结构混乱而且难以复用该对象。 2、想通过一个中间类来封装多个类中的行为，而又不想生成太多的子类。\",\"注意事项：不应当在职责混乱的时候使用。\",\"步骤 1: 创建中介类。\",\" // ChatRoom.java import java.util.Date;public class ChatRoom { public static void showMessage(User user, String message){ System.out.println(new Date().toString() + \\\" [\\\" + user.getName() +\\\"] : \\\" + message); } }\",\"步骤 2: 创建 user 类。\",\"// User.java public class User { private String name; public String getName() { return name; } public void setName(String name) { this.name = name; } public User(String name){ this.name = name; } public void sendMessage(String message){ ChatRoom.showMessage(this,message); } }\",\"步骤 3: 使用 User 对象来显示他们之间的通信。\",\"// MediatorPatternDemo.java public class MediatorPatternDemo { public static void main(String[] args) { User robert = new User(\\\"Robert\\\"); User john = new User(\\\"John\\\"); robert.sendMessage(\\\"Hi! John!\\\"); john.sendMessage(\\\"Hello! Robert!\\\"); } }\",\"步骤 4: 验证输出。\",\"Thu Jan 31 16:05:46 IST 2013 [Robert] : Hi! John! Thu Jan 31 16:05:46 IST 2013 [John] : Hello! Robert!\"]},\"319\":{\"h\":\"备忘录模式（Memento Pattern）\",\"t\":[\"保存一个对象的某个状态，以便在适当的时候恢复对象。备忘录模式属于行为型模式。\",\"意图：在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。\",\"主要解决：所谓备忘录模式就是在不破坏封装的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态，这样可以在以后将对象恢复到原先保存的状态。\",\"何时使用：很多时候我们总是需要记录一个对象的内部状态，这样做的目的就是为了允许用户取消不确定或者错误的操作，能够恢复到他原先的状态，使得他有\\\"后悔药\\\"可吃。\",\"如何解决：通过一个备忘录类专门存储对象状态。\",\"关键代码：客户不与备忘录类耦合，与备忘录管理类耦合。\",\"应用实例： 1、后悔药。 2、打游戏时的存档。 3、Windows 里的 ctri + z。 4、IE 中的后退。 4、数据库的事务管理。\",\"优点： 1、给用户提供了一种可以恢复状态的机制，可以使用户能够比较方便地回到某个历史的状态。 2、实现了信息的封装，使得用户不需要关心状态的保存细节。\",\"缺点：消耗资源。如果类的成员变量过多，势必会占用比较大的资源，而且每一次保存都会消耗一定的内存。\",\"使用场景： 1、需要保存/恢复数据的相关状态场景。 2、提供一个可回滚的操作。\",\"注意事项： 1、为了符合迪米特原则，还要增加一个管理备忘录的类。 2、为了节约内存，可使用原型模式+备忘录模式。\",\"步骤 1: 创建 Memento 类。\",\" // Memento.java public class Memento { private String state; public Memento(String state){ this.state = state; } public String getState(){ return state; } } 步骤 2: 创建 Originator 类。 ```java // Originator.java public class Originator { private String state; public void setState(String state){ this.state = state; } public String getState(){ return state; } public Memento saveStateToMemento(){ return new Memento(state); } public void getStateFromMemento(Memento Memento){ state = Memento.getState(); } } 步骤 3: 创建 CareTaker 类。 ```java // CareTaker.java import java.util.ArrayList; import java.util.List; public class CareTaker { private List<Memento> mementoList = new ArrayList<Memento>(); public void add(Memento state){ mementoList.add(state); } public Memento get(int index){ return mementoList.get(index); } } 步骤 4: 使用 CareTaker 和 Originator 对象。 ```java // MementoPatternDemo.java public class MementoPatternDemo { public static void main(String[] args) { Originator originator = new Originator(); CareTaker careTaker = new CareTaker(); originator.setState(\\\"State #1\\\"); originator.setState(\\\"State #2\\\"); careTaker.add(originator.saveStateToMemento()); originator.setState(\\\"State #3\\\"); careTaker.add(originator.saveStateToMemento()); originator.setState(\\\"State #4\\\"); System.out.println(\\\"Current State: \\\" + originator.getState()); originator.getStateFromMemento(careTaker.get(0)); System.out.println(\\\"First saved State: \\\" + originator.getState()); originator.getStateFromMemento(careTaker.get(1)); System.out.println(\\\"Second saved State: \\\" + originator.getState()); } }\",\"步骤 5: 验证输出。\",\"Current State: State #4 First saved State: State #2 Second saved State: State #3\"]},\"320\":{\"h\":\"当对象间存在一对多关系时，则使用观察者模式（Observer Pattern）\",\"t\":[\"比如，当一个对象被修改时，则会自动通知它的依赖对象。观察者模式属于行为型模式。\",\"意图：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。\",\"主要解决：一个对象状态改变给其他对象通知的问题，而且要考虑到易用和低耦合，保证高度的协作。\",\"何时使用：一个对象（目标对象）的状态发生改变，所有的依赖对象（观察者对象）都将得到通知，进行广播通知。\",\"如何解决：使用面向对象技术，可以将这种依赖关系弱化。\",\"关键代码：在抽象类里有一个 ArrayList 存放观察者们。\",\"应用实例： 1、拍卖的时候，拍卖师观察最高标价，然后通知给其他竞价者竞价。 2、西游记里面悟空请求菩萨降服红孩儿，菩萨洒了一地水招来一个老乌龟，这个乌龟就是观察者，他观察菩萨洒水这个动作。\",\"优点： 1、观察者和被观察者是抽象耦合的。 2、建立一套触发机制。\",\"缺点： 1、如果一个被观察者对象有很多的直接和间接的观察者的话，将所有的观察者都通知到会花费很多时间。 2、如果在观察者和观察目标之间有循环依赖的话，观察目标会触发它们之间进行循环调用，可能导致系统崩溃。 3、观察者模式没有相应的机制让观察者知道所观察的目标对象是怎么发生变化的，而仅仅只是知道观察目标发生了变化。\",\"使用场景： 1、有多个子类共有的方法，且逻辑相同。 2、重要的、复杂的方法，可以考虑作为模板方法。\",\"注意事项： 1、JAVA 中已经有了对观察者模式的支持类。 2、避免循环引用。 3、如果顺序执行，某一观察者错误会导致系统卡壳，一般采用异步方式。\",\"步骤 1: 创建 Subject 类。\",\"// Subject.java import java.util.ArrayList; import java.util.List; public class Subject { private List<Observer> observers = new ArrayList<Observer>(); private int state; public int getState() { return state; } public void setState(int state) { this.state = state; notifyAllObservers(); } public void attach(Observer observer){ observers.add(observer); } public void notifyAllObservers(){ for (Observer observer : observers) { observer.update(); } } }\",\"步骤 2: 创建 Observer 类。\",\"// Observer.java public abstract class Observer { protected Subject subject; public abstract void update(); }\",\"步骤 3: 创建实体观察者类。\",\"// BinaryObserver.java public class BinaryObserver extends Observer{ public BinaryObserver(Subject subject){ this.subject = subject; this.subject.attach(this); } @Override public void update() { System.out.println( \\\"Binary String: \\\" + Integer.toBinaryString( subject.getState() ) ); } } // OctalObserver.java public class OctalObserver extends Observer{ public OctalObserver(Subject subject){ this.subject = subject; this.subject.attach(this); } @Override public void update() { System.out.println( \\\"Octal String: \\\" + Integer.toOctalString( subject.getState() ) ); } } // HexaObserver.java public class HexaObserver extends Observer{ public HexaObserver(Subject subject){ this.subject = subject; this.subject.attach(this); } @Override public void update() { System.out.println( \\\"Hex String: \\\" + Integer.toHexString( subject.getState() ).toUpperCase() ); } }\",\"步骤 4: 使用 Subject 和实体观察者对象。\",\"// ObserverPatternDemo.java public class ObserverPatternDemo { public static void main(String[] args) { Subject subject = new Subject(); new HexaObserver(subject); new OctalObserver(subject); new BinaryObserver(subject); System.out.println(\\\"First state change: 15\\\"); subject.setState(15); System.out.println(\\\"Second state change: 10\\\"); subject.setState(10); } } 步骤 5: 验证输出。 ```txt First state change: 15 Hex String: F Octal String: 17 Binary String: 1111 Second state change: 10 Hex String: A Octal String: 12 Binary String: 1010\"]},\"321\":{\"h\":\"状态模式（State Pattern）\",\"t\":[\"类的行为是基于它的状态改变的。这种类型的设计模式属于行为型模式\",\"在状态模式中，我们创建表示各种状态的对象和一个行为随着状态对象改变而改变的 context 对象。\",\"意图：允许对象在内部状态发生改变时改变它的行为，对象看起来好像修改了它的类。\",\"主要解决：对象的行为依赖于它的状态（属性），并且可以根据它的状态改变而改变它的相关行为。\",\"何时使用：代码中包含大量与对象状态有关的条件语句。\",\"如何解决：将各种具体的状态类抽象出来。\",\"关键代码：通常命令模式的接口中只有一个方法。而状态模式的接口中有一个或者多个方法。而且，状态模式的实现类的方法，一般返回值，或者是改变实例变量的值。也就是说，状态模式一般和对象的状态有关。实现类的方法有不同的功能，覆盖接口中的方法。状态模式和命令模式一样，也可以用于消除 if...else 等条件选择语句。\",\"应用实例： 1、打篮球的时候运动员可以有正常状态、不正常状态和超常状态。 2、曾侯乙编钟中，'钟是抽象接口','钟A'等是具体状态，'曾侯乙编钟'是具体环境（Context）。\",\"优点： 1、封装了转换规则。 2、枚举可能的状态，在枚举状态之前需要确定状态种类。 3、将所有与某个状态有关的行为放到一个类中，并且可以方便地增加新的状态，只需要改变对象状态即可改变对象的行为。 4、允许状态转换逻辑与状态对象合成一体，而不是某一个巨大的条件语句块。 5、可以让多个环境对象共享一个状态对象，从而减少系统中对象的个数。\",\"缺点： 1、状态模式的使用必然会增加系统类和对象的个数。 2、状态模式的结构与实现都较为复杂，如果使用不当将导致程序结构和代码的混乱。 3、状态模式对\\\"开闭原则\\\"的支持并不太好，对于可以切换状态的状态模式，增加新的状态类需要修改那些负责状态转换的源代码，否则无法切换到新增状态，而且修改某个状态类的行为也需修改对应类的源代码。\",\"使用场景： 1、行为随状态改变而改变的场景。 2、条件、分支语句的代替者。\",\"注意事项：在行为受状态约束的时候使用状态模式，而且状态不超过 5 个。\",\"步骤 1: 创建一个接口。\",\"// State.java public interface State { public void doAction(Context context); }\",\"步骤 2: 创建实现接口的实体类。\",\"// StartState.java public class StartState implements State { public void doAction(Context context) { System.out.println(\\\"Player is in start state\\\"); context.setState(this); } public String toString(){ return \\\"Start State\\\"; } } // StopState.java public class StopState implements State { public void doAction(Context context) { System.out.println(\\\"Player is in stop state\\\"); context.setState(this); } public String toString(){ return \\\"Stop State\\\"; } } 步骤 3: 创建 Context 类。 ```java // Context.java public class Context { private State state; public Context(){ state = null; } public void setState(State state){ this.state = state; } public State getState(){ return state; } } 步骤 4: 使用 Context 来查看当状态 State 改变时的行为变化。 ```java // StatePatternDemo.java public class StatePatternDemo { public static void main(String[] args) { Context context = new Context(); StartState startState = new StartState(); startState.doAction(context); System.out.println(context.getState().toString()); StopState stopState = new StopState(); stopState.doAction(context); System.out.println(context.getState().toString()); } } 步骤 5: 验证输出。 ```txt Player is in start state Start State Player is in stop state Stop State\"]},\"322\":{\"h\":\"空对象模式（Null Object Pattern）\",\"t\":[\"一个空对象取代 NULL 对象实例的检查。Null 对象不是检查空值，而是反应一个不做任何动作的关系。这样的 Null 对象也可以在数据不可用的时候提供默认的行为。\",\"在空对象模式中，我们创建一个指定各种要执行的操作的抽象类和扩展该类的实体类，还创建一个未对该类做任何实现的空对象类，该空对象类将无缝地使用在需要检查空值的地方。\",\"步骤 1: 创建一个抽象类。\",\"// AbstractCustomer.java public abstract class AbstractCustomer { protected String name; public abstract boolean isNil(); public abstract String getName(); } 步骤 2: 创建扩展了上述类的实体类。 ```java // RealCustomer.java public class RealCustomer extends AbstractCustomer { public RealCustomer(String name) { this.name = name; } @Override public String getName() { return name; } @Override public boolean isNil() { return false; } } // NullCustomer.java public class NullCustomer extends AbstractCustomer { @Override public String getName() { return \\\"Not Available in Customer Database\\\"; } @Override public boolean isNil() { return true; } }\",\"步骤 3: 创建 CustomerFactory 类。\",\"// CustomerFactory.java public class CustomerFactory { public static final String[] names = {\\\"Rob\\\", \\\"Joe\\\", \\\"Julie\\\"}; public static AbstractCustomer getCustomer(String name){ for (int i = 0; i < names.length; i++) { if (names[i].equalsIgnoreCase(name)){ return new RealCustomer(name); } } return new NullCustomer(); } }\",\"步骤 4: 使用 CustomerFactory，基于客户传递的名字，来获取 RealCustomer 或 NullCustomer 对象。\",\"// NullPatternDemo.java public class NullPatternDemo { public static void main(String[] args) { AbstractCustomer customer1 = CustomerFactory.getCustomer(\\\"Rob\\\"); AbstractCustomer customer2 = CustomerFactory.getCustomer(\\\"Bob\\\"); AbstractCustomer customer3 = CustomerFactory.getCustomer(\\\"Julie\\\"); AbstractCustomer customer4 = CustomerFactory.getCustomer(\\\"Laura\\\"); System.out.println(\\\"Customers\\\"); System.out.println(customer1.getName()); System.out.println(customer2.getName()); System.out.println(customer3.getName()); System.out.println(customer4.getName()); } }\",\"步骤 5: 验证输出。\",\"Customers Rob Not Available in Customer Database Julie Not Available in Customer Database\"]},\"323\":{\"h\":\"策略模式（Strategy Pattern）\",\"t\":[\"一个类的行为或其算法可以在运行时更改。\",\"在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变的 context 对象。策略对象改变 context 对象的执行算法。\",\"意图：定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。\",\"主要解决：在有多种算法相似的情况下，使用 if...else 所带来的复杂和难以维护。\",\"何时使用：一个系统有许多许多类，而区分它们的只是他们直接的行为。\",\"如何解决：将这些算法封装成一个一个的类，任意地替换。\",\"关键代码：实现同一个接口。\",\"应用实例： 1、诸葛亮的锦囊妙计，每一个锦囊就是一个策略。 2、旅行的出游方式，选择骑自行车、坐汽车，每一种旅行方式都是一个策略。 3、JAVA AWT 中的 LayoutManager。\",\"优点： 1、算法可以自由切换。 2、避免使用多重条件判断。 3、扩展性良好。\",\"缺点： 1、策略类会增多。 2、所有策略类都需要对外暴露。\",\"使用场景： 1、如果在一个系统里面有许多类，它们之间的区别仅在于它们的行为，那么使用策略模式可以动态地让一个对象在许多行为中选择一种行为。 2、一个系统需要动态地在几种算法中选择一种。 3、如果一个对象有很多的行为，如果不用恰当的模式，这些行为就只好使用多重的条件选择语句来实现。\",\"注意事项：如果一个系统的策略多于四个，就需要考虑使用混合模式，解决策略类膨胀的问题。\",\"步骤 1: 创建一个接口。\",\"// Strategy.java public interface Strategy { public int doOperation(int num1, int num2); }\",\"步骤 2: 创建实现接口的实体类。\",\"// OperationAdd.java public class OperationAdd implements Strategy{ @Override public int doOperation(int num1, int num2) { return num1 + num2; } } // OperationSubstract.java public class OperationSubstract implements Strategy{ @Override public int doOperation(int num1, int num2) { return num1 - num2; } } // OperationMultiply.java public class OperationMultiply implements Strategy{ @Override public int doOperation(int num1, int num2) { return num1 * num2; } }\",\"步骤 3: 创建 Context 类。\",\"// Context.java public class Context { private Strategy strategy; public Context(Strategy strategy){ this.strategy = strategy; } public int executeStrategy(int num1, int num2){ return strategy.doOperation(num1, num2); } }\",\"步骤 4: 使用 Context 来查看当它改变策略 Strategy 时的行为变化。\",\"// StrategyPatternDemo.java public class StrategyPatternDemo { public static void main(String[] args) { Context context = new Context(new OperationAdd()); System.out.println(\\\"10 + 5 = \\\" + context.executeStrategy(10, 5)); context = new Context(new OperationSubstract()); System.out.println(\\\"10 - 5 = \\\" + context.executeStrategy(10, 5)); context = new Context(new OperationMultiply()); System.out.println(\\\"10 * 5 = \\\" + context.executeStrategy(10, 5)); } }\",\"步骤 5: 验证输出。\",\"10 + 5 = 15 10 - 5 = 5 10 * 5 = 50\"]},\"324\":{\"h\":\"模板模式（Template Pattern）\",\"t\":[\"一个抽象类公开定义了执行它的方法的方式/模板。它的子类可以按需要重写方法实现，但调用将以抽象类中定义的方式进行。这种类型的设计模式属于行为型模式。\",\"意图：定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。\",\"主要解决：一些方法通用，却在每一个子类都重新写了这一方法。\",\"何时使用：有一些通用的方法。\",\"如何解决：将这些通用算法抽象出来。\",\"关键代码：在抽象类实现，其他步骤在子类实现。\",\"应用实例： 1、在造房子的时候，地基、走线、水管都一样，只有在建筑的后期才有加壁橱加栅栏等差异。 2、西游记里面菩萨定好的 81 难，这就是一个顶层的逻辑骨架。 3、Spirng 中对 Hibernate 的支持，将一些已经定好的方法封装起来，比如开启事务、获取 Session、关闭 Session 等，程序员不重复写那些已经规范好的代码，直接丢一个实体就可以保存。\",\"优点： 1、封装不变部分，扩展可变部分。 2、提取公共代码，便于维护。 3、行为由父类控制，子类实现。\",\"缺点：每一个不同的实现都需要一个子类来实现，导致类的个数增加，使得系统更加庞大。\",\"使用场景： 1、有多个子类共有的方法，且逻辑相同。 2、重要的、复杂的方法，可以考虑作为模板方法。\",\"注意事项：为防止恶意操作，一般模板方法都加上 final 关键词。\",\"步骤 1: 创建一个抽象类，它的模板方法被设置为 final。\",\"// Game.java public abstract class Game { abstract void initialize(); abstract void startPlay(); abstract void endPlay(); //模板 public final void play(){ //初始化游戏 initialize(); //开始游戏 startPlay(); //结束游戏 endPlay(); } }\",\"步骤 2: 创建扩展了上述类的实体类。\",\"// Cricket.java public class Cricket extends Game { @Override void endPlay() { System.out.println(\\\"Cricket Game Finished!\\\"); } @Override void initialize() { System.out.println(\\\"Cricket Game Initialized! Start playing.\\\"); } @Override void startPlay() { System.out.println(\\\"Cricket Game Started. Enjoy the game!\\\"); } } // Football.java public class Football extends Game { @Override void endPlay() { System.out.println(\\\"Football Game Finished!\\\"); } @Override void initialize() { System.out.println(\\\"Football Game Initialized! Start playing.\\\"); } @Override void startPlay() { System.out.println(\\\"Football Game Started. Enjoy the game!\\\"); } }\",\"步骤 3: 使用 Game 的模板方法 play() 来演示游戏的定义方式。\",\"// TemplatePatternDemo.java public class TemplatePatternDemo { public static void main(String[] args) { Game game = new Cricket(); game.play(); System.out.println(); game = new Football(); game.play(); } }\",\"步骤 4: 验证输出。\",\"Cricket Game Initialized! Start playing. Cricket Game Started. Enjoy the game! Cricket Game Finished! Football Game Initialized! Start playing. Football Game Started. Enjoy the game! Football Game Finished!\"]},\"325\":{\"h\":\"访问者模式（Visitor Pattern）\",\"t\":[\"我们使用了一个访问者类，它改变了元素类的执行算法。通过这种方式，元素的执行算法可以随着访问者改变而改变。这种类型的设计模式属于行为型模式。根据模式，元素对象已接受访问者对象，这样访问者对象就可以处理元素对象上的操作。\",\"意图：主要将数据结构与数据操作分离。\",\"主要解决：稳定的数据结构和易变的操作耦合问题。\",\"何时使用：需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免让这些操作\\\"污染\\\"这些对象的类，使用访问者模式将这些封装到类中。\",\"如何解决：在被访问的类里面加一个对外提供接待访问者的接口。\",\"关键代码：在数据基础类里面有一个方法接受访问者，将自身引用传入访问者。\",\"应用实例：您在朋友家做客，您是访问者，朋友接受您的访问，您通过朋友的描述，然后对朋友的描述做出一个判断，这就是访问者模式。\",\"优点： 1、符合单一职责原则。 2、优秀的扩展性。 3、灵活性。\",\"缺点： 1、具体元素对访问者公布细节，违反了迪米特原则。 2、具体元素变更比较困难。 3、违反了依赖倒置原则，依赖了具体类，没有依赖抽象。\",\"使用场景： 1、对象结构中对象对应的类很少改变，但经常需要在此对象结构上定义新的操作。 2、需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免让这些操作\\\"污染\\\"这些对象的类，也不希望在增加新操作时修改这些类。\",\"注意事项：访问者可以对功能进行统一，可以做报表、UI、拦截器与过滤器。\",\"步骤 1: 定义一个表示元素的接口。\",\"// ComputerPart.java public interface ComputerPart { public void accept(ComputerPartVisitor computerPartVisitor); }\",\"步骤 2: 创建扩展了上述类的实体类。\",\"// Keyboard.java public class Keyboard implements ComputerPart { @Override public void accept(ComputerPartVisitor computerPartVisitor) { computerPartVisitor.visit(this); } } // Monitor.java public class Monitor implements ComputerPart { @Override public void accept(ComputerPartVisitor computerPartVisitor) { computerPartVisitor.visit(this); } } // Mouse.java public class Mouse implements ComputerPart { @Override public void accept(ComputerPartVisitor computerPartVisitor) { computerPartVisitor.visit(this); } } // Computer.java public class Computer implements ComputerPart { ComputerPart[] parts; public Computer(){ parts = new ComputerPart[] {new Mouse(), new Keyboard(), new Monitor()};j } @Override public void accept(ComputerPartVisitor computerPartVisitor) { for (int i = 0; i < parts.length; i++) { parts[i].accept(computerPartVisitor); } computerPartVisitor.visit(this); } }\",\"步骤 3: 定义一个表示访问者的接口。\",\" // ComputerPartVisitor.java public interface ComputerPartVisitor { public void visit(Computer computer); public void visit(Mouse mouse); public void visit(Keyboard keyboard); public void visit(Monitor monitor); }\",\"步骤 4: 创建实现了上述类的实体访问者。\",\"// ComputerPartDisplayVisitor.java public class ComputerPartDisplayVisitor implements ComputerPartVisitor { @Override public void visit(Computer computer) { System.out.println(\\\"Displaying Computer.\\\"); } @Override public void visit(Mouse mouse) { System.out.println(\\\"Displaying Mouse.\\\"); } @Override public void visit(Keyboard keyboard) { System.out.println(\\\"Displaying Keyboard.\\\"); } @Override public void visit(Monitor monitor) { System.out.println(\\\"Displaying Monitor.\\\"); } }\",\"步骤 5: 使用 ComputerPartDisplayVisitor 来显示 Computer 的组成部分。\",\"// VisitorPatternDemo.java public class VisitorPatternDemo { public static void main(String[] args) { ComputerPart computer = new Computer(); computer.accept(new ComputerPartDisplayVisitor()); } }\",\"步骤 6: 验证输出。\",\"Displaying Mouse. Displaying Keyboard. Displaying Monitor. Displaying Computer.\"]},\"326\":{\"h\":\"MVC 模式\",\"t\":[\"代表 Model-View-Controller（模型-视图-控制器） 模式。这种模式用于应用程序的分层开发。\",\"Model（模型） - 模型代表一个存取数据的对象或 JAVA POJO。它也可以带有逻辑，在数据变化时更新控制器。\",\"View（视图） - 视图代表模型包含的数据的可视化。\",\"Controller（控制器） - 控制器作用于模型和视图上。它控制数据流向模型对象，并在数据变化时更新视图。它使视图与模型分离开。\",\"步骤 1: 创建模型。\",\"// Student.java public class Student { private String rollNo; private String name; public String getRollNo() { return rollNo; } public void setRollNo(String rollNo) { this.rollNo = rollNo; } public String getName() { return name; } public void setName(String name) { this.name = name; } } 步骤 2: 创建视图。 ```java // StudentView.java public class StudentView { public void printStudentDetails(String studentName, String studentRollNo){ System.out.println(\\\"Student: \\\"); System.out.println(\\\"Name: \\\" + studentName); System.out.println(\\\"Roll No: \\\" + studentRollNo); } }\",\"步骤 3: 创建控制器。\",\"// StudentController.java public class StudentController { private Student model; private StudentView view; public StudentController(Student model, StudentView view){ this.model = model; this.view = view; } public void setStudentName(String name){ model.setName(name); } public String getStudentName(){ return model.getName(); } public void setStudentRollNo(String rollNo){ model.setRollNo(rollNo); } public String getStudentRollNo(){ return model.getRollNo(); } public void updateView(){ view.printStudentDetails(model.getName(), model.getRollNo()); } }\",\"步骤 4: 使用 StudentController 方法来演示 MVC 设计模式的用法。\",\"// MVCPatternDemo.java public class MVCPatternDemo { public static void main(String[] args) { //从数据可获取学生记录 Student model = retriveStudentFromDatabase(); //创建一个视图：把学生详细信息输出到控制台 StudentView view = new StudentView(); StudentController controller = new StudentController(model, view); controller.updateView(); //更新模型数据 controller.setStudentName(\\\"John\\\"); controller.updateView(); } private static Student retriveStudentFromDatabase(){ Student student = new Student(); student.setName(\\\"Robert\\\"); student.setRollNo(\\\"10\\\"); return student; } }\",\"步骤 5: 验证输出。\",\"Student: Name: Robert Roll No: 10 Student: Name: John Roll No: 10\"]},\"327\":{\"h\":\"业务代表模式（Business Delegate Pattern）\",\"t\":[\"用于对表示层和业务层解耦。它基本上是用来减少通信或对表示层代码中的业务层代码的远程查询功能。在业务层中我们有以下实体。\",\"客户端（Client） - 表示层代码可以是 JSP、servlet 或 UI java 代码。\",\"业务代表（Business Delegate） - 一个为客户端实体提供的入口类，它提供了对业务服务方法的访问。\",\"查询服务（LookUp Service） - 查找服务对象负责获取相关的业务实现，并提供业务对象对业务代表对象的访问。\",\"业务服务（Business Service） - 业务服务接口。实现了该业务服务的实体类，提供了实际的业务实现逻辑。\",\"步骤 1: 创建 BusinessService 接口。\",\"// BusinessService.java public interface BusinessService { public void doProcessing(); }\",\"步骤 2: 创建实体服务类。\",\"// EJBService.java public class EJBService implements BusinessService { @Override public void doProcessing() { System.out.println(\\\"Processing task by invoking EJB Service\\\"); } }\",\"// JMSService.java public class JMSService implements BusinessService { @Override public void doProcessing() { System.out.println(\\\"Processing task by invoking JMS Service\\\"); } }\",\"步骤 3: 创建业务查询服务。\",\"// BusinessLookUp.java public class BusinessLookUp { public BusinessService getBusinessService(String serviceType){ if(serviceType.equalsIgnoreCase(\\\"EJB\\\")){ return new EJBService(); }else { return new JMSService(); } } }\",\"步骤 4: 创建业务代表。\",\"// BusinessDelegate.java public class BusinessDelegate { private BusinessLookUp lookupService = new BusinessLookUp(); private BusinessService businessService; private String serviceType; public void setServiceType(String serviceType){ this.serviceType = serviceType; } public void doTask(){ businessService = lookupService.getBusinessService(serviceType); businessService.doProcessing(); } }\",\"步骤 5: 创建客户端。\",\"// Client.java public class Client { BusinessDelegate businessService; public Client(BusinessDelegate businessService){ this.businessService = businessService; } public void doTask(){ businessService.doTask(); } }\",\"步骤 6: 使用 BusinessDelegate 和 Client 类来演示业务代表模式。\",\"// BusinessDelegatePatternDemo.java public class BusinessDelegatePatternDemo { public static void main(String[] args) { BusinessDelegate businessDelegate = new BusinessDelegate(); businessDelegate.setServiceType(\\\"EJB\\\"); Client client = new Client(businessDelegate); client.doTask(); businessDelegate.setServiceType(\\\"JMS\\\"); client.doTask(); } }\",\"步骤 7: 验证输出。\",\"Processing task by invoking EJB Service Processing task by invoking JMS Service\"]},\"328\":{\"h\":\"组合实体模式（Composite Entity Pattern）\",\"t\":[\"用在 EJB 持久化机制中。一个组合实体是一个 EJB 实体 bean，代表了对象的图解。当更新一个组合实体时，内部依赖对象 beans 会自动更新，因为它们是由 EJB 实体 bean 管理的。以下是组合实体 bean 的参与者。\",\"组合实体（Composite Entity） - 它是主要的实体 bean。它可以是粗粒的，或者可以包含一个粗粒度对象，用于持续生命周期。\",\"粗粒度对象（Coarse-Grained Object） - 该对象包含依赖对象。它有自己的生命周期，也能管理依赖对象的生命周期。\",\"依赖对象（Dependent Object） - 依赖对象是一个持续生命周期依赖于粗粒度对象的对象。\",\"策略（Strategies） - 策略表示如何实现组合实体。\",\"步骤 1: 创建依赖对象。\",\"// DependentObject1.java public class DependentObject1 { private String data; public void setData(String data){ this.data = data; } public String getData(){ return data; } } // DependentObject2.java public class DependentObject2 { private String data; public void setData(String data){ this.data = data; } public String getData(){ return data; } }\",\"步骤 2: 创建粗粒度对象。\",\"// CoarseGrainedObject.java public class CoarseGrainedObject { DependentObject1 do1 = new DependentObject1(); DependentObject2 do2 = new DependentObject2(); public void setData(String data1, String data2){ do1.setData(data1); do2.setData(data2); } public String[] getData(){ return new String[] {do1.getData(),do2.getData()}; } }\",\"步骤 3: 创建组合实体。\",\"// CompositeEntity.java public class CompositeEntity { private CoarseGrainedObject cgo = new CoarseGrainedObject(); public void setData(String data1, String data2){ cgo.setData(data1, data2); } public String[] getData(){ return cgo.getData(); } }\",\"步骤 4: 创建使用组合实体的客户端类。\",\"// Client.java public class Client { private CompositeEntity compositeEntity = new CompositeEntity(); public void printData(){ for (int i = 0; i < compositeEntity.getData().length; i++) { System.out.println(\\\"Data: \\\" + compositeEntity.getData()[i]); } } public void setData(String data1, String data2){ compositeEntity.setData(data1, data2); } }\",\"步骤 5: 使用 Client 来演示组合实体设计模式的用法。\",\"// CompositeEntityPatternDemo.java public class CompositeEntityPatternDemo { public static void main(String[] args) { Client client = new Client(); client.setData(\\\"Test\\\", \\\"Data\\\"); client.printData(); client.setData(\\\"Second Test\\\", \\\"Data1\\\"); client.printData(); } }\",\"步骤 6: 验证输出。\",\"Data: Test Data: Data Data: Second Test Data: Data1\"]},\"329\":{\"h\":\"数据访问对象模式（Data Access Object Pattern）或 DAO 模式\",\"t\":[\"用于把低级的数据访问 API 或操作从高级的业务服务中分离出来。以下是数据访问对象模式的参与者。\",\"数据访问对象接口（Data Access Object Interface） - 该接口定义了在一个模型对象上要执行的标准操作。\",\"数据访问对象实体类（Data Access Object concrete class） - 该类实现了上述的接口。该类负责从数据源获取数据，数据源可以是数据库，也可以是 xml，或者是其他的存储机制。\",\"模型对象/数值对象（Model Object/Value Object） - 该对象是简单的 POJO，包含了 get/set 方法来存储通过使用 DAO 类检索到的数据。\",\"步骤 1: 创建数值对象。\",\"// Student.java public class Student { private String name; private int rollNo; Student(String name, int rollNo){ this.name = name; this.rollNo = rollNo; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getRollNo() { return rollNo; } public void setRollNo(int rollNo) { this.rollNo = rollNo; } }\",\"步骤 2: 创建数据访问对象接口。\",\"// StudentDao.java import java.util.List; public interface StudentDao { public List<Student> getAllStudents(); public Student getStudent(int rollNo); public void updateStudent(Student student); public void deleteStudent(Student student); } 步骤 3: 创建实现了上述接口的实体类。 ```java // StudentDaoImpl.java import java.util.ArrayList; import java.util.List; public class StudentDaoImpl implements StudentDao { //列表是当作一个数据库 List<Student> students; public StudentDaoImpl(){ students = new ArrayList<Student>(); Student student1 = new Student(\\\"Robert\\\",0); Student student2 = new Student(\\\"John\\\",1); students.add(student1); students.add(student2); } @Override public void deleteStudent(Student student) { students.remove(student.getRollNo()); System.out.println(\\\"Student: Roll No \\\" + student.getRollNo() +\\\", deleted from database\\\"); } //从数据库中检索学生名单 @Override public List<Student> getAllStudents() { return students; } @Override public Student getStudent(int rollNo) { return students.get(rollNo); } @Override public void updateStudent(Student student) { students.get(student.getRollNo()).setName(student.getName()); System.out.println(\\\"Student: Roll No \\\" + student.getRollNo() +\\\", updated in the database\\\"); } }\",\"步骤 4: 使用 StudentDao 来演示数据访问对象模式的用法。\",\" // CompositeEntityPatternDemo.java public class DaoPatternDemo { public static void main(String[] args) { StudentDao studentDao = new StudentDaoImpl(); //输出所有的学生 for (Student student : studentDao.getAllStudents()) { System.out.println(\\\"Student: [RollNo : \\\" +student.getRollNo()+\\\", Name : \\\"+student.getName()+\\\" ]\\\"); } //更新学生 Student student =studentDao.getAllStudents().get(0); student.setName(\\\"Michael\\\"); studentDao.updateStudent(student); //获取学生 studentDao.getStudent(0); System.out.println(\\\"Student: [RollNo : \\\" +student.getRollNo()+\\\", Name : \\\"+student.getName()+\\\" ]\\\"); } }\",\"步骤 5: 验证输出。\",\"Student: [RollNo : 0, Name : Robert ] Student: [RollNo : 1, Name : John ] Student: Roll No 0, updated in the database Student: [RollNo : 0, Name : Michael ]\"]},\"330\":{\"h\":\"前端控制器模式（Front Controller Pattern）\",\"t\":[\"用来提供一个集中的请求处理机制，所有的请求都将由一个单一的处理程序处理。该处理程序可以做认证/授权/记录日志，或者跟踪请求，然后把请求传给相应的处理程序。以下是这种设计模式的实体。\",\"前端控制器（Front Controller） - 处理应用程序所有类型请求的单个处理程序，应用程序可以是基于 web 的应用程序，也可以是基于桌面的应用程序。\",\"调度器（Dispatcher） - 前端控制器可能使用一个调度器对象来调度请求到相应的具体处理程序。\",\"视图（View） - 视图是为请求而创建的对象。\",\"步骤 1: 创建视图。\",\"// HomeView.java public class HomeView { public void show(){ System.out.println(\\\"Displaying Home Page\\\"); } } // StudentView.java public class StudentView { public void show(){ System.out.println(\\\"Displaying Student Page\\\"); } }\",\"步骤 2: 创建调度器 Dispatcher。\",\"// Dispatcher.java public class Dispatcher { private StudentView studentView; private HomeView homeView; public Dispatcher(){ studentView = new StudentView(); homeView = new HomeView(); } public void dispatch(String request){ if(request.equalsIgnoreCase(\\\"STUDENT\\\")){ studentView.show(); }else{ homeView.show(); } } }\",\"步骤 3: 创建前端控制器 FrontController。\",\"// Context.java public class FrontController { private Dispatcher dispatcher; public FrontController(){ dispatcher = new Dispatcher(); } private boolean isAuthenticUser(){ System.out.println(\\\"User is authenticated successfully.\\\"); return true; } private void trackRequest(String request){ System.out.println(\\\"Page requested: \\\" + request); } public void dispatchRequest(String request){ //记录每一个请求 trackRequest(request); //对用户进行身份验证 if(isAuthenticUser()){ dispatcher.dispatch(request); } } }\",\"步骤 4: 使用 FrontController 来演示前端控制器设计模式。\",\"// FrontControllerPatternDemo.java public class FrontControllerPatternDemo { public static void main(String[] args) { FrontController frontController = new FrontController(); frontController.dispatchRequest(\\\"HOME\\\"); frontController.dispatchRequest(\\\"STUDENT\\\"); } }\",\"步骤 5: 验证输出。\",\"Page requested: HOME User is authenticated successfully. Displaying Home Page Page requested: STUDENT User is authenticated successfully. Displaying Student Page\"]},\"331\":{\"h\":\"拦截过滤器模式（Intercepting Filter Pattern）\",\"t\":[\"用于对应用程序的请求或响应做一些预处理/后处理。定义过滤器，并在把请求传给实际目标应用程序之前应用在请求上。过滤器可以做认证/授权/记录日志，或者跟踪请求，然后把请求传给相应的处理程序。以下是这种设计模式的实体。\",\"过滤器（Filter） - 过滤器在请求处理程序执行请求之前或之后，执行某些任务。\",\"过滤器链（Filter Chain） - 过滤器链带有多个过滤器，并在 Target 上按照定义的顺序执行这些过滤器。\",\"Target - Target 对象是请求处理程序。\",\"过滤管理器（Filter Manager） - 过滤管理器管理过滤器和过滤器链。\",\"客户端（Client） - Client 是向 Target 对象发送请求的对象。\",\"步骤 1: 创建过滤器接口 Filter。\",\"// Filter.java public interface Filter { public void execute(String request); }\",\"步骤 2: 创建实体过滤器。\",\"// AuthenticationFilter.java public class AuthenticationFilter implements Filter { public void execute(String request){ System.out.println(\\\"Authenticating request: \\\" + request); } } // DebugFilter.java public class DebugFilter implements Filter { public void execute(String request){ System.out.println(\\\"request log: \\\" + request); } }\",\"步骤 3: 创建 Target。\",\"// Target.java public class Target { public void execute(String request){ System.out.println(\\\"Executing request: \\\" + request); } }\",\"步骤 4: 创建过滤器链。\",\"// FilterChain.java import java.util.ArrayList; import java.util.List; public class FilterChain { private List<Filter> filters = new ArrayList<Filter>(); private Target target; public void addFilter(Filter filter){ filters.add(filter); } public void execute(String request){ for (Filter filter : filters) { filter.execute(request); } target.execute(request); } public void setTarget(Target target){ this.target = target; } }\",\"步骤 5: 创建过滤管理器。\",\"// FilterManager.java public class FilterManager { FilterChain filterChain; public FilterManager(Target target){ filterChain = new FilterChain(); filterChain.setTarget(target); } public void setFilter(Filter filter){ filterChain.addFilter(filter); } public void filterRequest(String request){ filterChain.execute(request); } }\",\"步骤 6: 创建客户端 Client。\",\"// Client.java public class Client { FilterManager filterManager; public void setFilterManager(FilterManager filterManager){ this.filterManager = filterManager; } public void sendRequest(String request){ filterManager.filterRequest(request); } }\",\"步骤 7: 使用 Client 来演示拦截过滤器设计模式。\",\"// FrontControllerPatternDemo.java public class InterceptingFilterDemo { public static void main(String[] args) { FilterManager filterManager = new FilterManager(new Target()); filterManager.setFilter(new AuthenticationFilter()); filterManager.setFilter(new DebugFilter()); Client client = new Client(); client.setFilterManager(filterManager); client.sendRequest(\\\"HOME\\\"); } }\",\"步骤 8: 验证输出。\",\"Authenticating request: HOME request log: HOME Executing request: HOME\"]},\"332\":{\"h\":\"服务定位器模式（Service Locator Pattern）\",\"t\":[\"用在我们想使用 JNDI 查询定位各种服务的时候。考虑到为某个服务查找 JNDI 的代价很高，服务定位器模式充分利用了缓存技术。在首次请求某个服务时，服务定位器在 JNDI 中查找服务，并缓存该服务对象。当再次请求相同的服务时，服务定位器会在它的缓存中查找，这样可以在很大程度上提高应用程序的性能。以下是这种设计模式的实体。\",\"服务（Service） - 实际处理请求的服务。对这种服务的引用可以在 JNDI 服务器中查找到。\",\"Context / 初始的 Context - JNDI Context 带有对要查找的服务的引用。\",\"服务定位器（Service Locator） - 服务定位器是通过 JNDI 查找和缓存服务来获取服务的单点接触。\",\"缓存（Cache） - 缓存存储服务的引用，以便复用它们。\",\"客户端（Client） - Client 是通过 ServiceLocator 调用服务的对象。\",\"步骤 1: 创建服务接口 Service。\",\"// Service.java public interface Service { public String getName(); public void execute(); }\",\"步骤 2: 创建实体服务。\",\"// Service1.java public class Service1 implements Service { public void execute(){ System.out.println(\\\"Executing Service1\\\"); } @Override public String getName() { return \\\"Service1\\\"; } } // Service2.java public class Service2 implements Service { public void execute(){ System.out.println(\\\"Executing Service2\\\"); } @Override public String getName() { return \\\"Service2\\\"; } }\",\"步骤 3: 为 JNDI 查询创建 InitialContext。\",\"// InitialContext.java public class InitialContext { public Object lookup(String jndiName){ if(jndiName.equalsIgnoreCase(\\\"SERVICE1\\\")){ System.out.println(\\\"Looking up and creating a new Service1 object\\\"); return new Service1(); }else if (jndiName.equalsIgnoreCase(\\\"SERVICE2\\\")){ System.out.println(\\\"Looking up and creating a new Service2 object\\\"); return new Service2(); } return null; } }\",\"步骤 4: 创建缓存 Cache。\",\"// Cache.java import java.util.ArrayList; import java.util.List; public class Cache { private List<Service> services; public Cache(){ services = new ArrayList<Service>(); } public Service getService(String serviceName){ for (Service service : services) { if(service.getName().equalsIgnoreCase(serviceName)){ System.out.println(\\\"Returning cached \\\"+serviceName+\\\" object\\\"); return service; } } return null; } public void addService(Service newService){ boolean exists = false; for (Service service : services) { if(service.getName().equalsIgnoreCase(newService.getName())){ exists = true; } } if(!exists){ services.add(newService); } } } 步骤 5: 创建服务定位器。 ```java // ServiceLocator.java public class ServiceLocator { private static Cache cache; static { cache = new Cache(); } public static Service getService(String jndiName){ Service service = cache.getService(jndiName); if(service != null){ return service; } InitialContext context = new InitialContext(); Service service1 = (Service)context.lookup(jndiName); cache.addService(service1); return service1; } } 步骤 6: 使用 ServiceLocator 来演示服务定位器设计模式。 ```java // ServiceLocatorPatternDemo.java public class ServiceLocatorPatternDemo { public static void main(String[] args) { Service service = ServiceLocator.getService(\\\"Service1\\\"); service.execute(); service = ServiceLocator.getService(\\\"Service2\\\"); service.execute(); service = ServiceLocator.getService(\\\"Service1\\\"); service.execute(); service = ServiceLocator.getService(\\\"Service2\\\"); service.execute(); } } 步骤 7: 验证输出。 ```txt Looking up and creating a new Service1 object Executing Service1 Looking up and creating a new Service2 object Executing Service2 Returning cached Service1 object Executing Service1 Returning cached Service2 object Executing Service2\"]},\"333\":{\"h\":\"传输对象模式（Transfer Object Pattern）\",\"t\":[\"用于从客户端向服务器一次性传递带有多个属性的数据。传输对象也被称为数值对象。传输对象是一个具有 getter/setter 方法的简单的 POJO 类，它是可序列化的，所以它可以通过网络传输。它没有任何的行为。服务器端的业务类通常从数据库读取数据，然后填充 POJO，并把它发送到客户端或按值传递它。对于客户端，传输对象是只读的。客户端可以创建自己的传输对象，并把它传递给服务器，以便一次性更新数据库中的数值。以下是这种设计模式的实体。\",\"业务对象（Business Object） - 为传输对象填充数据的业务服务。\",\"传输对象（Transfer Object） - 简单的 POJO，只有设置/获取属性的方法。\",\"客户端（Client） - 客户端可以发送请求或者发送传输对象到业务对象。\",\"步骤 1: 创建传输对象。\",\"// StudentVO.java public class StudentVO { private String name; private int rollNo; StudentVO(String name, int rollNo){ this.name = name; this.rollNo = rollNo; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getRollNo() { return rollNo; } public void setRollNo(int rollNo) { this.rollNo = rollNo; } }\",\"步骤 2: 创建业务对象。\",\"// StudentBO.java import java.util.ArrayList; import java.util.List; public class StudentBO { //列表是当作一个数据库 List<StudentVO> students; public StudentBO(){ students = new ArrayList<StudentVO>(); StudentVO student1 = new StudentVO(\\\"Robert\\\",0); StudentVO student2 = new StudentVO(\\\"John\\\",1); students.add(student1); students.add(student2); } public void deleteStudent(StudentVO student) { students.remove(student.getRollNo()); System.out.println(\\\"Student: Roll No \\\" + student.getRollNo() +\\\", deleted from database\\\"); } //从数据库中检索学生名单 public List<StudentVO> getAllStudents() { return students; } public StudentVO getStudent(int rollNo) { return students.get(rollNo); } public void updateStudent(StudentVO student) { students.get(student.getRollNo()).setName(student.getName()); System.out.println(\\\"Student: Roll No \\\" + student.getRollNo() +\\\", updated in the database\\\"); } }\",\"步骤 3: 使用 StudentBO 来演示传输对象设计模式。\",\"// TransferObjectPatternDemo.java public class TransferObjectPatternDemo { public static void main(String[] args) { StudentBO studentBusinessObject = new StudentBO(); //输出所有的学生 for (StudentVO student : studentBusinessObject.getAllStudents()) { System.out.println(\\\"Student: [RollNo : \\\" +student.getRollNo()+\\\", Name : \\\"+student.getName()+\\\" ]\\\"); } //更新学生 StudentVO student =studentBusinessObject.getAllStudents().get(0); student.setName(\\\"Michael\\\"); studentBusinessObject.updateStudent(student); //获取学生 studentBusinessObject.getStudent(0); System.out.println(\\\"Student: [RollNo : \\\" +student.getRollNo()+\\\", Name : \\\"+student.getName()+\\\" ]\\\"); } }\",\"步骤 4: 验证输出。\",\"Student: [RollNo : 0, Name : Robert ] Student: [RollNo : 1, Name : John ] Student: Roll No 0, updated in the database Student: [RollNo : 0, Name : Michael ]\"]},\"334\":{\"h\":\"设计模式相关的网站\",\"t\":[\"Wiki Page for Design Patterns - 以一种非常通用的方式检查设计模式。\",\"Java Programming/Design Patterns - 一篇关于设计模式的好文章。\",\"The JavaTM Tutorials - 该 Java 教程是为那些想用 Java 编程语言创建应用程序的编程人员提供的实用指南。\",\"JavaTM 2 SDK, Standard Edition - JavaTM 2 SDK, Standard Edition 的官网。\",\"Java DesignPatterns - 关于设计模式的短文。\",\"Java 设计模式有用的书籍\",\"Java Design Patterns\",\"Head First Design Patterns\",\"Java Design Pattern Essentials\",\"Design Patterns: Elements of Reusable Object-Oriented Software\",\"Design Patterns in Java(TM)\",\"Design Patterns Java Workbook\"]},\"335\":{\"h\":\"编程原则\"},\"336\":{\"h\":\"一、开闭原则（Open Close Principle）\",\"t\":[\"软件实体应当对扩展开放，对修改关闭\",\"当应用的需求改变时，在不修改软件实体的源代码或者二进制代码的前提下，可以扩展模块的功能，使其满足新的需求\",\"在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果；简言之，是为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类\",\"项目中划分出的模块\",\"类与接口\",\"方法\",\"\\\"抽象约束、封装变化\\\"：即通过接口或者抽象类为软件实体定义一个相对稳定的抽象层，而将相同的可变因素封装在相同的具体实现类中。\"]},\"337\":{\"h\":\"二、里氏替换原则（Liskov Substitution Principle）\",\"t\":[\"子类可以扩展父类的功能，但不能改变父类原有的功能\",\"修正方法：程序违背了里氏替换原则，取消原来的继承关系，重新设计它们之间的关系 里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。\"]},\"338\":{\"h\":\"三、依赖倒置原则（Dependence Inversion Principle）\",\"t\":[\"这个原则是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体。 高层模块不应该依赖低层模块，两者都应该依赖其抽象 抽象不应该依赖细节，细节应该依赖抽象 面向接口编程\",\"每个类尽量提供接口或抽象类，或者两者都具备。\",\"变量的声明类型尽量是接口或者是抽象类。\",\"任何类都不应该从具体类派生。\",\"使用继承时尽量遵循里氏替换原则。\"]},\"339\":{\"h\":\"四、单一职责原则\",\"t\":[\"一个类应该有且仅有一个引起它变化的原因，否则类应该被拆分\",\"使用多个隔离的接口，比使用单个接口要好。它还有另外一个意思是：降低类之间的耦合度，它强调降低依赖，降低耦合\"]},\"340\":{\"h\":\"五、接口隔离原则（Interface Segregation Principle）\",\"t\":[\"尽量将臃肿庞大的接口拆分成更小的和更具体的接口\"]},\"341\":{\"h\":\"六、迪米特法则（Demeter Principle）\",\"t\":[\"只与你的直接朋友交谈，不跟 \\\"陌生人\\\" 说话\",\"最少知道原则；一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\"]},\"342\":{\"h\":\"七、合成复用原则（Composite Reuse Principle）\",\"t\":[\"在软件复用时，要尽量先使用组合或者聚合等关联关系来实现，其次才考虑使用继承关系来实现\"]},\"343\":{\"h\":\"相关书籍\"},\"344\":{\"c\":[\"面向对象\"]},\"345\":{\"h\":\"数组、矩阵和广义表\"},\"346\":{\"h\":\"数组\",\"t\":[\"扩展的线性表，数据元素仍然是一个表\"]},\"347\":{\"h\":\"矩阵\"},\"348\":{\"h\":\"1. 特殊矩阵\"},\"349\":{\"h\":\"2. 稀疏矩阵\"},\"350\":{\"h\":\"广义表\"},\"351\":{\"h\":\"线性结构\",\"t\":[\"最多只有一个出度和一个入度\"]},\"352\":{\"h\":\"线性表\",\"t\":[\"最基本最常用的线性结构\",\"是零个或多个元素的有穷序列，通常可以表示为k0, k1, ... kn-1(n>=1)\",\"线性表中的元素叫表目或者记录\",\"i 称为表目 ki 的 索引 或 下标\",\"n是表的长度\",\"长度为零的线性表叫空表\",\"特点\",\"灵活，长度可增长、缩短\"]},\"353\":{\"h\":\"1. 顺序存储结构(顺序表)\",\"t\":[\"一组地址 连续的存储单元 依次存储线性表中的数据元素，逻辑上相邻的两个元素在物理位置上也相邻\",\"优点：可以随机存取表中的元素\",\"缺点：插入和删除需要移动元素\"]},\"354\":{\"h\":\"2. 链式存储结构(链表)\",\"t\":[\"通过指针链接起来的结点（地址不要求连续）存储数据元素，有一个数据域和一个指针域，指针域中的信息称为指针(或链)\",\"结点空间只在需要的时候才申请，无须事先分配\",\"单链表\",\"双向链表： 每个结点包含两个指针\",\"循环链表： 表尾指针纸箱链表第一个结点\",\"静态链表： 借助数组来描述线性表的链式存储结构\"]},\"355\":{\"h\":\"栈\",\"t\":[\"LIFO last in first out\",\"插入和删除操作都限制在表的同一端进行\",\"不含数据的栈叫空栈\",\"应用：深搜\",\"可以用数组来实现堆栈，也可以用链表（单向链尾不能找到前一个）来实现堆栈\",\"// 抽象数据结构 // 通常由一个一维数组和一个记录栈顶元素位置的变量组成\"]},\"356\":{\"h\":\"1. 中缀表达式转换为后缀表达式\",\"t\":[\"从头到尾读取中缀表达式的每个对象\",\"假如是运算符：直接输出\",\"假如是左括号：压入堆栈\",\"假如是右括号，将栈顶的运算符弹出并输出，直到遇到左括号（出栈，不输出）\",\"运算符： \",\"若优先级大于栈顶运算符时，则把它压栈；\",\"若优先级小于等于栈顶运算符时，将栈顶运算符弹出并输出；\",\"再比较新的栈顶运算符，直到该运算符大于栈顶运算符优先级为止，然后将该运算符压栈\",\"若各对象处理完毕，则把堆栈中存留的运算符一并输出\"]},\"357\":{\"h\":\"队列\",\"t\":[\"FIFP first in first out\",\"插入操作在表的一端，删除操作在另一端；队头（Front），队尾（Rear）\",\"应用：宽搜\",\"也是一种受限制的线性表\"]},\"358\":{\"h\":\"1. 顺序队列\"},\"359\":{\"h\":\"2. 循环队列\"},\"360\":{\"h\":\"串\",\"t\":[\"由字符构成的有限序列\"]},\"361\":{\"h\":\"\"},\"362\":{\"h\":\"数据结构\"},\"363\":{\"h\":\"定义\",\"t\":[\"基本的数据组织和数据处理方法\",\"各种数据的逻辑结构表示\",\"各种数据的存储结构表示\",\"各种数据结构的运算定义\",\"设计实现运算的算法(以数据结构为中心的算法设计--也就是基本算法设计方法，再高一层就是通用算法设计)\",\"分析算法的效率(时间复杂度、空间复杂度分析，设计出求解问题的高效算法)\",\"如何组织数据跟数据的规模以及存储的地方是有关系，就像图书与书架的关系！！\",\"新书如何插入？如何找到某一本书？\",\"解决问题方法的效率，跟数据的组织方式是直接相关的，跟空间的利用效率有关, 跟算法的巧妙程度有关系\",\"定义(差不多的)：数据对象在计算机中的组织方式 ， 必定与一系列加在其上的操作相关联， 完成这些操作的方法就是算法，算法与数据结构始终是一起的。\",\"根据数据结构的逻辑特性 -> 映射到计算机中的存储结构 -> 运算实现算法设计（数据运算高效实现）\",\"数组结构中讨论的元素关系主要是指相邻关系或邻接关系\",\"同一逻辑结构可以对应多种存储结构\",\"同样的运算，在不同的存储结构中，其实现过程也是不同的\"]},\"364\":{\"h\":\"逻辑结构\",\"t\":[\"集合\",\"线性结构 \",\"简单： 线性表、栈、队列、散列表\",\"复杂： 广义表、多维数组、文件...\",\"树形结构\",\"图形结构\"]},\"365\":{\"h\":\"存储结构\",\"t\":[\"顺序存储结构\",\"链式存储结构\",\"索引存储结构\",\"哈希(散列)存储结构\"]},\"366\":{\"h\":\"抽象数据类型\",\"t\":[\"（ADT）是描述数据结构的方法， 这个是重点，面向对象时，就是将一类对象抽象成一种数据类型的过程，抽象好了可大大提高开发效率\",\"指的是从求解问题的数学模型中抽象出来的数据逻辑结构和运算，不考虑计算机的具体实现\",\"= 逻辑结构 + 抽象运算\",\"实质上就是对一个求解问题的形式化描述，程序员可以在理解基础上实现它\",\"通常把基于存储结构的运算实现的步骤或过程称为算法\",\"数据类型： 是一个值的集合和定义在此集合上的一组操作的总称，是已经实现了的数据结构，包括数据对象集，数据集合相关联的操作集，只描述数据对象集、相关操作集是什么，不涉及其他\",\"抽象： 指描述数据结构的方法不依赖于具体实现，与存放数据的机器无关；与数据存储的物理结构无关；与实现操作的算法和编程语言都无关\",\"有定义数据结构就是ADT的物理实现\",\" eg: 类型名称： 矩阵（Matrix） 数据对象集： 操作集： Matrix create(int M, int N): int getMaxRow(Matrix A): int getMaxCol(Matrix A): // 这里的ElementType 根据矩阵元素的值的类型而定，并不明确指定其类型 ElementType getEntry(Matrix A, int i; int j): Matrix add(Matrix A, Matrix B): ...\"]},\"367\":{\"h\":\"树\"},\"368\":{\"h\":\"二叉树\"},\"369\":{\"h\":\"最优二叉树（哈夫曼树）\",\"t\":[\"又叫霍夫曼树，是一类带权路径长度最短的树 路径：一个节点到另一个节点的通路 节点的路径长度：路径的分支数目 权：节点的值 节点的带权路径长度：节点到根节点的路径长度乘以该节点的权值 树的带权路径长度：树的所有叶子节点的带权路径长度之和 求法：将两个最小值（左小又大，霍夫曼编码左0右1）放在树的两侧，相加得到根节点，根节点再与剩下的权值放一起取最小的两个同样操作，生成树\"]},\"370\":{\"h\":\"森林\"},\"371\":{\"h\":\"数据流图（DFD）\"},\"372\":{\"h\":\"面向结构\",\"t\":[\"软件的结构化开发方法中包括结构化程序设计\",\"使用三种基本控制结构构造程序，任何程序都可由顺序、选择、循环三种基本控制结构构造\",\"采用自顶向下、逐步求精的设计方法，各个模块通过顺序，选择、循环的控制结构进行连接，并且只有一个入口、一个出口\"]},\"373\":{\"h\":\"服务端\"},\"374\":{\"h\":\"集成部署\"},\"375\":{\"h\":\"CI/CD\",\"t\":[\"持续集成(Continuous Integration)\",\"持续交付(Continuous Delivery)\",\"持续部署(Continuous Deployment)\"]},\"376\":{\"h\":\"oss\"},\"377\":{\"h\":\"关于OSS政策\",\"t\":[\"新创建的桶已经不支持使用默认域名在浏览器预览文件\"]},\"378\":{\"h\":\"阿里云OSS(对象存储)服务\"},\"379\":{\"h\":\"1. ossutil进行上传部署资源\",\"t\":[\"下载ossutil\",\"配置ossutil\"]},\"380\":{\"h\":\"腾讯云COS服务\",\"t\":[\"同理也有工具可以用\"]},\"381\":{\"h\":\"客户端开发\"},\"382\":{\"h\":\"运行维护\"},\"383\":{\"h\":\"监控\"},\"384\":{\"h\":\"前端开发\"},\"385\":{\"h\":\"前端学习方法\",\"t\":[\"构建知识体系 : 逻辑性和完备性\",\"追本溯源\"]},\"386\":{\"h\":\"前端目前现状与问题\"},\"387\":{\"h\":\"一、基础知识\",\"t\":[\"欠缺会限制你解决问题的思路\"]},\"388\":{\"h\":\"二、技术短板\",\"t\":[\"容易陷入重复性劳动\"]},\"389\":{\"h\":\"三、技术发展\",\"t\":[\"导致学习压力很大\"]},\"390\":{\"h\":\"前端目标\",\"t\":[\"界面美观流畅\",\"代码简洁易懂\",\"性能卓著\"]},\"391\":{\"h\":\"微前端\",\"t\":[\"single-spa\",\"qiankun\",\"Cloud Alfa\",\"webpack5 Module Federation\"]},\"392\":{\"h\":\"前端性能监控Sentry\"},\"393\":{\"h\":\"灰度部署\"},\"394\":{\"h\":\"自动化测试sonic\"},\"395\":{\"h\":\"低代码(lowcode engine)\"},\"396\":{\"h\":\"跨平台解决方案\",\"t\":[\"web容器技术：JS bridge\",\"泛web容器技术\",\"自绘引擎技术：小程序\"]},\"397\":{\"h\":\"面向对象开发方法\",\"t\":[\"第二次软件危机\"]},\"398\":{\"h\":\"结构化开发方法\",\"t\":[\"第一次软件危机\"]},\"399\":{\"h\":\"WepApp 的开发\"},\"400\":{\"h\":\"项目管理\",\"t\":[\"在一定的时间和预设范围内有效地利用人力、资源、技术和工具，使软件系统或软件产品按原定计划和质量要求如期完成\"]},\"401\":{\"h\":\"人员\",\"t\":[\"项目经理\",\"高级管理（领域专家）\",\"开发人员\",\"客户\",\"最终用户\"]},\"402\":{\"h\":\"产品\",\"t\":[\"控制复杂性，问题分解\"]},\"403\":{\"h\":\"过程\"},\"404\":{\"h\":\"项目\"},\"405\":{\"h\":\"需求业务\",\"t\":[\"根据计算机软件的分类\",\"系统软件（🙅🏻‍♂️）\",\"应用软件（maybe）\",\"工程/科学软件（🙅🏻‍♂️）\",\"嵌入式（🙅🏻‍♂️）\",\"产品线（🙅🏻‍♂️）\",\"WebApp(🙆🏻‍♂️)\",\"人工智能软件\",\"开放计算\",\"网络资源（？）\",\"开源软件\"]},\"406\":{\"h\":\"需求收集\"},\"407\":{\"h\":\"需求分析\"},\"408\":{\"h\":\"包管理工具\"},\"409\":{\"h\":\"一、npm\"},\"410\":{\"h\":\"Node Package Manager\"},\"411\":{\"h\":\"常用命令\",\"t\":[\"# 最新版本 npm view [package] version # 所有版本 npm view [package] versions # 查看全局安装的包 npm list -g --depth=0\"]},\"412\":{\"h\":\"npx\",\"t\":[\"npx 是一个由 Node.js 官方提供的用于快速执行 npm 包中的可执行文件的工具\"]},\"413\":{\"h\":\"\",\"t\":[\"Performant NPM 高性能npm\",\"安装包时，pnpm将它保存在机器上的一个全局存储中，然后从它创建一个硬链接而不是复制\",\"对于模块的每个版本，磁盘上只保存一个副本\",\"pnpm install <pkg>\"]},\"414\":{\"h\":\"三、Yarn\"},\"415\":{\"c\":[\"tools\"]},\"416\":{\"c\":[\"npm,pnpm,yarn\"]},\"417\":{\"h\":\"Excel\"},\"418\":{\"h\":\"利用 VBA 分割 Excel大文件 (多行按固定行数分成多个文件)\",\"t\":[\"Sub copybat() Dim i, j, k, m, r As Integer Dim n, total_data As Long Dim path As String Dim title_area, data_column, data_areas As Range Set title_area = Application.InputBox(prompt:=\\\"请用鼠标选择表头及表标题所在区域\\\", Title:=\\\"选择\\\", Type:=8) '选取表头区域 Set data_column = Application.InputBox(prompt:=\\\"请鼠标选择需要拆分数据的开始行区域\\\", Title:=\\\"选择\\\", Type:=8) '选取拆分起始处 m = data_column.Row '获取分割开始行所在区域行号 r = data_column.Column '获取分割开始行所在区域列号 j = data_column.Columns.Count '获取分割开始行区域列数 i = Application.InputBox(prompt:=\\\"请输入每次分割数据条目数\\\", Title:=\\\"选择\\\") '获取需要分割的数据总条数。这里，可以用两种办法获取到数据区域的尾部行号 '第一种，使用传统的：End(xlDown).Row，优点是速度快，缺点是有空白行时会出错 '第二种，使用查找方式find，优点是基本不会出错，缺点是条数较多时候可能会慢一点 'total_data = Cells(data_column(1, 1)).End(xlDown).Row - m + 1 total_data = Cells.Find(\\\"*\\\", LookIn:=xlFormulas, SearchDirection:=xlPrevious).Row - m + 1 If MsgBox(\\\"本次分割文件数据总数为:\\\" & total_data & \\\"条，将会被分割成\\\" & WorksheetFunction.RoundUp(total_data / i, 0) & \\\"个文件，\\\" _ & \\\"点击“确定”开始分割，点击“取消”返回\\\", vbOKCancel, \\\"确认\\\") = vbOK Then Filename = Application.InputBox(prompt:=\\\"请输入分割后的文件主名，默认为“分割文件”\\\", Title:=\\\"选择\\\", Default:=\\\"分割文件\\\") With Application.FileDialog(msoFileDialogFolderPicker) '获取分割后的文件存储路径 If .Show = False Then Exit Sub path = .SelectedItems(1) & \\\"\\\\\\\" '加入\\\"\\\\\\\",否则，文件会被存储到选定路径的上一层 End With Application.ScreenUpdating = False k = 0 '第几次分割输出，用于标识分割文件次数 For n = m To total_data Step i '从开始分割的行往下计数 Set data_areas = Range(Cells(n, r), Cells(n + i - 1, j)) '设置每次循环体内的分割数据主体 Application.Union(title_area, data_areas).Select '把表头区域以及本次循环体内的数据区域进行合并 Selection.Copy Workbooks.Add Selection.PasteSpecial Paste:=xlPasteAllUsingSourceTheme, Operation:=xlNone _ , SkipBlanks:=False, Transpose:=False '特殊粘贴：包含源格式的粘贴，以便保持所有格式一致 k = k + 1 ActiveWorkbook.SaveAs Filename:=path & Filename & \\\"_\\\" & k & \\\".xlsx\\\", FileFormat:= _ xlOpenXMLWorkbook, CreateBackup:=False '按照既有的文件名、路径、循环次数合并起来存储文件 ActiveWindow.Close Next n MsgBox \\\"文件分割完毕！\\\", vbDefaultButton1, \\\"提示\\\" End If Application.ScreenUpdating = True End Sub\"]},\"419\":{\"h\":\"git\"},\"420\":{\"h\":\"基本概念\",\"t\":[\"Workspace（工作区）：新添加的；和修改的；未add操作的\",\"Stage（暂存区）：add操作过后，会进入暂存区\",\"Repository(本地仓库)：commit操作后，会进入本地仓库\",\"Remote(远程仓库)：push操作后，会提交到远程仓库\"]},\"421\":{\"h\":\"基本操作\",\"t\":[\"# 克隆 git clone [repo] # 默认主分支 git clone -b [branch-name] [repo] # 克隆特定分支 # 查看远程仓库信息 git remote show origin\",\"git remote rm origin # 删除设置好的远程仓库 git checkout -b 分支名 # 创建并切换到新分支 git clone -b [branch || tag] [git地址] # clone tag\",\"# 查看配置 git config -l git config -list # 设置全局账号密码 git config --global user.name ddd git config --global user.email llll@163.com git config --global user.password lllll\",\"# 假如不想将密码全局保存在global config中，可以用这种方法 git config --global credential.helper store git push 代码 #它会记住第一次输入的密码\",\"# 本地修改了一堆文件(并没有使用git add到暂存区)，想放弃修改 git checkout -- filename git checkout .\"]},\"422\":{\"h\":\"submodule 操作\",\"t\":[\"# 更换submodule, 将之前的remove掉，再重新添加新的 git rm -r --cached [aaa] git submodule add [b.git]\"]},\"423\":{\"h\":\"merge\",\"t\":[\"git checkout master # 你需要merge到的那个分支 git merge --no-ff dev # 你merge的分支（fastforward会丢掉分支信息，所以合并的时候强制关掉这个可以保留合并信息） # 解决冲突（编辑）暂存后正常提交\"]},\"424\":{\"h\":\"因为包太大clone失败问题( RPC fail; early EOF; )\",\"t\":[\"# 法一 git config --global http.postBuffer 1048576000 # 法二 git config --global core.compression -1 # 法三：不用https方式，用ssh方式\"]},\"425\":{\"h\":\"一次性推到多个仓库问题\",\"t\":[\"# 查看远程仓库的情况， git remote -v # origin git@github.com:xxx/xxx-ai.git (fetch) # origin git@github.com:xxx/xxx-ai.git (push) # 使用如下命令添加远程仓库(预先创建好一个空库) git remote set-url --add origin git@192.168.31.111:xxx/xxx-ai.git # 可以看到 origin 远程仓库有两个 push 地址。 # origin git@github.com:xxx/xxx-ai.git (fetch) # origin git@github.com:xxx/xxx-ai.git (push) # origin git@192.168.31.111:xxx/xxx-ai.git (push)\"]},\"426\":{\"h\":\"\"},\"427\":{\"c\":[\"tools\"]},\"428\":{\"c\":[\"git\"]},\"429\":{\"h\":\"GitLab\"},\"430\":{\"h\":\"介绍\",\"t\":[\"是一个代码仓库，一般使用CE版本，企业用EE版本\",\"也可以用于项目的快速集成与部署\"]},\"431\":{\"h\":\"\",\"t\":[\"配置仓库\",\"curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash\",\"假如不配置仓库，可自行下载之后再安装\",\"# 下载安装包 wget --no-check-certificate https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-15.11.10-ce.0.el7.x86_64.rpm # yum安装升级到13.12.15 yum -y install gitlab-ce-15.11.10-ce.0.el7.x86_64.rpm\",\"目前最新版本应该是 17.2\",\"更新升级不能直接跨大版本号，先将当前版本的小版本号到最高，才可升级到下一个大版本\",\"按照版本升级路线一个版本一个版本依次install即可（install时会自动备份）\",\"yum install gitlab-ce-15.11.10-ce.0.el7\",\"具体的包名可以在链接网站中进行查询， 其中el/7( el/7指的是GitLab的版本和安装包适用于Red Hat Enterprise Linux (RHEL) 7.x和CentOS 7.x)\",\"为了更安全，可以手动先备份\",\"gitlab-ctl stop # 停止服务 gitlab-rake gitlab:backup:create #备份 /var/opt/gitlab/backups/ 目录下会生成备份文件 sudo gitlab-rake gitlab:backup:restore BACKUP=133344444_2024_08_05_12.11 # 假如要还原，备份版本号是备份文件名称中的那一串数字\"]},\"432\":{\"h\":\"配置\"},\"433\":{\"h\":\"配置主机端口\",\"t\":[\"vim /etc/gitlab/gitlab.rb # 修改external_url gitlab-ctl reconfigure gitlab-ctl restart # 初始密码 cat /etc/gitlab/initial_root_password\"]},\"434\":{\"h\":\"GitLab-ci\",\"t\":[\"#.gitlab-ci.yml\",\"配合gitlab-runner, 用shell的方式\"]},\"435\":{\"h\":\"vscode\"},\"436\":{\"h\":\"关于eslint和prettier\",\"t\":[\"在最佳实践中前端项目总是会同时使用这两个插件，但好多用户不知道怎么用\",\"在项目中用命令行能够正常使用eslint，但文件中没有提示\",\"版本太新2.4.4导致，使用2.4.2的及以前的插件版本即可\"]},\"437\":{\"h\":\"关于换行格式LF和CRLF\",\"t\":[\"在开发过程中，‌推荐使用LF格式。‌\",\"LF（‌Line Feed）‌和CRLF（‌Carriage Return Line Feed，‌即\\\"\\\\n\\\"和\\\"\\\\r\\\\n\\\"）‌都是用于表示文本文件中的行结束符，‌但它们在不同的操作系统中有不同的应用。‌LF是Unix和Linux系统中使用的行结束符，‌而CRLF则在Windows系统中更为常见。‌在代码仓库中，‌由于大多数服务器运行的是Linux系统，‌因此推荐使用LF作为行结束符。‌这样做的好处在于可以保持跨平台的一致性，‌避免因不同的行结束符导致的兼容性问题。‌\",\"当在Windows环境下使用Git进行版本控制时，‌可以通过设置core.autocrlf选项来实现LF和CRLF之间的自动转换。‌例如，‌可以通过设置git config core.autocrlf true来在提交时自动将CRLF转换为LF，‌并在签出时代码时自动将LF转换为CRLF，‌从而确保在Windows环境下编辑和查看代码时不会出现问题。‌这种设置有助于保持代码的一致性和可读性，‌同时适应不同的操作系统环境。‌\"]},\"438\":{\"h\":\"关系数据库系统\"},\"439\":{\"h\":\"关系代数\"},\"440\":{\"h\":\"SQL\"},\"441\":{\"h\":\"SQL\",\"t\":[\"SELECT * FROM users offset 10 limit 10;\"]},\"442\":{\"h\":\"Linux\"},\"443\":{\"h\":\"介绍\"},\"444\":{\"h\":\"1. Distributions（发行版）\",\"t\":[\"每个distribution除了架构的严谨度与选择的套件内容外，其实差异不太大\",\"Ubuntu\",\"CentOS\"]},\"445\":{\"h\":\"Linux操作(基本命令)\",\"t\":[\"ls # -a / -al 显示包括隐藏文件 ll # 显示文件列表详细信息 mkdir # 目录名 建立目录 touch # 新建文件 uname # 显示版本信息 dir # 显示当前目录文件 pwd # 查询当前所在的目录位置 cd # cd ..回到上一层目录，注意cd 与..之间有空格。cd /返回到根目录。 cat # 文件名 查看文件内容 cat >abc.txt # 往abc.txt文件中写上内容。 more # 文件名 以一页一页的方式显示一个文本文件。 cp # 复制文件 mv # 移动文件 rm 文件名 # 删除文件，rm -a 目录名删除目录及子目录 rm -rf rmdir # 删除子目录，目录内没有文档。 chmod # 设定档案或目录的存取权限 grep # 在档案中查找字符串 diff # 档案文件比较 find # 档案搜寻 date # 现在的日期、时间 who # 查询目前和你使用同一台机器的人以及Login时间地点 w # 查询目前上机者的详细资料 whoami # 查看自己的帐号名称 groups # 查看某人的Group passwd # 更改密码 history # 查看自己下过的命令 ps # 显示进程状态 ps aux (命令将显示所有进程的详细信息，包括进程ID、父进程ID、CPU使用情况) kill # 停止某进程 gcc # 黑客通常用它来编译C语言写的文件 su # 权限转换为指定使用者 telnet IP # telnet连接对方主机（同win2K），当出现bash$时就说明连接成功。 ftp # ftp连接上某服务器（同win2K） netstat -nap # 查看端口号 passwd root # 修改root密码 reboot service firewalld status df -h #查看容量\"]},\"446\":{\"h\":\"关于yum\"},\"447\":{\"h\":\"更换镜像源\",\"t\":[\"有时候yum在makecache时一直在尝试其他镜像，可考虑更换\",\"在/etc/yum.repos.d/下的连不上的仓库.repo直接删掉rm掉\",\"# 1. 备份 mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup # 2. 更换为阿里云 wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo yum install\"]},\"448\":{\"h\":\"）\",\"t\":[\"宝塔是一个运维工具，没必要深入去了解学习，知道基本怎么用就OK\"]},\"449\":{\"h\":\"1. 安装\",\"t\":[\"通过xshell等工具，进入主机空间（以阿里云，主机空间最好干净一些些，以免发生莫名其妙的情况）\",\"yum install -y wget && wget -O install.sh http://download.bt.cn/install/install.sh && sh install.sh\",\"等待安装完成即可；安装完最后可以看到log中有登录账号和密码等；\"]},\"450\":{\"h\":\"2. 上传代码\",\"t\":[\"进入宝塔登录界面（一般是 域名:8888）进行登录；\",\"【文件】 - 【上传代码包】-【解压】；\"]},\"451\":{\"h\":\"3. 安装环境，创建网站\",\"t\":[\"【软件管理】 - 安装相关的环境（注意版本）；\",\"【数据库】- 【root密码】；\",\"【网站】-【添加站点】-【指定好根目录和环境版本】；\"]},\"452\":{\"h\":\"4. 进入网站域名\",\"t\":[\"【一般为install文件夹】- 【设置项目的数据库，数据之类的】- 【完成】；\",\"完成之后即可访问对应的页面；\"]},\"453\":{\"h\":\"仓库\",\"t\":[\"# 清除cache yum clean all rm -rf /var/cache/yum # 重新生成cache yum makecache yum repolist\"]},\"454\":{\"h\":\"Linux上传下载工具\"},\"455\":{\"h\":\"1. FileZilla\"},\"456\":{\"h\":\"2. lrzsz\",\"t\":[\"yum insall lrzsz # rz 上传 rz # sz 下载 sz [file]\"]},\"457\":{\"h\":\"3. sftp\",\"t\":[\"通过 sftp 协议进行连接\",\"# 上传 put # 下载 get\"]},\"458\":{\"h\":\"Linux 下载解压文件过程\",\"t\":[\"# 下载 wget [url] curl [url] # 解压 tar xf [name].xz cd ./[name] # 修改环境变量 profile, 先备份 cp /etc/profile /etc/profile.bak vim /etc/profile # 添加 export PATH=$PATH:*/bin # 使之立即生效 source /etc/profile # 单单使用 export PATH=$PATH:*/bin 是 临时添加环境变量 # 解压zip文件 # 下载unzip unzip [file]\"]},\"459\":{\"h\":\"\",\"t\":[\"vi /etc/yum.repos.d/mysql-community.repo gpgcheck=0\"]},\"460\":{\"h\":\"\"},\"461\":{\"h\":\"虚拟机vmware\"},\"462\":{\"h\":\"1. 有时候放久了会自动黑屏\",\"t\":[\"把鼠标聚焦后，动一动键盘就会好\"]},\"463\":{\"h\":\"2. 无法上下移动查看信息，可以输出到一个文件中查看\",\"t\":[\"# 例如 yum list >> /list.log\"]},\"464\":{\"h\":\"MacOS\"},\"465\":{\"h\":\"安装HomeBrew\",\"t\":[\"打开终端\",\"/bin/zsh -c \\\"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\\\"\",\"按照步骤来，下载command line for xcode的时候可能会卡住，安心等待即可\",\"安装完毕后brew -v\"]},\"466\":{\"h\":\"Brew安装nvm\",\"t\":[\"brew install nvm\",\"进入 vim ~/.zshrc\",\"按照提示配置环境变量\",\"export NVM_DIR=\\\"$HOME/.nvm\\\" [ -s \\\"/opt/homebrew/opt/nvm/nvm.sh\\\" ] && \\\\. \\\"/opt/homebrew/opt/nvm/nvm.sh\\\" # This loads nvm [ -s \\\"/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm\\\" ] && \\\\. \\\"/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm\\\" # This loads nvm bash_completion export NVM_NODEJS_ORG_MIRROR=http://npmmirror.com/mirrors/node # 配置国内镜像 export NVM_IOJS_ORG_MIRROR=http://npmmirror.com/mirrors/iojs` # 配置国内镜像\",\"source ~/.zshrc\"]},\"467\":{\"h\":\"Brew安装switchhosts\",\"t\":[\"brew install switchhosts --cask\"]},\"468\":{\"h\":\"卸载软件\",\"t\":[\"从Finder访达 进入，点击左侧列表application，将其拖入废纸篓中清空即可\",\"对于大软件，可以从application中对应的应用子文件夹中找到卸载文件进行卸载即可\"]},\"469\":{\"h\":\"常见微机操作系统\"},\"470\":{\"h\":\"Windows\"},\"471\":{\"h\":\"Linux\"},\"472\":{\"h\":\"MacOS\"},\"473\":{\"h\":\"iOS\"},\"474\":{\"h\":\"Android\"},\"475\":{\"h\":\"Github Hosts 更新地址\",\"t\":[\"https://gitlab.com/ineo6/hosts/-/raw/master/hosts\",\"https://hosts.gitcdn.top/hosts.txt\",\"https://raw.githubusercontent.com/JohyC/Hosts/main/hosts.txt\"]},\"476\":{\"h\":\"Windows\"},\"477\":{\"h\":\"Command命令\",\"t\":[\"# 查看系统信息 systeminfo # 查看文件目录 dir dir HelloWorld.* # 创建目录 mkdir dirname # 没有参数表示 删除空文件夹 /s 删除文件夹及所有 /q 静默删除 rmdir /s /q dirname rd /s /q dirname # 删除文件 del filepath cd [路径] d: # cmd cd d: # powershell copy xcopy /I /E /Y [原路径] [目标路径]\"]},\"478\":{\"h\":\"批处理\",\"t\":[\".bat格式结尾\",\"@echo off :: 两个冒号是注释 :: 变量 set a=%time% set b=%date% echo %a% echo %b% :: 遍历 /r 是深度循环遍历 for /r .\\\\test\\\\ %%f in (*.js) do ( echo File %%f ) E: :: 多个 start cmd /k 启动多个窗口不退出 cd E:/b start cmd /k \\\"echo 3 && echo 4\\\" cd E:/c start cmd /k \\\"echo 5 && echo 6\\\" :: 执行完之后不退出，按任意键退出 pause :: 执行完后一直不退出，等待输入命令 cmd /k\"]},\"479\":{\"h\":\"给文件夹设置权限\",\"t\":[\"右键 -> 属性 -> 安全 -> 高级 -> 取消继承 -> 【调整对应权限】\"]},\"480\":{\"h\":\"删除文件失败问题\",\"t\":[\"删除一个文件时，弹出错误信息，说文件已在资源管理器中打开，或者文件被某一进程占用！\",\"方法：\",\"万能的重启，重启电脑后，看是否能够删除\",\"打开任务管理器，看是否有相关进程，然后结束掉\",\"找不到进程时，可以通过 任务管理器 > 性能 > 打开资源监视器 > CPU > 关联的句柄里面进行搜索删不掉的文件的文件名，然后结束掉进程\",\"假如是explorer占用，而无法结束，结束explorer黑屏时，则需要打开注册表编辑器regedit.exe\",\"搜索相关文件的名称，然后在注册表中将相关信息删除掉，最后重启电脑，再将文件即可删除\"]},\"481\":{\"h\":\"系统禁止运行脚本\",\"t\":[\"系统上禁止运行脚本的问题通常是由于‌Windows的‌PowerShell执行策略设置为Restricted导致的。\",\"以管理员身份打开PowerShell\",\"get-executionpolicy # 查看当前的执行策略 Resctricted Bypass RemoteSigned set-ExecutionPolicy RemoteSigned # 更改执行策略 get-executionpolicy # 验证是否更改成功\"]},\"482\":{\"h\":\"Vim\"},\"483\":{\"h\":\"\",\"t\":[\"工具是拿来用的，不要让它成为一个负担！\",\"可以利用XShell或是vscode进行练习\",\"vim是vi的加强版（升级版），是一个编辑器，不仅兼容vi的所有指令，而且还有一些新的特性在里面\"]},\"484\":{\"h\":\"Four Steps\",\"t\":[\"Survive\",\"Feel Comfortable\",\"Better, Stronger, Faster\",\"SuperPower\"]},\"485\":{\"h\":\"Linux中打开文件\",\"t\":[\"vi [filename] vim [filename]\"]},\"486\":{\"h\":\"模式切换\",\"t\":[\"正常模式\",\"一般用于浏览文件，也包括一些复制、粘贴、删除等操作。启动vim后默认位于正常模式。不论位于什么模式下，Esc键按两下都会进入正常模式\",\"输入模式\",\"正常模式下 i,I,a,A等，会进入插入模式\",\"命令模式\",\"正常模式下，按下:键，会进入命令模式。可执行一些输入并执行一些vim或插件提供的指令，就像shell一样\",\"可视模式\",\"正常模式下按下v V ctrl+v可以进入可视模式，选择文本\"]},\"487\":{\"h\":\"各种命令操作\",\"t\":[\"正常模式下\",\"dd 删除当前行，并把删除的行存到剪贴板里，有复制的功能\",\"y 复制选中的内容\",\"yy 复制一行\",\"p 粘贴剪贴板的内容\",\"0 光标移动到行头\",\"$ 光标移动到本行行尾\",\"^ 到该行第一个非空字符处 (Shift+6)\",\"g_ 到该行最后一个非空字符处\",\"/pattern 查找对应的文字, 按Enter键结束, 上下选择按n、N\",\"u 撤销到上一步\",\"Ctrl+r 重新操作上一步，redo\",\"a 在光标末尾追加插入\",\"A 在行尾追加插入\",\"gg 回到页头\",\"G 到文件结束 (Shift+g)\",\"h 左移\",\"j 下移\",\"k 上移\",\"l 右移\",\"H Move to top of screen\",\"M Move to middle of screen\",\"L Move to bottom of screen\",\"% Move to associate {} () []\",\"w 下一个单词\",\"W Move to next blank delimited word\",\"b 移到单词最左边\",\"B Move to the beginning of blank delimited word\",\"x 删除光标下面的字符\",\"o 在当前行下面插入新的一行\",\"O 在当前行之前插入新的一行\",\"cw 替换当前光标到单词末尾\",\"Ctrl + f 下一页\",\"Ctrl + b 上一页\",\"zz 让光标所在的行居屏幕中央\",\"zt 让光标所在的行居屏幕最上一行\",\"zb 让光标所在的行居屏幕最下一行\",\"w/b/e 单词移动\",\"W/B/E 单词移动（更快）\",\". 重复执行上一条命令\",\"f/F:查询 f+（想查询的单词）\",\"v+i+大括号/中括号/单引号/双引号 选中括号、引号里的内容。\",\"v+a+大括号/中括号/单引号/双引号 选中括号、引号里的内容(包含括号)。\",\"( Move a sentence back\",\") Move a sentence forward\",\"{ Move a paragraph back\",\"} Move a paragraph forward\",\"全选操作： ggvG\",\"全部复制： ggyG\",\"全部删除： dG\",\"repeat Yourself: 2dd、3p、100idesu [Esc]、.、3.\",\"NG 这里的N是指行数，跳到第几行\",\"% 跳到括号那里\",\"* 跳到下一个相同word处\",\"0y$ 复制整行,这里 y的功能可类比到dvgUgu\",\"多行操作: ctrl+v jjj shift+i\",\"输入模式下\",\"跟普通的输入文字是一样的\",\"命令模式下\",\":n 跳到第几页\",\":wq:xZZ 保存并退出\",\":q! 强制退出，不保存\",\":w 保存\",\":e 打开文件\",\":saveas 另存为\",\"替换全局所有 :%s/aaa/bbb/g\",\"替换第一行 :s/aaa/bbb/, :s/aaa/bbb/g\",\"可视模式下\",\"ctrl+s 让 vim 处于不可输入的状态， 这个时候Ctrl + q可以退出\"]},\"488\":{\"h\":\"Appendix\",\"t\":[\"vim学习视频\"]},\"489\":{\"c\":[\"server\"]},\"490\":{\"c\":[\"linux, ide\"]},\"491\":{\"h\":\"设备管理\"},\"492\":{\"h\":\"概述\"},\"493\":{\"h\":\"I/O软件\"},\"494\":{\"h\":\"磁盘调度\"},\"495\":{\"h\":\"文件管理\"},\"496\":{\"h\":\"文件与文件系统\"},\"497\":{\"h\":\"文件的结构与组织\"},\"498\":{\"h\":\"文件目录\"},\"499\":{\"h\":\"存取方法和存储空间的管理\"},\"500\":{\"h\":\"进程管理\",\"t\":[\"也称处理机管理\",\"系统进行资源分配的基本单位\"]},\"501\":{\"h\":\"进程组成\",\"t\":[\"进程控制块PCB（唯一标志）\",\"程序: 进程要做什么\",\"数据：存放进程执行时所需数据\"]},\"502\":{\"h\":\"三态图\",\"t\":[\"三态图之间的转换：运行需要CPU，就绪等待CPU，阻塞没有CPU也没有其他必要数据\"]},\"503\":{\"h\":\"前趋图\",\"t\":[\"用来表示哪些任务可以并行执行，哪些任务之间有顺序关系\",\"确定任务键的并行、任务间的先后顺序; 下面是两个前趋图：一个串行，一个并行后串行\"]},\"504\":{\"h\":\"进程资源图\",\"t\":[\"表示进程和资源之间的分配和请求关系\",\"P - 进程， R - 资源\",\"当一个进程资源图中所有的进程都是阻塞节点（所请求的资源已经全部分配完毕）时，陷入死锁状态\"]},\"505\":{\"h\":\"\",\"t\":[\"临界资源：各进程间需要以互斥方式对其进行访问的资源， 如生产者与消费者共用一个仓库时，生产者存东西（进程1），消费者取东西（进程2），生产者存东西的时候消费者不能取东西，那么仓库就是临界资源\",\"临界区：本质是一段代码（存、取操作的那一段操作）\",\"互斥: 如上诉所说的仓库（临界资源）同一时间内只能由一个任务单独使用\",\"同步：多个任务并发执行，速度上有差异，如自行车与汽车\",\"互斥信号量：初值为1\",\"同步信号量：初值一般为共享资源的数量\",\"P操作： 申请资源， 资源个数减一 S = S - 1 ；若S >= 0, P操作的进程继续进行\",\"V操作： 释放资源， 资源个数加一 S = S + 1\",\"前趋图中每个箭头代表一个信号量，前者释放V，后者申请P\"]},\"506\":{\"h\":\"进程调度\",\"t\":[\"当有更高优先级的进程到来时如何分配CPU，分为可剥夺（强制分配）和不可剥夺（需等待）\"]},\"507\":{\"h\":\"死锁\"},\"508\":{\"h\":\"线程\"},\"509\":{\"h\":\"五大功能\"},\"510\":{\"h\":\"进程管理\"},\"511\":{\"h\":\"存储管理\"},\"512\":{\"h\":\"设备管理\"},\"513\":{\"h\":\"文件管理\"},\"514\":{\"h\":\"作业管理\"},\"515\":{\"h\":\"存储管理\"},\"516\":{\"h\":\"基本概念\"},\"517\":{\"h\":\"管理方案\"},\"518\":{\"h\":\"分区存储管理\"},\"519\":{\"h\":\"分页存储管理\"},\"520\":{\"h\":\"分段存储管理\"},\"521\":{\"h\":\"段页式存储管理\"},\"522\":{\"h\":\"虚拟存储管理\"},\"523\":{\"h\":\"练习实战\"},\"524\":{\"h\":\"Bar feature\"},\"525\":{\"h\":\"Introduction\",\"t\":[\"We support bar feature, ...\"]},\"526\":{\"h\":\"Details\",\"t\":[\"baz\",\"...\"]},\"527\":{\"h\":\"Baz\",\"t\":[\"Feature details here.\"]},\"528\":{\"h\":\"Foo feature\"},\"529\":{\"h\":\"Introduction\",\"t\":[\"We support foo feature, ...\"]},\"530\":{\"h\":\"Details\",\"t\":[\"ray\",\"...\"]},\"531\":{\"h\":\"Ray\",\"t\":[\"Feature details here.\"]},\"532\":{\"h\":\"语言处理程序\"},\"533\":{\"h\":\"汇编\"},\"534\":{\"h\":\"编译\"},\"535\":{\"h\":\"解释\"},\"536\":{\"h\":\"高级语言\"},\"537\":{\"h\":\"C\"},\"538\":{\"h\":\"C++\"},\"539\":{\"h\":\"C\"},\"540\":{\"h\":\"Java\"},\"541\":{\"h\":\"Python\"},\"542\":{\"h\":\"JavaScript\"},\"543\":{\"h\":\"python\"},\"544\":{\"h\":\"安装\",\"t\":[\"python2\",\"python3\",\"pip\"]},\"545\":{\"h\":\"国内镜像源地址\",\"t\":[\"# 阿里云 https://mirrors.aliyun.com/pypi/simple/ # 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ # 豆瓣(douban) https://pypi.douban.com/simple/ # 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/ # 中国科学技术大学 https://pypi.mirrors.ustc.edu.cn/simple/ pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple/ pip install fake-useragent -i https://mirrors.aliyun.com/pypi/simple/\"]},\"546\":{\"h\":\"虚拟环境\"},\"547\":{\"h\":\"基础语法\"},\"548\":{\"h\":\"界面\"},\"549\":{\"h\":\"爬虫(不要拿来做不好的事情)\",\"t\":[\"请遵循robots.txt的规则\"]},\"550\":{\"h\":\"常用库\",\"t\":[\"requests\",\"scrapy\",\"xpath去匹配元素\"]},\"551\":{\"h\":\"学习资料\",\"t\":[\"Qt5中文网\",\"qt5\"]},\"552\":{\"h\":\"scrapy\"},\"553\":{\"h\":\"\",\"t\":[\"pip install\"]},\"554\":{\"h\":\"使用\",\"t\":[\"进入一个文件夹，创建一个项目\",\"scrapy startproject tutorial\",\"创建一个spider\",\"# 选择一个模板创建 scrapy genspider -l # or 创建一个名称为example的spider, example.com 是allowed_domains scrapy genspider example example.com # or 根据模板创建 crapy genspider -t crawl scrapyorg scrapy.org\",\"运行\",\"# 进入项目下 scrapy crawl example\"]},\"555\":{\"h\":\"具体示例\"},\"556\":{\"h\":\"动态生成ua\",\"t\":[\"安装fake-useragent\",\"使用 import之后， 调用，然后用randomAPI生成\",\" import scrapy from fake_useragent import UserAgent ua = UserAgent() class exampleSpider(scrapy.Spider): name = 'exzample' allowed_domains = ['example.com'] def start_requests(self): search_names = ['aaa', 'bbb'] prefix = 'https://example.com?keywords=' start_urls = [] for n in search_names: start_urls.append(prefix + n) for url in start_urls: yield scrapy.Request(url=url, callback=self.parse, headers=self.get_random_user_agent()) def parse(self, response): print(response.request.headers['User-Agent']) # open(‘result.txt’, 'wb+').write(response.body.xpath(\\\"//td/a[@class='check']\\\").extract()) link = response.xpath('//td/a/@href').extract_first() if link: link = 'https://example.com' + link # 获取页面中的另一个链接 yield scrapy.Request(link, callback=self.parse, headers=self.get_random_user_agent()) else: names = response.xpath('//tr/th/text()').extract() tds = response.xpath('//tr/td/span/text()[not(ancestor::style)]').extract() clean_tds = list(filter(bool, [td.replace('\\\\n', '').strip() for td in tds])) # 假如开启了pipeline, 则会到pipeline中执行，在pipelines.py中可以导出数据 yield { 'url': response.url, 'names': names, 'data': clean_tds } pass # 定义一个生成随机ua的方法 def get_random_user_agent(self): return { 'User-Agent': ua.random }\"]},\"557\":{\"h\":\"设置延迟\",\"t\":[\"将settings.py中配置\",\"DOWNLOAD_DELAY = 12 RANDOMIZE_DOWNLOAD_DELAY = True\"]},\"558\":{\"h\":\"pipelines中\",\"t\":[\"import csv import json class examplePipeline: def process_item(self, item, spider): if item['data']: # csv 文件 self.file = open('file/' + item['data'][0] + '.csv', 'w', newline='') self.writer = csv.writer(self.file) self.writer.writerow(item['names']) # CSV头部 data = item['data'] self.writer.writerow(data) # 值 return item else: # json 文件 with open('syz/' + item['medName'] + '.json', 'w', encoding='utf-8') as json_file: json.dump(item['yaozh01Data'], json_file, ensure_ascii=False) return item def close_spider(self, spider): self.file.close()\"]},\"559\":{\"h\":\"Q&A\"},\"560\":{\"h\":\"从其他机器连接MySQL，提示 not allowed\",\"t\":[\"将数据库user表中的对应的用户的host值从localhost改称%即可\"]},\"561\":{\"h\":\"错误链接过多，导致IP被block\",\"t\":[\"将 MySQL my.ini / my-default.ini 中的 最大错误连接数 调大\",\"flush hosts\"]},\"562\":{\"h\":\"MySQL实战\"},\"563\":{\"h\":\"安全设置\"},\"564\":{\"h\":\"nestjs概述\"},\"565\":{\"h\":\"设计理念\",\"t\":[\"灵感来源于Angular\"]},\"566\":{\"h\":\"基本概念\",\"t\":[\"Controllers handling incoming requests and returning responses to the client 配合services处理数据，主要处理数据在services, Controller负责路由接口 使用：Decorators、 classes @Controller([path])\",\"Providers\",\"Modules\",\"Middleware\",\"Exception Filters\",\"Pipes\",\"Guards\",\"interceptors\",\"Custom Decorators\"]},\"567\":{\"h\":\"脚本快速生成物料模板\",\"t\":[\"nest g module [name] nest g controller [name] nest g service [name] nest g resource [name] # CRUD controller\"]},\"568\":{\"h\":\"passport\",\"t\":[\"虽然仅使用@nestjs/jwt就能实现身份验证的功能，但是使用passport能在更高层次上提供更多便利。Passport 拥有丰富的 strategies 生态系统，实现了各种身份验证机制。虽然概念简单，但你可以选择的 Passport 策略集非常丰富且种类繁多。Passport 将这些不同的步骤抽象为一个标准模式，@nestjs/passport 模块将这个模式封装并标准化为熟悉的 Nest 结构\",\"NestJs中何时使用卫士以及何时使用中间件 在NestJs中，卫士（Guards）和中间件（Middleware）是用于处理请求的两种不同的机制。\",\"卫士是一种用于对请求进行验证和授权的机制。它可以用于保护路由、控制器或者特定的处理程序。卫士通常用于验证用户的身份、权限和角色等信息。当请求到达时，卫士会在路由处理程序之前执行，并根据验证结果决定是否允许继续处理请求。如果验证失败，卫士可以返回错误响应或者重定向到其他页面。在NestJs中，可以通过实现CanActivate接口来创建自定义的卫士。\",\"中间件是一种用于在请求到达路由处理程序之前或之后执行一些通用逻辑的机制。它可以用于处理请求的前置或后置操作，例如日志记录、错误处理、请求转发等。中间件可以在请求到达路由处理程序之前对请求进行修改或者在路由处理程序之后对响应进行修改。在NestJs中，可以通过使用@Middleware()装饰器来创建自定义的中间件。\",\"那么何时使用卫士，何时使用中间件呢？\",\"使用卫士： 当需要对请求进行验证和授权时，例如验证用户的身份、权限和角色等信息。 当需要在路由处理程序之前进行验证和授权操作时。 当需要根据验证结果决定是否允许继续处理请求时。 使用中间件： 当需要在请求到达路由处理程序之前或之后执行一些通用逻辑时，例如日志记录、错误处理、请求转发等。 当需要对请求进行修改或者对响应进行修改时。 当需要在多个路由之间共享一些通用逻辑时。\"]},\"569\":{\"h\":\"介绍\"},\"570\":{\"h\":\"\"},\"571\":{\"h\":\"nodejs版本切换工具\",\"t\":[\"nvm\",\"下载地址\",\"# 查看node所有版本 nvm version # 查看已安装的版本 nvm list nvm ls # 查看当前安装的版本 nvm current # 安装对应版本的node nvm install/uninstall [version] # 切换版本，切换假如有报错，需要管理员权限，或者删除对应版本后再install一遍 nvm use [version] # 帮助 nvm help\"]},\"572\":{\"h\":\"restful规范\",\"t\":[\"CURD 通过四个method区分：get, post, put, delete\"]},\"573\":{\"h\":\"NestJS\",\"t\":[\"中文官网地址\"]},\"574\":{\"h\":\"概况\",\"t\":[\"基于express框架\"]},\"575\":{\"h\":\"核心概念\",\"t\":[\"controller\",\"provider\",\"module\",\"entity\"]},\"576\":{\"h\":\"主要使用步骤\",\"t\":[\"npm全局安装脚手架\",\"npm install @nestjs/cli -g\",\"通过脚手架创建项目\",\"nest new [project-name]\",\"后端业务模块分析与拆分\",\"调整基本配置\",\"错误过滤\",\"创建所需的各个模块\",\"Postman增加对应接口的调试条目\",\"跨域处理\",\"创建数据库和数据库连接\",\"创建各个模块的Entity实体\",\"实体与数据库表进行关联\",\"JWT登录鉴权\",\"接口逻辑具体开发\",\"接口文档的集成\",\"文件及文件流处理\",\"socket长连接\"]},\"577\":{\"h\":\"Docker\"},\"578\":{\"h\":\"安装\"},\"579\":{\"h\":\"基础操作\",\"t\":[\"systemctl docker restart # 重启docker docker pull [镜像名] # 拉取镜像 docker images docker ps -a docker stop [container] docker rm [container] docker build -t mynodeimage:v1.0 /dockerfilepath # 通过Dockerfile创建镜像 # 进入容器 docker exec -it dockerNginx /bin/bash docker exec -it dockerNginx /bin/sh # 退出容器 exit\"]},\"580\":{\"h\":\"Dockerfile\",\"t\":[\"# 例子 FROM node:latest RUN mkdir -p /var/memo-server/ WORKDIR /var/memo-server/ COPY . /var/memo-server/ RUN yarn install EXPOSE 3000 CMD [\\\"node\\\", \\\"./dist/main.js\\\"]\"]},\"581\":{\"h\":\"镜像\",\"t\":[\"以前dockerhub直接找镜像，然后docker pull, 现在国内某些原因进不去了，所以需要手动换方式\"]},\"582\":{\"h\":\"1. 添加镜像地址\",\"t\":[\"一些国内的镜像服务地址，可以先点进去看是否有效，再添加到自己的docker配置中\",\"# docker proxy, 这个测试可用 https://dockerpull.com https://dockerproxy.cn # bestcfipas镜像服务 https://docker.registry.cyou https://docker-cf.registry.cyou # zero_free镜像服务 https://docker.jsdelivr.fyi https://dockercf.jsdelivr.fyi https://dockertest.jsdelivr.fyi # Docker镜像加速站 https://hub.uuuadc.top https://docker.1panel.live https://hub.rat.dev # DockerHub 镜像加速代理 https://docker.anyhub.us.kg https://docker.chenby.cn https://dockerhub.jobcher.com # 镜像使用说明 https://dockerhub.icu # Docker镜像加速站 https://docker.ckyl.me # 镜像使用说明 https://docker.awsl9527.cn # 镜像使用说明 https://docker.hpcloud.cloud # DaoCloud 镜像站 https://docker.m.daocloud.io # AtomHub 可信镜像仓库平台 (只包含基础镜像，共336个) https://atomhub.openatom.cn\"]},\"583\":{\"h\":\"2. 设置镜像（Centos 7）\",\"t\":[\"创建或修改/etc/docker/daemon.json\",\"在/daemon.json文件中添加可用镜像地址\",\"{ \\\"registry-mirrors\\\": [ \\\"https://dockerproxy.com\\\", \\\"https://mirror.baidubce.com\\\", \\\"https://docker.m.daocloud.io\\\", \\\"https://docker.nju.edu.cn\\\", \\\"https://docker.mirrors.sjtug.sjtu.edu.cn\\\" ] }\",\"sudo systemctl daemon-reload # 可有可没有 [sudo?] systemctl restart docker # 查看docker信息, 可看到是否成功添加 docker info\"]},\"584\":{\"h\":\"Nginx\",\"t\":[\"高性能的HTTP和反向代理Web服务器\"]},\"585\":{\"h\":\"常用命令\",\"t\":[\"nginx -s reload\"]},\"586\":{\"h\":\"Nginx.conf\"},\"587\":{\"h\":\"ArkTS\",\"t\":[\"开发语言， .ets为源码文件后缀\"]},\"588\":{\"h\":\"方舟编译器（ArkCompiler）\"},\"589\":{\"h\":\"ArkUI\",\"t\":[\"UI开发框架， 两种范式， 基于ArkTS的声明式编程范式和基于JS扩展的类Web开发范式\"]},\"590\":{\"h\":\"XComponent组件\"},\"591\":{\"h\":\"DevEco Studio\",\"t\":[\"开发平台（IDE + 各种功能），类似Android Studio\"]},\"592\":{\"h\":\"下载安装\",\"t\":[\"内存16GB及以上，其中已经嵌入HarmonyOS SDK\"]},\"593\":{\"h\":\"诊断开发环境\",\"t\":[\"Help > Diagnostic Tools > Diagnose Development Environment\",\"可快速定位解决环境问题\"]},\"594\":{\"h\":\"启用中文化插件\",\"t\":[\"File > Settings > Plugins，Installed页签，搜索输入Chinese, 勾选Chinese(Simplified)\"]},\"595\":{\"h\":\"创建工程\",\"t\":[\"选择模板\",\"Application 应用开发\",\"Atomic Service 元服务开发\",\"配置工程\",\"Compatible SDK 目前选择5.0.0(12)\",\"真机运行\",\"连接真机\",\"File > Project Structure > Project > SigningConfigs\",\"华为帐号登录\",\"勾选Support HarmonyOS和Automatically generate signature\"]},\"596\":{\"h\":\"代码编辑器\",\"t\":[\"代码高亮设置：File > Settings（macOS为DevEco Studio > Preferences）面板，在Editor > Color Scheme\",\"代码跳转：按住Ctrl键（macOS为Command键），鼠标单击代码\",\"跨语言跳转：选中接口名称单击右键，在弹出的菜单中选择Go To > Implementation(s)（或使用快捷键Ctrl+Alt+B，macOS为Command+Option+B）实现跨语言跳转\",\"代码格式化：快捷键Ctrl + Alt + L\",\"code-linter: 若工程已配置code-linter.json5文件，选中code-linter.json5文件右键选择Apply CodeLinter Style Rules，代码格式化规则将与已配置的code-linter.json5文件中相关规则保持一致 \",\"右键选择Code Linter > Full Linter执行代码全量检查；如只需对Git工程中增量文件（包含新增/修改/重命名）进行检查，可选择Incremental Linter执行\",\"代码折叠\",\"代码快速注释\",\"代码结构树：快捷键Alt + 7 / Ctrl + F12\",\"代码引用查找：单击鼠标右键 > Find Usages或使用快捷键Alt +F7\",\"函数注释生成：输入“/**”+回车键\",\"代码自动补全 \",\"仅需按照最近使用过的类、方法、字段和关键字等名称提供补全内容排序，可以在File > Settings > Editor > General > Code Completion 中勾选“Sort suggestions by recently used”\",\"快速覆写父类：快捷键Ctrl+O，或右键单击Generate...，选择Override Methods\",\"快速生成构造器：在类中使用快捷键Alt+Insert，或单击鼠标右键选择Generate...，弹窗中选择Constructor，选择一个或多个需要生成构造函数的参数，点击OK。若选择Select None，则生成不带参数的构造器\",\"快速生成get/set方法：单击右键选择Generate...>Getter and Setter，或者使用快捷键Alt+Insert，在菜单中选择Getter and Setter\",\"快速生成声明信息到Index文件：单击右键选择Generate...>Declarations，或者使用快捷键Alt+Insert，在菜单中选择Declarations，按住快捷键Ctrl并选择需要声明的变量名、方法名、接口名、类名等，即可在模块的Index.ets文件中批量生成相应的声明信息\",\"自动导包：Optimize Imports快速清除未使用的import\",\"代码查找：双击Shift键\",\"查阅API参考：悬浮，Show in API Reference\",\"查看父类/子类继承关系：点击代码编辑区域左侧的Gutter Icons（装订线图标）可以跳转到对应的父/子接口或类\",\"代码检查和修复 \",\"QuickFix\",\"代码重构\"]},\"597\":{\"h\":\"预览器\",\"t\":[\"实时预览\",\"动态预览\",\"组件预览：@Preview注解\",\"双向预览\",\"多设备预览\"]},\"598\":{\"h\":\"模拟器、真机\"},\"599\":{\"h\":\"HDC常用命令\"},\"600\":{\"h\":\"鸿蒙简介\",\"t\":[\"第一次接触鸿蒙应用开发是2024年，这个时候华为已经出鸿蒙NEXT了(抛掉了安卓的内核？)\"]},\"601\":{\"h\":\"\",\"t\":[\"一次开发，多段部署\",\"可分可合，自由流转\",\"统一生态，原生智能\"]},\"602\":{\"h\":\"鸿蒙应用\",\"t\":[\"使用HarmonyOS SDK开发的应用程序\",\"两种形态\",\"APP，鸿蒙安装包 HAP()\",\"元服务，类似小程序，不用安装\"]},\"603\":{\"h\":\"前端基础\"},\"604\":{\"h\":\"关于编程\",\"t\":[\"用编程的思想看待前端\"]},\"605\":{\"h\":\"HTML\"},\"606\":{\"h\":\"CSS\"},\"607\":{\"h\":\"JavaScript\"},\"608\":{\"h\":\"附录\",\"t\":[\"关于网页中的一些命名\"]},\"609\":{\"h\":\"网页中常用的命名\"},\"610\":{\"h\":\"(一) 基础命名\",\"t\":[\"内容：content/container 导航：nav 侧栏：sidebar 栏目：column 标志：logo 页面主体：main 广告：banner 热点：hot 新闻：news 下载：download 子导航：subnav 菜单：menu 搜索：search 页脚：footer 滚动：scroll 版权：copyright 友情链接：friendlink 子菜单：submenu 内容：content 标签页：tab 文章列表：list 注册：regsiter 提示信息：msg 小技巧：tips 加入：joinus 栏目标题：title 指南：guild 服务：service 状态：status 投票：vote 尾：footer 合作伙伴：partner 登录条：loginbar 页面外围控制整体布局宽度：wrapper 左右中：left right center\"]},\"611\":{\"h\":\"(二)注释的写法\",\"t\":[\"/*Footer*/ 内容区 /*End Footer*/\"]},\"612\":{\"h\":\"(三)id的命名\",\"t\":[\"(1)页面结构\",\"容器: container 页头：header 内容：content/container 页面主体：main 页尾：footer 导航：nav 侧栏：sidebar 栏目：column 左右中：left right center 页面外围控制整体布局宽度：wrapper\",\"(2)导航\",\"导航：nav 主导航：mainnav 子导航：subnav 顶导航：topnav 边导航：sidebar 左导航：leftsidebar 右导航：rightsidebar 菜单：menu 子菜单：submenu 标题: title 摘要: summary\",\"(3)功能\",\"标志：logo 广告：banner 登陆：login 登录条：loginbar 注册：regsiter 搜索：search 功能区：shop 标题：title 加入：joinus 状态：status 按钮：btn 滚动：scroll 标签页：tab 文章列表：list 提示信息：msg 当前的: current 小技巧：tips 图标: icon 注释：note 指南：guild 服务：service 热点：hot 新闻：news 下载：download 投票：vote 合作伙伴：partner 友情链接：link 版权：copyright\"]},\"613\":{\"h\":\"(四)class的命名\",\"t\":[\"(1) 颜色:使用颜色的名称或者16进制代码,如\",\".red { color: red; } .f60 { color: #f60; } .ff8600 { color: #ff8600; }\",\"(2) 字体大小,直接使用\\\"font+字体大小\\\"作为名称,如\",\".font-12px { font-size: 12px; } .font-9pt {font-size: 9pt; }\",\"(3) 对齐样式,使用对齐目标的英文名称,如\",\".left { float:left; } .bottom { float:bottom; }\",\"(4) 标题栏样式,使用\\\"类别+功能\\\"的方式命名,如\",\".bar-news { } .bar-product { }\",\"注意事项\",\"一律小写\",\"用英文\",\"加中杠\",\"尽量不缩写，除非一看就明白的单词\",\" 主要的 master.css 模块 module.css 基本共用 base.css 主题 themes.css 专栏 columns.css 打印 print.css 文字 font.css 表单 forms.css 补丁 mend.css 布局，版面 layout.css\"]},\"614\":{\"h\":\"框架\"},\"615\":{\"h\":\"前端常用库\"},\"616\":{\"h\":\"jQuery\"},\"617\":{\"h\":\"Zepto\"},\"618\":{\"h\":\"lodash\"},\"619\":{\"h\":\"axios\"},\"620\":{\"h\":\"qrcodejs\"},\"621\":{\"h\":\"eCharts\"},\"622\":{\"h\":\"quill\"},\"623\":{\"h\":\"概述\",\"t\":[\"Google 跨端解决方案\",\"适合中小型企业\",\"主要是一个UI框架，调用原生底层能力需要原生或者三方插件来做\",\"自绘引擎\",\"大大简化了多端的前端开发\",\"重点在其原理、设计思路和通用理念，与过往的开发经验相结合，建立起属于自己的知识体系抽象层次\"]},\"624\":{\"h\":\"关键技术\",\"t\":[\"Skia 底层图像渲染引擎\",\"Dart 面向对象脚本语言\"]},\"625\":{\"h\":\"Flutter\"},\"626\":{\"h\":\"\"},\"627\":{\"h\":\"windows 下用 VSCode 或者 AS (Android Studio) 进行开发\",\"t\":[\"Flutter部分\",\"下载 flutter SDK，一般里面已经包括了Dart SDK\",\"配置flutter环境变量、Dart环境变量和相关镜像站点环境变量(毕竟国内)：PUB_HOSTED_URL 和 FLUTTER_STORAGE_BASE_URL\",\"使用flutter doctor命令检查\",\"# 修改flutter配置；修改之后，环境变量变了，不会跟着改变 flutter config --list flutter config --jdk-dir=/path/to/your/jdk # 手动修改jdk位置 # flutter 安装环境检测 flutter doctor flutter doctor --verbose\",\"AS 部分\",\"JAVA 环境：下载JDK，配置环境变量，java -version检验\",\"下载 AS (Android Studio)\",\"AS 中下载Flutter和Dart插件, 配置Project Structure下面的JDK地址, 根据flutter doctor的结果安装必要的工具(【SDK Manager】下)\",\"安装 Android SDK， 配置各种环境变量：platform-tools等，便于开发\",\"下载Java对应版本的gradle(安卓构建工具)\",\"调整 android -> gradle -> gradle-wrapper.properties （也有可能在其他位置） 中 gradle变量，默认是下载很慢，所以下下来之后好一些\",\"#distributionUrl=https\\\\://services.gradle.org/distributions/gradle-8.8-all.zip distributionUrl=file:///F\\\\:/gradle/gradle-8.8-all.zip\",\"app -> build.gradle中需要调整相应的SDK版本\",\"WINDOWS 下调整Android Studio的缓存位置， 缓存等文件夹不放在C盘：修改F:\\\\ProgramData\\\\android-studio\\\\bin\\\\idea.properties文件中的config和system的path\",\"#--------------------------------------------------------------------- # Uncomment this option if you want to customize a path to the settings directory. #--------------------------------------------------------------------- idea.config.path=F:/ProgramData/as-cache/.AndroidStudio/config #--------------------------------------------------------------------- # Uncomment this option if you want to customize a path to the caches directory. #--------------------------------------------------------------------- idea.system.path=F:/ProgramData/as-cache/.AndroidStudio/system\",\"windows下调整.gradle保存位置，因为占用很多，修改环境变量：GRADLE_USER_HOME = F:\\\\ProgramData\\\\as-cache\\\\.gradle 或者 直接在 AS 中Settings -> Gradle下进行调整\"]},\"628\":{\"h\":\"Flutter依赖(类似web前端工程依赖)\",\"t\":[\"依赖包查找\",\"修改pubspec.yaml 中 dependences 和 dev_dependences, 直接在AS中可以update\",\"注意：下载依赖时，一定要看它的文档和推荐版本\",\"会生成一个 pubspec.lock 文件，可能有时候也要删除掉重新下载依赖\",\"下载的依赖一般在： C:\\\\Users\\\\用户名\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.flutter-io.cn\",\"# 下载命令 flutter pub get\"]},\"629\":{\"h\":\"常用插件\",\"t\":[\"http请求：dio loading： flutter_easyloading dialog：adaptive_dialog 状态管理：provider 数据持久化：share_preferences 相机： camera\"]},\"630\":{\"h\":\"基本概念一： Widget\",\"t\":[\"Flutter的核心设计思想便是 \\\"一切皆 Widget\\\"\"]},\"631\":{\"h\":\"Widget Element RenderObject\"},\"632\":{\"h\":\"StatelessWidget StatefulWidget\",\"t\":[\"当你所要构建的用户界面不随任何状态信息的变化而变化时，需要选择使用StatelessWidget，反之则选用 StatefulWidget\"]},\"633\":{\"h\":\"基本概念二、 State\",\"t\":[\"Flutter的视图开发是声明式的，其核心设计思想就是将视图和数据分离，这与 React 的设计思路完全一致\"]},\"634\":{\"h\":\"基本概念三、 生命周期\"},\"635\":{\"h\":\"其他UI组件库\",\"t\":[\"Get Widget\",\"Bruno: Bruno 贝壳公司一整套设计体系\",\"macos_ui: macOS\",\"fluent_ui: windows\",\"tekflat_design\"]},\"636\":{\"h\":\"相关问题\"},\"637\":{\"h\":\"一、安卓调试时，gradle下载慢的问题，安装依赖后，依赖中一般也会慢\",\"t\":[\"解决方法一： 用梯子，google() mavenCentral() 需要连接外网 解决方法二： 麻烦一些，调整[android] 中 build.gradle、 Settings.gradle， 下载的依赖中也进行调整External -> Flutter Plugins下面\",\" // 腾讯maven maven { url 'https://mirrors.cloud.tencent.com/nexus/repository/maven-public' } // 阿里maven maven { url 'https://maven.aliyun.com/repository/google' } maven { url 'https://maven.aliyun.com/repository/jcenter' } maven { url 'https://maven.aliyun.com/repository/gradle-plugin' } maven { url 'https://maven.aliyun.com/nexus/content/groups/public' } // 默认官方maven // google() // mavenCentral()\"]},\"638\":{\"h\":\"二、安装完三方fluttertoast依赖后运行报错\",\"t\":[\"Execution failed for task ':fluttertoast:compileDebugJavaWithJavac'. > Could not resolve all files for configuration ':fluttertoast:androidJdkImage'. > Failed to transform core-for-system-modules.jar to match attributes {artifactType=_internal_android_jdk_image, org.gradle.libraryelements=jar, org.gradle.usage=java-runtime}. > Execution failed for JdkImageTransform: F:\\\\AdrSDK\\\\platforms\\\\android-33\\\\core-for-system-modules.jar. > Error while executing process F:\\\\ProgramData\\\\jdk-22.0.2\\\\bin\\\\jlink.exe with arguments {--module-path C:\\\\Users\\\\dell\\\\.gradle\\\\caches\\\\8.8\\\\transforms\\\\2b0b454e888697ca218318e4ac8fecc6-ee76b1ff-daac-4017-802f-8a4e847a1ead\\\\transformed\\\\output\\\\temp\\\\jmod --add-modules java.base --output C:\\\\Users\\\\dell\\\\.gradle\\\\caches\\\\8.8\\\\transforms\\\\2b0b454e888697ca218318e4ac8fecc6-ee76b1ff-daac-4017-802f-8a4e847a1ead\\\\transformed\\\\output\\\\jdkImage --disable-plugin system-modules}\",\"解决办法：根据报错位置来看，JDK中的jlink.exe报错，尝试调整JDK版本，最后确实是JDK版本的问题, 将22.0.1降到了19.0.1\"]},\"639\":{\"h\":\"三、打包的时候报kotlin版本不对\",\"t\":[\"解决办法：\",\"打开android目录下build.gradle\",\"查找buildscript配置块中的ext.kotlin_version属性，这个属性定义了项目使用的Kotlin版本\",\"buildscript { ext.kotlin_version = '1.6.0' }\",\"如果你需要更新Kotlin版本，只需将ext.kotlin_version的值改为你想要的版本，保存build.gradle文件\",\"flutter clean, flutter build\"]},\"640\":{\"h\":\"四、keystore打包签名\"},\"641\":{\"h\":\"编码中的问题\"},\"642\":{\"h\":\"Dart\",\"t\":[\"Dart 的最初定位也是一种运行在浏览器中的脚本语言，代替JS的，跟TS, ArkTS是JS的超集不同, Dart是完全换了语言。\"]},\"643\":{\"h\":\"特性\",\"t\":[\"同时支持即时编译 JIT 和事前编译 AOT。\",\"开发期使用 JIT，开发周期异常短，调试方式颠覆常规（支持有状态的热重载）\",\"发布期使用 AOT，本地代码执行更高效，代码性能和用户体验也更好\"]},\"644\":{\"h\":\"内存分配与垃圾回收\"},\"645\":{\"h\":\"单线程模型\",\"t\":[\"没有线程，只有Isolate(隔离区)\"]},\"646\":{\"h\":\"无需单独的声明式布局语言\"},\"647\":{\"h\":\"类型\",\"t\":[\"Dart 是类型安全的语言，并且所有类型都是对象类型，都继承自顶层类型 Object 因此一切变量的值都是类的实例（即对象），甚至数字、布尔值、函数和 null 也都是继承自Object 的对象\\\\\",\"一切皆对象，包括运算符\"]},\"648\":{\"h\":\"内置基本类型\",\"t\":[\"num、bool、String、List 和 Map\"]},\"649\":{\"h\":\"函数\"},\"650\":{\"h\":\"类\"},\"651\":{\"h\":\"可选参数\",\"t\":[\"没有多态概念，用可选参数的方式代替\"]},\"652\":{\"h\":\"继承\"},\"653\":{\"h\":\"实现\"},\"654\":{\"h\":\"混入\"},\"655\":{\"h\":\"特殊概念\",\"t\":[\"○ 三个引号：带格式字符串 ○ 下划线开头为私有变量\"]},\"656\":{\"h\":\"性能优化\"},\"657\":{\"h\":\"前端工程化\",\"t\":[\"前端工程化，就是利用各种工具（如脚手架、js框架、代码压缩、检查工具、代码管理等工具），逐步构建起一个有着优良设计结构的完整项目\",\"如同建造中的土木工程，地基要打好，基础决定上层建筑\"]},\"658\":{\"h\":\"前端规范\"},\"659\":{\"h\":\"前端规范\"},\"660\":{\"h\":\"命名\"},\"661\":{\"h\":\"编码\"},\"662\":{\"h\":\"IDE配置\"},\"663\":{\"h\":\"代码检查与格式化\"},\"664\":{\"h\":\"codereview\"},\"665\":{\"h\":\"疑难问题\"},\"666\":{\"h\":\"1. 本地开发时，main.js中 @import scss未生效，编译build后生效\"},\"667\":{\"h\":\"2. luckysheet 无法导入图片问题： 未处理oneCellAnchor\"},\"668\":{\"h\":\"3. chrome浏览器中如何防止input[type=password]自动选择存储的账号密码？（230816）\"},\"669\":{\"h\":\"4. Vue中有没有好的方式处理中英文转换后的样式问题(230816)\"},\"670\":{\"h\":\"JS概述\",\"t\":[\"正视JS这门语言，有让人吐槽（想不通）的地方：如null的类型等，也有精华的地方：如Number类型等\",\"Atwood 定律: 凡是能用 JavaScript 写出来的系统，最终都会用 JavaScript 写出来（Any application that can be written in JavaScript, will eventually be written in JavaScript\"]},\"671\":{\"h\":\"\",\"t\":[\"任何人都可以向TC39委员会提交提案\",\"提案变成正式标准，需要经历5个阶段 \",\"0 Strawman 展示\",\"1 Proposal 征求意见\",\"2 Draft 草案\",\"3 Candidate 候选\",\"4 Finished 定案\",\"每个阶段的变动需要TC39委员会批准\"]},\"672\":{\"h\":\"基础\",\"t\":[\"数据类型 \",\"强制类型转换\",\"函数 \",\"call、apply、bind\",\"柯里化\",\"数据结构\",\"词法\",\"语法\"]},\"673\":{\"h\":\"核心\",\"t\":[\"作用域 \",\"变量提升\",\"闭包\",\"this\",\"构造函数 \",\"new\",\"Class\",\"原型 \",\"继承\",\"异步 \",\"Promise\",\"async, await\",\"迭代器与生成器\",\"垃圾回收\"]},\"674\":{\"h\":\"进阶\",\"t\":[\"设计模式\",\"性能优化\",\"宿主 \",\"浏览器\",\"Nodejs\",\"事件循环\",\"模块化\",\"工程化\"]},\"675\":{\"h\":\"Atwood定律\",\"t\":[\"任何可以用‌JavaScript来写的应用，最终都将用JavaScript来写\"]},\"676\":{\"h\":\"推荐书籍\"},\"677\":{\"h\":\"第一步\",\"t\":[\"[JavaScript 高级程序设计（第 4 版）]\",\"[数据结构与算法JavaScript描述]\",\"[JavaScript设计模式与开发实践]\"]},\"678\":{\"h\":\"第二步\",\"t\":[\"JavaScript 忍者秘籍（第 2 版）\",\"你不知道的 JS 三卷\"]},\"679\":{\"h\":\"第三步\",\"t\":[\"JavaScript 悟道\",\"JavaScript 语言精髓与编程实践（第 3 版）\"]},\"680\":{\"h\":\"类型转换\"},\"681\":{\"h\":\"强制类型转换\"},\"682\":{\"c\":[\"Fe Basic\"]},\"683\":{\"c\":[\"js\"]},\"684\":{\"h\":\"Q&A\"},\"685\":{\"h\":\"fetch\",\"t\":[\"fetch在post form-data类型的数据的时候，header中不需要指定Content-Type\"]},\"686\":{\"h\":\"EventLoop\"},\"687\":{\"h\":\"强缓存与协商缓存的区别\"},\"688\":{\"h\":\"EventSource和长轮询的差别\"},\"689\":{\"h\":\"Websocket 是怎么保持的长连接\"},\"690\":{\"h\":\"transform是否会调用GPU\"},\"691\":{\"h\":\"浏览器渲染原理，重绘和重排 / 回流的区别， GC的两种类型是什么\"},\"692\":{\"h\":\"概述\"},\"693\":{\"h\":\"1. 架构的演进\",\"t\":[\"单进程架构 --> 多进程架构 --> 面向服务的架构（SOA，依旧是多进程模型，越拆越多） --> 弹性架构: 在强大性能设备上会以多进程的方式运行基础服务，但是如果在资源受限的设备上，Chrome 会将很多服务整合到一个进程中，从而节省内存占用\",\"目前的chrome架构：打开chrome浏览器程序，然后打开浏览器的任务管理器可以看到浏览器的相关进程\",\"浏览器主进程（一个）\",\"网络进程（一个）\",\"缓存进程（一个）\",\"GPU进程（从主进程中独立出来的进程）\",\"渲染进程（多个）\",\"插件进程（多个）\"]},\"694\":{\"h\":\"2. 整体流程\",\"t\":[\"url到页面展示的流程，其中最后的渲染流程很重要\"]},\"695\":{\"h\":\"\"},\"696\":{\"h\":\"4. 浏览器中的JS执行机制\"},\"697\":{\"h\":\"5. 性能优化\",\"t\":[\"加载阶段\",\"交互阶段\"]},\"698\":{\"h\":\"6. 缓存\"},\"699\":{\"h\":\"7. 浏览器安全\"},\"700\":{\"h\":\"浏览器API\"},\"701\":{\"h\":\"scrollIntoView\"},\"702\":{\"h\":\"JS执行机制\"},\"703\":{\"h\":\"执行上下文\"},\"704\":{\"h\":\"变量提升\",\"t\":[\"在执行过程中，若使用了未声明的变量，那么 JavaScript 执行会报错。\",\"在一个变量定义之前使用它，不会出错，但是该变量的值会为 undefined，而不是定义 时的值。\",\"在一个函数定义之前使用它，不会出错，且函数能正确执行\",\"let 声明变量存在提升，但是由于暂时性死区，导致不能被使用\"]},\"705\":{\"h\":\"渲染流程\"},\"706\":{\"h\":\"URL 到页面展示的 完整流程\",\"t\":[\"整个过程需要以下三个进程的配合\",\"浏览器进程\",\"网络进程\",\"渲染进程（一个页面一个渲染进程，或者多个页面共用一个渲染进程）\",\"浏览器主进程处理用户在地址栏中输入的内容\",\"内容假如不是请求URL，则根据浏览器默认的搜索引擎生成带有搜索内容的相关的URL\",\"符合URL规则，则会加上请求协议\",\"通过IPC（进程间通信）把请求发至网络进程\",\"网络进程发起URL请求\",\"查找缓存，存在则直接将资源返回给浏览器进程\",\"否则：DNS解析 IP地址 --- TLS连接 --- TCP连接 --- 接收响应信息 假如重定向（将location给浏览器进程，重新进行请求过程）\",\"假如200，继续，浏览器根据contenttype做不同的响应\",\"如果返回的是HTML，浏览器主进程准备 渲染进程， 向渲染进程提交文档（这个时候页面才会被替换）\",\"渲染进程在文档传输完成后，会通知主进程，然后开始解析页面和子资源加载，页面生成完成渲染进程会通知主进程\",\"渲染进程接收完文档后，便开始解析页面和加载子资源\"]},\"707\":{\"h\":\"React\"},\"708\":{\"h\":\"uniapp\"},\"709\":{\"h\":\"介绍\",\"t\":[\"简单应用，能够节省开发成本和时间\",\"需要高性能和更复杂功能的场景，仍需考虑原生开发或者是其他更适合的框架\"]},\"710\":{\"h\":\"\"},\"711\":{\"h\":\"注意各端的管理规则\"},\"712\":{\"h\":\"页面结构\"},\"713\":{\"h\":\"HTML\"},\"714\":{\"h\":\"CSS\"},\"715\":{\"h\":\"Layout\"},\"716\":{\"h\":\"vue\"},\"717\":{\"h\":\"Virtual Dom\"},\"718\":{\"h\":\"SSR\"},\"719\":{\"h\":\"TypeScript\",\"t\":[\"JS是自由的流浪剑客，TS则是剑客做了带刀侍卫，有规矩将剑客约束了起来\",\"可以说是JS的超集，遵循最新规范，扩展了JS的语法\",\"PlayGround\"]},\"720\":{\"h\":\"类型（通俗定义）\",\"t\":[\"强类型：不许改变变量的数据类型（给变量定义了一个类型，那么这个变量类型就不可改变），除非进行强制类型转换 如 Java、C#、Python、C/C++\",\"弱类型：可以改变变量的数据类型 如 JavaScript， PHP\",\"静态类型：在编译阶段确定所有变量的类型 如 Java, C#, C/C++\",\"动态类型：在执行阶段确定所有变量的类型 如 JavaScript, PHP, Python\",\"动态弱类型语言让人模糊的场景：\",\"调用未注释说明的函数时，不知道传参的类型，只能去函数体中看\",\"函数中对传入的参数进行各种判断假设\",\"更改了一个数据的参数类型，但不知道还有多少地方调用\",\"前后端联调时出现不一致的情况\",\"...\",\"导致造成类型思维缺失，开发不规范\",\"因此：Facebook的Flow -- > 微软的TypeScript\",\"TS 好处\",\"编译时类型检查\",\"语言扩展：如异步类型、装饰器、接口、抽象类\",\"工具属性，可以编译成标准的JS\",\"...\",\"让开发者思考\"]},\"721\":{\"h\":\"安装与编译\",\"t\":[\" npm install typescript -g # 安装 tsc helloworld.ts # 编译\",\" tsc --init # 生成一个tsconfig.json 配置文件 # vscode中 菜单 任务-运行任务 tsc:监视-tsconfig.json 可以自动生成代码 # Hbuilder中 工具中安装typescript插件\"]},\"722\":{\"h\":\"TypeScript中的数据类型\",\"t\":[\"Boolean\",\"Number\",\"String\",\"Array\",\"Function\",\"Object\",\"Symbol\",\"undefined\",\"null\",\"void\",\"any\",\"never\",\"元组 tuple\",\"枚举 enum\",\"高级类型\"]},\"723\":{\"h\":\"类型注解\",\"t\":[\"作用：相当于强类型语言中的类型声明\",\"语法： [变量/函数]:type\"]},\"724\":{\"h\":\"基础数据类型\",\"t\":[\"let isOver: boolean = false; // 布尔类型 let num: number = 6; // 数字类型 let hexNum: number = 0xf00d; let binNum: number = 0b1010; let name: string = 'Hello World'; // 字符串类型 /* es6中的小撇号（模板字符串）*/ let name: string = `Gene`; let age: number = 37; let sentence: string = `Hello, my name is ${ name }. I'll be ${ age + 1 } years old next month.` /* 数组类型 */ let arr: number[] = [1,2,3]; // 类型元素数组 let arr1: Array<number> = [1,2,3]; // 泛型接口 let arr2: Array<number | string> = [1, 3, '2']; // 联合类型 let arr3: any[] = [1,2,3]; // 类型元素数组 /* 元组类型Tuple */ let x: [string, number]; x = ['hello', 10]; // x.push(2) 但是 x[2]会报错，所以不要这样使用 x = [10.'hello']; // error // 当访问一个越界的元素，会使用联合类型替代： x[3] = 'world'; // OK, 字符串可以赋值给(string | number)类型 console.log(x[5].toString()); // OK, 'string' 和 'number' 都有 toString x[6] = true; // Error, 布尔不是(string | number)类型 /* 枚举类型 enum 程序广泛地用于处理非数值的数据 在其它程序设计语言中，一般用一个数值代表某一状态，这种处理方法不直观，易读性差， 能在程序中用自然语言中有相应含义的单词来代表某一状态，考虑到某一变量可能取得值， 尽量用自然语言中含义清楚的单次来表示它的每一个值 实现原理：反向映射，字符串枚举是不可以用于反向映射的 不建议使用异构枚举 */ enum Color {Red,Green,Blue} // || enum Color {Red = 1,Green = 9,Blue} let c: Color = Color.Red; // 打印出下标 0 let colorName: string = Color[2]; // 'Green' /* Any 任意类型 * 在对现有代码进行改写的时候，any类型是十分有用的，它允许你在编译时可选择地包含或移除类型检查。 * 你可能认为 Object有相似的作用，就像它在其它语言中那样。 * 但是 Object类型的变量只是允许你给它赋任意值 - * 但是却不能够在它上面调用任意的方法，即便它真的有这些方法 **/ let notSure: any = 5; notSure = false; notSure = 'maybe'; notSure.ifItExists(); // okay, ifItExists might exist at runtime notSure.toFixed(); // okay, toFixed exists (but the compiler doesn't check) let prettySure: Object = 4; prettySure.toFixed(); // Error: Property 'toFixed' doesn't exist on type 'Object'. let list: any[] = [1, true, \\\"free\\\"]; /* void 类型 */ // 表示方法没有返回值 function run():void { console.log('run') } /* Null & Undefined*/ var num:number | undefined; num = 123 console.log(num); /* Never 类型 */ // 从来都不会出现的值 var a:never; a=(()=>{ throw new Error('错误') })() /* Object */ /* 类型断言（类型转换） */\"]},\"725\":{\"h\":\"变量声明\",\"t\":[\"尽可能地使用let来代替var\"]},\"726\":{\"h\":\"接口\",\"t\":[\"起到一种规范和限制（约束）的作用： 属性类接口(对象类型接口)，函数类型接口，可索引接口\"]},\"727\":{\"h\":\"对象类型接口\",\"t\":[\"interface List { readonly id: number; name: string; // [x:string]: any // sex?: string } interface Result { data: List[] } function render(result: Result) { result.data.forEach(v => { console.log(v.id, v.name) }) } let result = { data: [ { id: 1, name: 'A', sex: 'male' }, { id: 2, name: 'B'} ] } render(result) // 假如直接用上述对象字面量就会报错， 可以加 as Result\"]},\"728\":{\"h\":\"可索引类型接口\"},\"729\":{\"h\":\"函数类型接口\"},\"730\":{\"h\":\"混合类型接口\"},\"731\":{\"h\":\"类类型接口\"},\"732\":{\"h\":\"接口继承接口\"},\"733\":{\"h\":\"接口继承类\"},\"734\":{\"h\":\"泛型\",\"t\":[\"不预先确定的数据类型，具体的类型在使用的时候确定\"]},\"735\":{\"h\":\"泛型变量\"},\"736\":{\"h\":\"函数\",\"t\":[\" var run = function():number { return 123; } function getInfo(name:string,age:number):string { return name + age; } // 方法的可选参数 // es5中方法的实参和形参可以不一样，但是ts中必须一样，如果不一样就需要配置可选参数 // 可选参数必须配置到参数的最后面！！！ function getInfo(name:string,age?:number):string { if(age) { return name + age; } else { return name; } } alert(getInfo('lipeng')) // 方法的默认参数 // es5中没法设置默认参数，es6和ts中可以设置默认参数 function getInfo(name:string, age:number = 20):string { if(age) { return name + age; } else { return name; } } alert(getInfo('lipeng')) // 方法的剩余参数 (三点运算符) function sum(a:number, b:number, c:number, d:number):number { return a+b+c+d; } function sum1(...result:[]):number { var sum = 0 result.forEach(function(num){ sum += num }) return sum; } sum1(1,2,44,5,7,8); // 方法的重载 // java中方法的重载：指的是两个或者两个以上同名函数，但它们的参数不一样，这时会出现函数重载的情况 // ts中的重载，通过为同一个函数提供多个函数类型定义来试下多种功能的目的 function getInfo(name:string):string; function getInfo(age:number):number; function getInfo(str:any):any { if(typeof str === 'string') { return str } else { return str + 10 } } // 箭头函数 // 箭头函数中的this指向上下文 setTimeout(() => { alert('num') },1000)\",\"使用enum 维护常量\",\" // 使用 const enum 维护常量 const enum TODO_STATUS { TODO = 'TODO', DONE = 'DONE', DOING = 'DOING' } function todos(status:TODO_STATUS):number[] { return [] }; todos(TODO_STATUS.TODO)\",\"使用 VS Code 有时会出现，使用 tsc 编译时产生的问题与 vs code 提示的问题不一致 找到项目右下角的 Typescript 字样，右侧显示它的版本号，可以点击选择 Use Workspace Version，它表示与项目依赖的 typescript 版本一致。 或者编辑 .vs-code/settings.json\",\" { \\\"typescript.tsdk\\\": \\\"node_modules/typescript/lib\\\" }\"]},\"737\":{\"h\":\"类\"},\"738\":{\"h\":\"代码检查\",\"t\":[\"两个方案：1、TSLint 2、ESLint + typescript-eslint-parser\",\"TSLint 的优点：\",\"专为 TypeScript 服务\",\"不受限于 ESLint 使用的语法树 ESTree\",\"能直接通过 tsconfig.json 中的配置编译整个项目，使得在一个文件中的类型定义能够联动到其他文件中的代码检查\",\"ESLint 的优点：\",\"基础规则比 TSLint 多很多\",\"社区繁荣，插件众多\"]},\"739\":{\"h\":\"1. 使用TSLint\",\"t\":[\" npm install --save-dev tslint // 创建配置文件 tslint.jsonp { \\\"rules\\\": { // 必须使用 === 或 !==，禁止使用 == 或 !=，与 null 比较时除外 \\\"triple-equals\\\": [ true, \\\"allow-null-check\\\" ] }, \\\"linterOptions\\\": { \\\"exclude\\\": [ \\\"**/node_modules/**\\\" ] } } // package.json中添加tslint脚本 { \\\"scripts\\\": { \\\"tslint\\\": \\\"tslint --project . src/**/*.ts src/**/*.tsx\\\", } } // 运行检查 npm run tslint\"]},\"740\":{\"h\":\"2. 使用ESLint\"},\"741\":{\"h\":\"基础概念\"},\"742\":{\"h\":\"变量\"},\"743\":{\"h\":\"关键字与保留字\"},\"744\":{\"h\":\"严格模式\"},\"745\":{\"h\":\"数据类型\"},\"746\":{\"h\":\"操作符\"},\"747\":{\"h\":\"语句\"},\"748\":{\"h\":\"数据结构\"},\"749\":{\"h\":\"数据类型\",\"t\":[\"相关定义\",\"动态：JavaScript 中的变量是没有类型的，与任何特定值类型没有任何关联，并且任何变量都可以分配（重新分配）所有类型的值\",\"解释型：\",\"弱类型：当操作涉及不匹配的类型是否，它将允许隐式类型转换，而不是抛出一个错误，对于 Symbol 和 BigInt，JavaScript 总是不允许某些隐式类型转换\",\"一个有趣的事实：任何JS代码片段在执行前都要进行编译（所以实际上也是一门 编译语言 ）；当你了解熟悉了 JS引擎、编译器、作用域 之间的关系配合之后，便对这么语言会有新的认识\"]},\"750\":{\"h\":\"内置类型（八种）\"},\"751\":{\"h\":\"基本数据类型\",\"t\":[\"Null\",\"Undefined\",\"Boolean\",\"Number\",\"String\",\"BigInt\",\"Symbol\"]},\"752\":{\"h\":\"引用数据类型\",\"t\":[\"Object\",\"Function\",\"Array\",\"Date\"]},\"753\":{\"h\":\"Null\",\"t\":[\"typeof null === 'object' // true /** * 如何判断null */ let a = null !a && typeof null === 'object'\"]},\"754\":{\"h\":\"Undefined\"},\"755\":{\"h\":\"Boolean\"},\"756\":{\"h\":\"Number\"},\"757\":{\"h\":\"BigInt\"},\"758\":{\"h\":\"String\"},\"759\":{\"h\":\"Symbol\",\"t\":[\"ES6 引入的 Symbol 是为了解决什么样的问题或者说是能解决什么样的问题？\",\"使得对象的属性具有唯一标识\"]},\"760\":{\"h\":\"Object\",\"t\":[\"注意\",\"注意区别JS的宿主浏览器中的对象（如BOM，DOM）与Object的区别，\",\"它们的行为可能跟Object的行为不一致，是不受ECMA的约束的\"]},\"761\":{\"h\":\"Function\",\"t\":[\"object的一个子类型，是可调用对象，内部属性[[call]]，该属性使其可以被调用\",\"函数对象的length属性是其声明的参数的个数\"]},\"762\":{\"h\":\"Array\",\"t\":[\"object的一个子类型\"]},\"763\":{\"h\":\"Date\"},\"764\":{\"h\":\"JSON\"},\"765\":{\"c\":[\"Fe Basic\"]},\"766\":{\"c\":[\"js\"]},\"767\":{\"h\":\"词法\"},\"768\":{\"h\":\"异步\"},\"769\":{\"h\":\"setTimeout + callback\"},\"770\":{\"h\":\"Generator\"},\"771\":{\"h\":\"Promise\"},\"772\":{\"h\":\"async await\"},\"773\":{\"h\":\"ES6\"},\"774\":{\"h\":\"什么是ECMAScript（这里后续都用ES代替）\",\"t\":[\"1991年 世界上第一个网页诞生（蒂姆·伯纳斯·李）\",\"1995年 Netscape 的 Brandan Eich 创造了JavaScript\",\"1996年 将该语言提交给了ECMA(国际标准化组织)想将其标准化\",\"ECMA发布了ECMA-262标准文件，将该语言称为ECMAScript(原因是JavaScript是被网景公司注册了的)\",\"所以ECMAScript是JavaScript的规格，而JavaScript算是ECMAScript的一种实现(还有JScript,ActionScript)；平时两词可互换\"]},\"775\":{\"h\":\"如何演变到现在的ES 6 版本\",\"t\":[\"1997年: ES 1.0\",\"1998年: ES 2.0\",\"1999年: ES 3.0 (成功的通行版本，其后的版本完全继承)\",\"2000年: ES 4.0 (未通过，太过激进，大部分内容放到了ES6)\",\"2007年: 预备发布4.0，依旧分歧太大\",\"2008年: 将部分功能改善的一小部分发布为ES 3.1, 会后不久改为ES 5; 激进的部分改为ESHarmony\",\"2009年12月: ES5正式发布\",\"2011年6月：ES5.1发布，成为国际标准\",\"2013年3月：ESHarmony分出来的可行的构想ES6草案冻结\",\"2013年12月: ES6发布\",\"2015年6月：ES6正式成为国际标准, ES2015\"]},\"776\":{\"h\":\"如何查看各浏览器/nodejs对ES6的支持度\",\"t\":[\"浏览器\",\"# 阮一峰写的一个工具 npm install -g es-checker es-checker\",\"nodejs\",\"# linux node --v8-options | grep harmony # windows node --v8-options | findstr harmony\",\"到目前（2024年）为止，ES6支持度应该还是蛮好的\"]},\"777\":{\"h\":\"如何处理ES6的兼容问题(即如何使用Babel转码器)\",\"t\":[\".babelrc\",\"从Babel 6.0开始不再提供浏览器版本，所以需要构建\",\"此外还可利用：在线转换、Traceur转码器\"]},\"778\":{\"h\":\"新版本ES7(请 )\"},\"779\":{\"h\":\"ES6新特性有哪些\"},\"780\":{\"h\":\"1. let 和 const\",\"t\":[\"{ let a = 1 var b = 2 } console.log(a) // ReferenceError console.log(b) // 2\",\"for (let i = 0; i < arr.length; i++) {} console.log(i) // ReferenceError\",\"/** * var 声明的变量 全局范围内有效 */ var a = [] for (var i = 0; i < 10; i++) { a[i] = function() { console.log(i) } } a[6]() // 10 /** * let 声明的变量 块级作用域内有效 */ var a = [] for (let i = 0; i < 10; i++) { a[i] = function() { console.log(i) } } a[6]() // 6\",\"/** * 不存在变量提升, typeof也不再是一个百分百安全的操作 */ console.log(foo) let foo = 2 typeof bar // ReferenceError let bar = 1\",\"/** * 暂时性死区 */\"]},\"781\":{\"h\":\"2. 变量的解构赋值\"},\"782\":{\"h\":\"3. 字符串扩展\"},\"783\":{\"h\":\"4. 正则的扩展\"},\"784\":{\"h\":\"5. 数值的扩展\"},\"785\":{\"h\":\"6. 数组的扩展\"},\"786\":{\"h\":\"7. 函数的扩展\"},\"787\":{\"h\":\"8. 对象的扩展\"},\"788\":{\"h\":\"9. Symbol\"},\"789\":{\"h\":\"10. Proxy和Reflect\"},\"790\":{\"h\":\"11. 二进制数组\"},\"791\":{\"h\":\"12. Set和Map数据结构\"},\"792\":{\"h\":\"13. Iterator和for of循环\"},\"793\":{\"h\":\"14. Generator函数\"},\"794\":{\"h\":\"15. Promise对象\"},\"795\":{\"h\":\"16. 异步操作和async函数\"},\"796\":{\"h\":\"17. Class\"},\"797\":{\"h\":\"18. 修饰器\"},\"798\":{\"h\":\"19. Module\"},\"799\":{\"h\":\"ES7\"},\"800\":{\"h\":\"ES8\"},\"801\":{\"h\":\"函数\"},\"802\":{\"h\":\"箭头函数\"},\"803\":{\"h\":\"IIFE\"},\"804\":{\"h\":\"原型\"},\"805\":{\"h\":\"原型链\"},\"806\":{\"h\":\"作用域\",\"t\":[\"一套存储变量用的设计良好规则，方便找到这些变量\"]},\"807\":{\"h\":\"this\"},\"808\":{\"h\":\"call\"},\"809\":{\"h\":\"apply\"},\"810\":{\"h\":\"闭包\"},\"811\":{\"h\":\"构建工具\"},\"812\":{\"h\":\"Webpack\"},\"813\":{\"h\":\"Vite\"},\"814\":{\"h\":\"两者的区别\"},\"815\":{\"h\":\"设计模式\",\"t\":[\"tips\",\"学习JS中的设计模式，需要基础核心知识扎实，才能理解并熟练使用\",\"作用域\",\"this\",\"call, apply\",\"闭包\",\"原型\",\"高阶函数\"]},\"816\":{\"h\":\"单例模式\"},\"817\":{\"h\":\"策略模式\"},\"818\":{\"h\":\"代理模式\"},\"819\":{\"h\":\"迭代器模式\"},\"820\":{\"h\":\"发布-订阅者模式/\"},\"821\":{\"h\":\"命令模式\"},\"822\":{\"h\":\"组合模式\"},\"823\":{\"h\":\"模板方法模式\"},\"824\":{\"h\":\"享元模式\"},\"825\":{\"h\":\"职责链模式\"},\"826\":{\"h\":\"中介者模式\"},\"827\":{\"h\":\"装饰者模式\"},\"828\":{\"h\":\"状态模式\"},\"829\":{\"h\":\"适配器模式\"},\"830\":{\"h\":\"设计原则\"},\"831\":{\"h\":\"单一职责\"},\"832\":{\"h\":\"最少知识\"},\"833\":{\"h\":\"开闭\"},\"834\":{\"h\":\"模块化\"},\"835\":{\"h\":\"CommonJS\"},\"836\":{\"h\":\"AMD\"},\"837\":{\"h\":\"CMD\"},\"838\":{\"h\":\"编程技巧\"},\"839\":{\"h\":\"接口与面向接口编程\"},\"840\":{\"h\":\"合理使用三元运算符\",\"t\":[\"简单条件下可以用\",\"复杂情况下不要用\",\"性能和代码量不是理由\"]},\"841\":{\"h\":\"合理使用链式调用\",\"t\":[\"链条稳定的简单的可以用\",\"假如链条容易发生变化还是使用普通调用\",\"变化的链条不方便调试\"]},\"842\":{\"h\":\"基础知识\"},\"843\":{\"h\":\"选择器\",\"t\":[\"/* 通配选择器 */ * { box-sizing: border-box; } /* 元素选择器 */ html,body,ul,li,ol,dl,dd,p { margin: 0; padding: 0; list-style: none; } /* id选择器 */ #selector-0 { width: 30px; height: 30px; background: green; } /* 类选择器 */ .frame { height: 500px; } .color { float: left; width: 100px; height: 100px; background: rgba(204, 91, 91); } .color-0 { float: left; width: 100px; height: 100px; background: rgba(204, 91, 91, 0.5); } .color-1 { float: left; width: 100px; height: 100px; background: rgba(204, 91, 91); opacity: 0.5; /* 影响子节点 */ } /* 主要应用在文本的多列布局方面 */ .colums-0 { width: 450px; columns: 150px 3; /* 默认是有gap的 */ column-gap: 0; } .flex { display: flex; }\"]},\"844\":{\"h\":\"疑难问题\"},\"845\":{\"h\":\"1. 在div进行css3动画时（translate,scale）容易发生字体变模糊的情况\",\"t\":[\"解答\",\"原因： transform变换会在浏览器上单独创建一个绘画层并重新进行渲染， 由于图层渲染的时候也处理了周围的文字， 如果高度为奇数的文字可能会存在半个像素的计算量， 浏览器对这半个像素会进行优化渲染，所以边缘会出现模糊的情况。 情形： // 奇数像素可能导致浏览器渲染失真 1. 字体size为奇数导致，如font-size: 13px; 处理方案：改为偶数 // transform移动后可能导致浏览器渲染失真 2. transform导致（使用transform的盒子为奇数） 处理方案：在模糊字体一级级往外找，在使用了transform的位置，把使用transform的盒子宽高改为奇数 3. 告诉浏览器如何渲染： // 浏览器强调渲染速度和几何精度的易读性。这会启用字距调整和可选的连字。 text-rendering: optimizeLegibility; \"]},\"846\":{\"h\":\"2.\"},\"847\":{\"h\":\"CSS\"},\"848\":{\"h\":\"核心知识点\",\"t\":[\"选择器\",\"盒模型、BFC\",\"过渡、动画\",\"flex\",\"grid\"]},\"849\":{\"h\":\"\"},\"850\":{\"h\":\"CSS预处理器\"},\"851\":{\"h\":\"\",\"t\":[\"现在都出到5.x了\"]},\"852\":{\"h\":\"布局\"},\"853\":{\"h\":\"早期：固定宽度布局\"},\"854\":{\"h\":\"早期：流式布局\",\"t\":[\"百分比等方式 \"]},\"855\":{\"h\":\"弹性布局\"},\"856\":{\"h\":\"响应式布局\",\"t\":[\"流体网格(Fluid Grids)\",\"灵活的图片(Flexible Images)\",\"媒体查询(Media Queries)\",\"下一代响应式Web设计：组件驱动式Web设计\"]},\"857\":{\"h\":\"Vue2.x\"},\"858\":{\"h\":\"\",\"t\":[\"各种不同的style\",\"<style>\",\"<style scoped>\",\"<style module>\",\"<style>插入<head>的顺序\",\"对单个组件，按照<style>出现的顺序插入<head> 遍历组件的子组件，依次对子组件执行步骤1，在开发时执行的顺序按照子组件在template中出现的顺序，生产构建时执行的顺序按照引入子组件的顺序\"]},\"859\":{\"h\":\"Q&A\"},\"860\":{\"h\":\"只有一个input时按enter键会触发submit\",\"t\":[\"<el-form :inline=\\\"true\\\" :model=\\\"searchForm\\\" class=\\\"memo-search-form\\\" @submit.prevent > <el-form-item> <el-input v-model=\\\"searchForm.keywords\\\" placeholder=\\\"关键字搜索\\\" clearable @keyup.enter=\\\"searchData\\\" /> </el-form-item> </el-form>\"]},\"861\":{\"h\":\"ts项目打包时有时候会报一些错误\",\"t\":[\"? expected : K extends `${infer N extends number}` ? T[N]\",\"这个可能是因为项目中的typescript版本比较低，不支持新的语法所致，更新版本可解决 这种问题，有时候需要关注一下\"]},\"862\":{\"h\":\"Vue3.x\"},\"863\":{\"h\":\"对比Vue2.x, Vue3.x变化在哪里\"},\"864\":{\"h\":\"diff算法\",\"t\":[\"Vue 2 递归双指针遍历diff算法，它会遍历新旧两个虚拟节点树的每一层，进行逐个对比。\",\"Vue 3 引入了 patch flag 的概念，并且对 diff 算法进行了优化，基于数组的动态规划的 diff 算法，比如在相同层级的元素间进行移动时，Vue 3 可以更高效地处理这种情况。\",\"具体的优化点包括：\",\"Vue 3 中会根据 patch flag 判断节点类型，如果是同类型节点则可以直接复用老节点的内容，只需对比新旧节点的 data 和 children 是否有变化。\",\"Vue 3 中使用了 Fragments，可以让多个节点复用同一个 DOM 元素，无需额外标签。\",\"// 假设的 Vue 2 diff 算法 function diff(oldTree, newTree) { // 遍历比较整个虚拟 DOM 树 // ... } // 假设的 Vue 3 diff 算法 function patch(oldNode, newNode) { const patchFlag = newNode.patchFlag; if (patchFlag === PATCH_FLAG_TYPE_TEXT) { // 文本节点，直接更新内容 oldNode.textContent = newNode.text; } else if (patchFlag === PATCH_FLAG_FULL_PROPS) { // 全新的属性，需要更新所有属性 // ... } else if (patchFlag === PATCH_FLAG_HYDRATE_EVENTS) { // 需要处理事件绑定 // ... } // ... }\",\"Vue3通常会更高效，因为它减少了不必要的 DOM 操作，并且对特定类型的更改做了优化处理。\"]},\"865\":{\"h\":\"架构部分\",\"t\":[\"TreeShaking TypeScript\"]},\"866\":{\"h\":\"新增特性\",\"t\":[\"framents\",\"模板支持多个根节点\",\"Teleport\",\"将我们的模板移动到 DOM 中 Vue app 之外的其他位置\",\"createRenderer\",\"Composition API\"]},\"867\":{\"h\":\"不兼容的change\",\"t\":[\"生命周期区别：\",\"Vue2.x:beforeDestroy, destroyed Vue3.x: beforeUnmount, unmounted\",\"1.Global API 全局 Vue API 已更改为使用应用程序实例 全局和内部 API 已经被重构为可 tree-shakable 2.模板指令 组件上 v-model 用法已更改 在同一元素上使用的 v-if 和 v-for 优先级已更改: 虽然Vue 3仍然允许在同一个元素上同时绑定v-for和v-if（‌尽管不推荐）‌，‌但执行顺序变为v-if优先于v-for v-bind=\\\"object\\\" 现在排序敏感 v-for 中的 ref 不再注册 ref 数组: 需要主动将 ref 绑定到一个更灵活的函数上 3.组件 只能使用普通函数创建功能组件 functional 属性在单文件组件 (SFC) 异步组件现在需要 defineAsyncComponent 方法来创建 4.渲染函数 渲染函数API改变 $scopedSlots property 已删除，所有插槽都通过 $slots 作为函数暴露 自定义指令 API 已更改为与组件生命周期一致 一些转换 class 被重命名了： 1.v-enter -> v-enter-from 2.v-leave -> v-leave-from 组件 watch 选项和实例方法 $watch 不再支持点分隔字符串路径，请改用计算函数作为参数 在 Vue 2.x 中，应用根容器的 outerHTML 将替换为根组件模板 (如果根组件没有模板/渲染选项，则最终编译为模板)。Vue3.x 现在使用应用程序容器的 innerHTML。 5.其他小改变 destroyed 生命周期选项被重命名为 unmounted beforeDestroy 生命周期选项被重命名为 beforeUnmount prop default工厂函数不再有权访问 this 是上下文 自定义指令 API 已更改为与组件生命周期一致 data 应始终声明为函数 来自 mixin 的 data 选项现在可简单地合并 attribute 强制策略已更改 一些过渡 class 被重命名 组建 watch 选项和实例方法 $watch 不再支持以点分隔的字符串路径。请改用计算属性函数作为参数。 <template> 没有特殊指令的标记 (v-if/else-if/else、v-for 或 v-slot) 现在被视为普通元素，并将生成原生的 <template> 元素，而不是渲染其内部内容。 在Vue 2.x 中，应用根容器的 outerHTML 将替换为根组件模板 (如果根组件没有模板/渲染选项，则最终编译为模板)。Vue 3.x 现在使用应用容器的 innerHTML，这意味着容器本身不再被视为模板的一部分。 5.移除 API keyCode 支持作为 v-on 的修饰符 $on ， $off 和 $once 实例方法 过滤 filter 内联模板 attribute $destroy 实例方法。用户不应再手动管理单个Vue 组件的生命周期。\"]},\"868\":{\"h\":\".env\",\"t\":[\".env.development和.env.production环境配置文件中变量名必须以VUE_APP_开头\"]},\"869\":{\"h\":\"深度选择器\",\"t\":[\"/deep/\",\"<style scoped> .parent /deep/ .child { } </style>\",\">>>\",\" <style scoped> .parent /deep/ .child { } </style>\",\"::v-deep\",\"v-deep()\",\":deep() {}\"]},\"870\":{\"h\":\"基础知识\"},\"871\":{\"h\":\"文档类型声明（doctype）\",\"t\":[\"声明指定当前文档的版本和风格：告诉浏览器使用哪种HTML版本(用什么文档类型规范来解析)来显示网页\",\"<!-- 位于文档中最前面的位置 --> <!DOCTYPE html> <!-- H5之前的文档类型声明 --> <!DOCTYPE html public \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://wwww.w3....\\\"> <!-- 命名空间：也就是规定哪些标记可以用 --> <html xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\"]},\"872\":{\"h\":\"基础标记(描述功能的符号)语法\",\"t\":[\"双标记（封闭类型标记）：<p></p>\",\"单标记/空标记（非封闭类型标记）：<br>\"]},\"873\":{\"h\":\"1. 基本结构标记\",\"t\":[\"html\",\"head\",\"头信息；用来包含文件的基本信息，比如网页的标题、关键字，在<head></head>内可以放<title></title>、<meta></meta>、<style></style>等标记\",\"title\",\"meta（页面元信息, 必须放在head里面） content属性是必须的，一般配合name， http-equiv属性\",\"link\",\"style\",\"body（主体部分）\",\"script\",\"文档注释： <!--这里是注释-->；注释不能嵌套\",\"注释不能嵌套\",\"不能再标记的尖括号之内\"]},\"874\":{\"h\":\"2. 格式标记\",\"t\":[\"div 分区显示标记，也称之为层标记；常用来编排一大段的HTML段落，也可以用于格式化表，和<p>很相似；层可以多层嵌套使用\",\"br 强制换行标记；让后面的文字、图片、表格等等，显示在下一行\",\"p 段落标记，换段落，由于多个空格和回车在HTML中会被等效为一个空格，所以HTML中要换段落就要用<p>,<p>段落中也可以包含<p>段落\",\"center 居中对齐标记: 让段落或者是文字相对于父标记居中显示\",\"pre 预格式化标记: 保留预先编排好的格式\",\"ul 无序列表标记：列表可以进行嵌套\",\"ol 有序列表标记： 列表可以进行嵌套；value：指定一个新的序列数字起始值\",\"li 列表项目标记: 每一个列表使用一个li标记\",\"<dl><dt><dd> 定义型列表；对列表条目进行简短的说明\",\"hr 水平分割线标记\"]},\"875\":{\"h\":\"3. 文本标记\",\"t\":[\"hn 标题标记；共有6个级别，n的范围 1-6，不同级别对应显示大小不同的标题，h1最大，h6最小\",\"font 字体设置标记；设置字体的格式 三个常用属性: <font size=\\\"14px\\\">;<font color=\\\"red\\\">;<font face=\\\"微软雅黑\\\">\",\"b 粗字体标记\",\"i 斜字体标记\",\"sub 文字下标字体标记\",\"sup 文字上标字体标记\",\"tt 打印机字体标记\",\"cite 引用方式的字体，通常是斜体\",\"em 表示强调，通常显示为斜体字\",\"strong 表示强调，通常显示为粗体字\",\"small 小型字体标记\",\"big 大型字体标记\",\"u 下划线字体标记\"]},\"876\":{\"h\":\"4. 图像标记\",\"t\":[\"img 单标记\"]},\"877\":{\"h\":\"5. 超链接\",\"t\":[\"a 标记\"]},\"878\":{\"h\":\"6. 表格\"},\"879\":{\"h\":\"7. 表单\"},\"880\":{\"h\":\"8. 框架集\",\"t\":[\"<html lang=\\\"zh\\\"> <head> <meta name=\\\"keywords\\\" content=\\\"value1,value2\\\"> <meta name=\\\"description\\\" content=\\\"这是一个网站\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1,user-scalable=no\\\"> <!-- http响应头设置，等价物 --> <meta http-equiv=\\\"content-type\\\" content=\\\"text/html;charset=utf-8\\\"> <!-- 这样写可以达到的效果是如果安装了GCF(Google Chrome Frame(谷歌内嵌浏览器框架GCF))，则使用GCF来渲染页面，如果未安装GCF，则使用最高版本的IE内核进行渲染 --> <!-- 像在360这种双核浏览器中 --> <meta http-equiv = \\\"X-UA-Compatible\\\" content = \\\"IE=edge,chrome=1\\\"> <title>页面名称</title> <link rel=\\\"stylesheet\\\" href=\\\"./common.css\\\"> <style> .app { border: 0; margin: 0; font-size: 12px; } </style> </head> <body> <div class=\\\"app\\\">App</div> <div> <p>这是一个段落<br>换行了<span>文本</span></p> <pre> a:111 b: 222 c: 333 d: 444 </pre> <hr> <ol type=\\\"1\\\"> <li></li> </ol> <ol type=\\\"A\\\"> <li></li> </ol> <ol type=\\\"a\\\"> <li></li> </ol> <ol type=\\\"I\\\"> <li></li> </ol> <ol type=\\\"i\\\"> <li></li> </ol> <dl> <dt>软件说明：</dt> <dd>简单介绍软件的功能及基本应用</dd> <dt>软件界面</dt> <dd>用于选择软件的外观</dd> </dl> </div> </body> </html>\"]},\"881\":{\"h\":\"元素\",\"t\":[\"元素： Element, 指标记及里面内容，整体性\"]},\"882\":{\"h\":\"1. 元素嵌套\"},\"883\":{\"h\":\"2. 属性和值\"},\"884\":{\"h\":\"字符实体\",\"t\":[\"显示结果\",\"描述\",\"实体名称\",\"实体编号\",\"空格\",\"&nbsp;\",\"&#160;\",\"<\",\"小于号\",\"&lt;\",\"&#60;\",\">\",\"大于号\",\"&gt;\",\"&#62;\",\"&\",\"和号\",\"&amp;\",\"&#38;\",\"\\\"\",\"引号\",\"&quot;\",\"&#34;\",\"'\",\"单引号\",\"&apos; (IE不支持)\",\"&#39;\",\"￠\",\"分\",\"&cent;\",\"&#162;\",\"£\",\"镑\",\"&pound;\",\"&#163;\",\"¥\",\"日圆\",\"&yen;\",\"&#165;\",\"€\",\"欧元\",\"&euro;\",\"&#8364;\",\"§\",\"小节\",\"&sect;\",\"&#167;\",\"©\",\"版权\",\"&copy;\",\"&#169;\",\"®\",\"注册商标\",\"&reg;\",\"&#174;\",\"™\",\"商标\",\"&trade;\",\"&#8482;\",\"×\",\"乘号\",\"&times;\",\"&#215;\",\"÷\",\"除号\",\"&divide;\",\"&#247;\"]},\"885\":{\"h\":\"示例\",\"t\":[\"tag.html\"]},\"886\":{\"h\":\"最佳实践\"},\"887\":{\"h\":\"\"},\"888\":{\"c\":[\"Fe basic\"]},\"889\":{\"c\":[\"html\"]},\"890\":{\"h\":\"H5新特性\"},\"891\":{\"h\":\"语义化标签\"},\"892\":{\"h\":\"表单增强\",\"t\":[\"涉及到表单，建议最好都用form，尽管不用原生的submit/reset，但方便结合表单验证或者其他三方库/框架使用\"]},\"893\":{\"h\":\"1. 新的inputtype\",\"t\":[\"常见\",\"text、password、radio、checkbox、button、reset、submit、image、file、hidden\",\"新增\",\"<!-- (1)number：显示一个数字输入框 --> <input type=\\\"number\\\" min=\\\"1\\\" max=\\\"9\\\" step=\\\"2\\\"/> <!-- (2)email：显示一个邮件地址输入框，提交时会进行格式验证，中间一个@符号，前后至少一个字符 --> <input type=\\\"email\\\"/> <!-- (3)url：显示一个URL地址输入框，提交时会进行格式验证，冒号前存在任意字符 --> <input type=\\\"url\\\"/> <!-- (4)tel：显示一个电话号码输入框，没有格式验证，仅在手机浏览器中弹出数字输入键盘 --> <input type=\\\"tel\\\"/> <!-- (5)search：显示搜索输入框，PC中Chrome下有X号；手机中弹出键盘右下角按钮显示文字“搜索” --> <input type=\\\"search\\\"/> <!-- (6)range：显示一个范围选择滑块，让用户在特定范围内选择一个整数值 --> <input type=\\\"range\\\" min=\\\"0\\\" max=\\\"255\\\" value=\\\"50\\\" step=\\\"5\\\"/> <!-- (7)color：显示一个颜色选择窗口，浏览器会调用操作系统提供颜色选择窗口，提交的是颜色值 --> <input type=\\\"color\\\"> <!-- (8)date：显示一个日期选择窗口，浏览器弹出一个日期选择窗口，不是DIV，不能定制样式 --> <input type=\\\"date\\\" min=\\\"1949/10/01\\\"> <!-- (9)month：显示一个月份选择器 --> <input type=\\\"month\\\"> <!-- (10)week：显示一个“星期/周”选择器 --> <input type=\\\"week\\\">\"]},\"894\":{\"h\":\"2. 新的表单元素\",\"t\":[\"<!-- (1)datalist：数据列表，为某个输入框提供输入建议 --> <datalist id=\\\"dish\\\"> <option>京酱肉丝</option> <option>鱼香肉丝</option> </datalist> <input list=\\\"dish\\\"> <!-- (2)progress：进度条，显示前进的进度提示条 --> <progress value=\\\"\\\"></progress> <!-- (3)meter：度量衡，刻度尺，使用不同的颜色标示出数据所处的区间 --> <!-- 最优值在上下限： 黄 - 绿 - 黄 最优值小于下限：绿 - 黄 - 红 最优值大于上限：红 - 黄 - 绿 --> <meter min=\\\"0\\\" low=\\\"30\\\" value=\\\"0\\\" high=\\\"70\\\" optimum=\\\"50\\\" max=\\\"100\\\"></meter> <!-- (4)output：输出值，用于表示数据的计算结果，是一个语义标签 --> <output for=\\\"price count\\\"></output>\"]},\"895\":{\"h\":\"3. 新的表单属性\",\"t\":[\"常见\",\"name、value、readonly、disabled、checked、for\",\"新增\",\"<!-- (1)placeholder：占位消息，为输入框中添加提示消息，注意：占位消息仅用作提示，与value属性根本不同，不能被提交 --> <input placeholder=\\\"提示性文字\\\"> <!-- (2)autofocus：自动获得焦点，标识了该属性的输入框会自动的获得输入焦点 --> <input autofocus> <!-- (3)multiple：多项，用于email和file输入框，允许其中输入多个值，用逗号分隔 --> <input type=\\\"email/file\\\" multiple> <!-- (4)autocomplete：自动完成，可取值on/off，指定输入域是否记录上一次提交的输入，下次输入时给予提示 --> <input autocomplete=\\\"off\\\"> <!-- (5)form：表单，指定当前输入域所属的表单的ID，可以将声明了form的输入框放到表单元素的外面，仍然可以一同被提交 --> <form id=\\\"formID\\\"></form> <input form=\\\"formID\\\"> <!-- =========与输入验证相关新属性======== --> <!-- (6)required：必填项，若没有输入则无法提交 --> <input required>提交时才会验证 <!-- (7)min：最小值，若输入值小于该值则无法提交 --> <input type=\\\"number/date\\\" min=\\\"18\\\"> <!-- (8)max：最大值，若输入值大于该值则无法提交 --> <input type=\\\"number/date\\\" max=\\\"60\\\"> <!-- (9)minlength：最小长度，若输入的字符串长度小于该值无法提交，此属性不是H5标准属性，FF不支持，Chrome支持 --> <input minlength=\\\"6\\\" required> <!-- (10)maxlength：最大长度，若输入的字符串长度大于该值无法提交 --> <input maxlength=\\\"9\\\"> <!-- (11)pattern：正则表达式样式，若输入的字符串不符合指定的正则表达式则无法提交 --> <input pattern=\\\"^1[3578]\\\\d{9}$\\\">\"]},\"896\":{\"h\":\"Canvas\"},\"897\":{\"h\":\"SVG\"},\"898\":{\"h\":\"Video, Audio\"},\"899\":{\"h\":\"WebWorker\"},\"900\":{\"h\":\"地理定位\"},\"901\":{\"h\":\"拖放API\"},\"902\":{\"h\":\"WebStorage\",\"t\":[\"已存在的\",\"cookie，Flash，Web Storage， IndexedDB\"]},\"903\":{\"h\":\"1. sessionStorage\"},\"904\":{\"h\":\"2. localStorage\",\"t\":[\"提示\",\"若localStorage中数据发生改变，所有已打开的当前网站的浏览器窗口，都会自动触发window.onstorage事件\"]},\"905\":{\"h\":\"HTML\",\"t\":[\"Hyper Text Markup Language\",\"Living Standards\"]},\"906\":{\"h\":\"HTML版本\",\"t\":[\"HTML4/4.01(SGML)\",\"标签允许不结束\",\"属性不用带引号\",\"标签属性可大写\",\"Boolean属性可省略值\",\"XHTML(XML)严格约束\",\"标签必须结束\",\"属性必须带引号\",\"标签属性必须小写\",\"Boolean属性必须写值\",\"HTML5(基于HTML4)\",\"为了实现更加简洁的代码\",\"- 标签允许不结束 - 属性不用带引号 - 标签属性可大写 (规范：用小写) - Boolean属性可省略值 \"]},\"907\":{\"h\":\"文件格式\",\"t\":[\".html\",\".htm\",\".xhtml\"]},\"908\":{\"h\":\"display\",\"t\":[\"设置元素的内外部显示类型\"]},\"909\":{\"h\":\"inline\",\"t\":[\"行内元素\",\"不会换行，与其它行内元素位于同一行，设置宽高不起作用，\",\"可设置左右margin，padding, 上下padding不会影响其它元素\",\"只能嵌套内联元素，不能嵌套块级元素\",\"多个空格会被合成一个空格\"]},\"910\":{\"h\":\"inline-block\",\"t\":[\"行内块元素\",\"具有block宽度高度特性，具有inline的同行特性\",\"【注意】strut\"]},\"911\":{\"h\":\"block\",\"t\":[\"块级元素\",\"独占一行\"]},\"912\":{\"h\":\"\",\"t\":[\"弹性伸缩盒\",\"flex布局中子元素的float、clear和vertical-align属性失效\",\"容器的属性： flex-flow --- flex-direction, flex-wrap, align-items, justify-content, align-content(用在多根轴线的情况下)\",\"子元素项目属性： order, align-self, flex --- flex-grow, flex-shrink, flex-basis\"]},\"913\":{\"h\":\"inline-flex\",\"t\":[\"内联块级弹性伸缩盒\"]},\"914\":{\"h\":\"grid\"},\"915\":{\"h\":\"inline-grid\"},\"916\":{\"h\":\"table\"},\"917\":{\"h\":\"none\",\"t\":[\"隐藏元素\",\"元素不会被显示，也不会占据文档空间\",\"【注意】当嵌套iframe时的\",\"MDN Docs\"]},\"918\":{\"h\":\"Less\"},\"919\":{\"c\":[\"css预处理\"]},\"920\":{\"h\":\"Sass\",\"t\":[\"这里说的是SCSS(CSS的扩展语法)，文件格式为 ++.scss++；不同于旧的Sass语法（older）,文件格式为 ++.sass++\",\"sass 与 scss 格式转换：前提安装了Sass sass-convert a.sass a.scss\",\".sass中不用 {} ，而是靠缩进来显示类及属性，使用的是缩进语法；eg：\",\"$font-stack: Helvetica, sans-serif $primary-color: #333 body font: 100% $font-stack color: $primary-color\",\"有些人会认为.sass更加简洁，写起来更加快速，不过因为玩过Less，SCSS看起来与CSS比较接近，我觉得还是SCSS总体看起来更加舒服，个人习惯问题而已\"]},\"921\":{\"h\":\"一、通常用法（入门，须完全掌握）\"},\"922\":{\"h\":\"1、变量声明（用$符，而less用@符）\",\"t\":[\"任何可以用作css属性值的赋值都 可以用作sass的变量值； 包括全局变量和局部变量\",\"$highlight-color: #F90; //普通变量值 $black-border: 1px solid black; // border的属性值作为变量值 $basic-font: Helvetica, sans-serif; // 带,的属性值作为变量值 p { color:$highlight-color; // 使用全局变量 $width: 1000px; // 局部变量 width: $width/2; // 使用局部变量 }\"]},\"923\":{\"h\":\"2、嵌套（和less一样）\",\"t\":[\"普通嵌套：\",\"nav { ul { margin: 0; padding: 0; list-style: none; } li { display: inline-block; } a { display: block; padding: 6px 12px; text-decoration: none; } }\",\"命名空间嵌套：\",\".funky { font: { family: fantasy; size: 30em; weight: bold; } } .funky { font: 20px/24px fantasy { weight: bold; } } /* 编译后 */ .funky { font-family: fantasy; font-size: 30em; font-weight: bold; } .funky { font: 20px/24px fantasy; font-weight: bold; }\"]},\"924\":{\"h\":\"3、导入css文件（partial）（@import）\",\"t\":[\"partial文件命名要注意：用下划线表示（这一点不像less，less文件命名没有如此要求，导入时，后缀可加可不加） 比如：_reset.scss\",\"@import \\\"reset\\\";\"]},\"925\":{\"h\":\"4、混合（mixin）\",\"t\":[\"用于css前缀的使用，是一种好的实践 需要用到@mixin,@include\",\"@mixin border-radius($radius) { -webkit-border-radius: $radius; -moz-border-radius: $radius; -ms-border-radius: $radius; border-radius: $radius; } .box { @include border-radius(10px); } /* 参数字符串为有引号的 */ @mixin firefox-message($selector) { body.firefox #{$selector}:before { content: \\\"Hi, Firefox users!\\\"; } } @include firefox-message(\\\".header\\\");\"]},\"926\":{\"h\":\"5、继承(@extend)\",\"t\":[\".message { border: 1px solid #ccc; padding: 10px; color: #333; } .success { @extend .message; border-color: green; } .error { @extend .message; border-color: red; } .warning { @extend .message; border-color: yellow; }\"]},\"927\":{\"h\":\"6、运算符\",\"t\":[\"用于css中的计算（比如在栅格布局中）\",\".container { width: 100%; } article[role=\\\"main\\\"] { float: left; width: 600px / 960px * 100%; } aside[role=\\\"complementary\\\"] { float: right; width: 300px / 960px * 100%; } p { font: 10px/8px; // Plain CSS, no division $width: 1000px; width: $width/2; // Uses a variable, does division width: round(1.5)/2; // Uses a function, does division height: (500px/2); // Uses parentheses, does division margin-left: 5px + 8px/2px; // Uses +, does division font: (italic bold 10px/8px); // 在一个list中, 圆括号中的不会被计算 color: #010203 + #040506; //颜色计算；color: #050709; //color: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75); // rgba(255, 255, 0, 0.75); } span { $font-size: 12px; $line-height: 30px; font: #{$font-size}/#{$line-height}; } /* * opacify和transparentize方法 **/ $translucent-red: rgba(255, 0, 0, 0.5); .color { color: opacify($translucent-red, 0.3); background-color: transparentize($translucent-red, 0.25); }\"]},\"928\":{\"h\":\"7、&选择器\",\"t\":[\"代替父选择器；可以深层次嵌套；可以通过“-”进行组合成选择器\",\"a { font-weight: bold; text-decoration: none; &:hover { text-decoration: underline; } body.firefox & { font-weight: normal; } } #main { color: black; a { font-weight: bold; &:hover { color: red; } } } #main { color: black; &-sidebar { border: 1px solid; } }\"]},\"929\":{\"h\":\"8、注释\",\"t\":[\"多行注释，单行注释\",\"/* This comment is * several lines long. * since it uses the CSS comment syntax, * it will appear in the CSS output. */ body { color: black; } // These comments are only one line long each. // They won't appear in the CSS output, // since they use the single-line comment syntax. a { color: green; } /* 注释使用变量 */ $version: \\\"1.2.3\\\"; /* This CSS is generated by My Snazzy Framework version #{$version}. */ /* 编译后 */ /* This CSS is generated by My Snazzy Framework version 1.2.3. */\"]},\"930\":{\"h\":\"9、@function (函数)\",\"t\":[\"$grid-width: 40px; $gutter-width: 10px; @function grid-width($n) { @return $n * $grid-width + ($n - 1) * $gutter-width; } #sidebar { width: grid-width(5); } // 240px\"]},\"931\":{\"h\":\"二、高级用法（进阶，尽可能掌握）\"},\"932\":{\"h\":\"1、SassScript\",\"t\":[\"像 $ , @mixin 等等都是脚本\",\"部分知识在上述入门中已经有例子\"]},\"933\":{\"h\":\"1.1、\",\"t\":[\"p:before { content: \\\"Foo \\\" + Bar; font-family: sans- + \\\"serif\\\"; }\"]},\"934\":{\"h\":\"1.2、控制语句\"},\"935\":{\"h\":\"三、使用技巧\"},\"936\":{\"h\":\"1、\"},\"937\":{\"h\":\"2、\"},\"938\":{\"c\":[\"css预处理\"]},\"939\":{\"h\":\"Stylus\"},\"940\":{\"c\":[\"css预处理\"]},\"941\":{\"h\":\"前端规范\"},\"942\":{\"h\":\"命名\",\"t\":[\"命名的过程本身就是一个抽象和思考的过程，当我们不能给一个模块、一个对象、一个函数，甚至一个变量找到合适的名称的时候，往往说明我们对问题的理解还不够透彻，需要重新去挖掘问题的本质，对问题域进行重新分析和抽象，有时还要调整设计和重构代码。因此，好的命名是写出好代码的基础。\"]},\"943\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"944\":{\"h\":\"Others\"},\"945\":{\"h\":\"Hobbies\"},\"946\":{\"h\":\"Tools\"},\"947\":{\"h\":\"TS\"},\"948\":{\"h\":\"Frames\"},\"949\":{\"h\":\"Basic\"},\"950\":{\"h\":\"Core\"},\"951\":{\"h\":\"Senior\"},\"952\":{\"h\":\"Properties\"}},\"dirtCount\":0,\"index\":[[\"好的命名是写出好代码的基础\",{\"1\":{\"942\":1}}],[\"好处\",{\"1\":{\"720\":1}}],[\"往往说明我们对问题的理解还不够透彻\",{\"1\":{\"942\":1}}],[\"往abc\",{\"1\":{\"445\":1}}],[\"圆括号中的不会被计算\",{\"1\":{\"927\":1}}],[\"参数字符串为有引号的\",{\"1\":{\"925\":1}}],[\"嵌套\",{\"0\":{\"923\":1}}],[\"嵌入式\",{\"1\":{\"405\":1}}],[\"嵌入式操作系统\",{\"0\":{\"130\":1}}],[\"局部变量\",{\"1\":{\"922\":1}}],[\"局部性原理\",{\"1\":{\"53\":1}}],[\"普通嵌套\",{\"1\":{\"923\":1}}],[\"普通变量值\",{\"1\":{\"922\":1}}],[\"普通图层\",{\"1\":{\"157\":1}}],[\"须完全掌握\",{\"0\":{\"921\":1}}],[\"入门\",{\"0\":{\"921\":1}}],[\"我觉得还是scss总体看起来更加舒服\",{\"1\":{\"920\":1}}],[\"我们需要使用接口和抽象类\",{\"1\":{\"336\":1}}],[\"我们使用了一个访问者类\",{\"1\":{\"325\":1}}],[\"我们创建表示各种策略的对象和一个行为随着策略对象改变而改变的\",{\"1\":{\"323\":1}}],[\"我们创建表示各种状态的对象和一个行为随着状态对象改变而改变的\",{\"1\":{\"321\":1}}],[\"我们创建一个指定各种要执行的操作的抽象类和扩展该类的实体类\",{\"1\":{\"322\":1}}],[\"我们创建具有现有对象的对象\",{\"1\":{\"313\":1}}],[\"我们也需要跟踪与之相关联的对象\",{\"1\":{\"318\":1}}],[\"我们可以在访问此对象时加上一个对此对象的访问层\",{\"1\":{\"313\":1}}],[\"我们可以缓存该对象\",{\"1\":{\"306\":1}}],[\"我们把其中共同的部分抽象出来\",{\"1\":{\"312\":1}}],[\"我们将通过创建\",{\"1\":{\"312\":1}}],[\"我们将把一个形状装饰上不同的颜色\",{\"1\":{\"310\":1}}],[\"我们为了扩展一个类经常使用继承方式实现\",{\"1\":{\"310\":1}}],[\"我们通过下面的实例来演示装饰器模式的用法\",{\"1\":{\"310\":1}}],[\"我们通过下面的实例来演示组合模式的用法\",{\"1\":{\"309\":1}}],[\"我们通过下面的实例来演示桥接模式\",{\"1\":{\"307\":1}}],[\"我们要添加三种形状\",{\"1\":{\"306\":1}}],[\"我们在创建对象时不会对客户端暴露创建逻辑\",{\"1\":{\"303\":1}}],[\"我们明确地计划不同条件下创建不同实例时\",{\"1\":{\"286\":1,\"303\":1}}],[\"格式转换\",{\"1\":{\"920\":1}}],[\"格式标记\",{\"0\":{\"874\":1}}],[\"独占一行\",{\"1\":{\"911\":1}}],[\"独立对象之间相互沟通\",{\"1\":{\"281\":1}}],[\"块级元素\",{\"1\":{\"911\":1}}],[\"块级作用域内有效\",{\"1\":{\"780\":1}}],[\"行内块元素\",{\"1\":{\"910\":1}}],[\"行内元素\",{\"1\":{\"909\":1}}],[\"行为由父类控制\",{\"1\":{\"324\":1}}],[\"行为随状态改变而改变的场景\",{\"1\":{\"321\":1}}],[\"行为实现者\",{\"1\":{\"315\":1}}],[\"行为请求者\",{\"1\":{\"315\":1}}],[\"行为请求者与行为实现者通常是一种紧耦合的关系\",{\"1\":{\"315\":1}}],[\"行为型模式behavioral\",{\"0\":{\"281\":1}}],[\"行为设计模式\",{\"0\":{\"281\":1}}],[\"规范\",{\"1\":{\"906\":1}}],[\"规则\",{\"1\":{\"316\":2}}],[\"严格约束\",{\"1\":{\"906\":1}}],[\"严格模式\",{\"0\":{\"744\":1}}],[\"拖放api\",{\"0\":{\"901\":1}}],[\"此属性不是h5标准属性\",{\"1\":{\"895\":1}}],[\"此外还可利用\",{\"1\":{\"777\":1}}],[\"仍然可以一同被提交\",{\"1\":{\"895\":1}}],[\"仍需考虑原生开发或者是其他更适合的框架\",{\"1\":{\"709\":1}}],[\"占位消息仅用作提示\",{\"1\":{\"895\":1}}],[\"占位消息\",{\"1\":{\"895\":1}}],[\"绿\",{\"1\":{\"894\":3}}],[\"黄\",{\"1\":{\"894\":4}}],[\"刻度尺\",{\"1\":{\"894\":1}}],[\"度量衡\",{\"1\":{\"894\":1}}],[\"周\",{\"1\":{\"893\":1}}],[\"星期\",{\"1\":{\"893\":1}}],[\"手机中弹出键盘右下角按钮显示文字\",{\"1\":{\"893\":1}}],[\"手动修改jdk位置\",{\"1\":{\"627\":1}}],[\"仅在手机浏览器中弹出数字输入键盘\",{\"1\":{\"893\":1}}],[\"仅需按照最近使用过的类\",{\"1\":{\"596\":1}}],[\"冒号前存在任意字符\",{\"1\":{\"893\":1}}],[\"冒泡排序\",{\"0\":{\"251\":1},\"1\":{\"251\":1}}],[\"涉及到表单\",{\"1\":{\"892\":1}}],[\"示例\",{\"0\":{\"885\":1}}],[\"÷\",{\"1\":{\"884\":1}}],[\"乘号\",{\"1\":{\"884\":1}}],[\"乘2取整法\",{\"1\":{\"64\":1}}],[\"×\",{\"1\":{\"884\":1}}],[\"商标\",{\"1\":{\"884\":1}}],[\"商务男装\",{\"1\":{\"304\":1}}],[\"™\",{\"1\":{\"884\":1}}],[\"®\",{\"1\":{\"884\":1}}],[\"©\",{\"1\":{\"884\":1}}],[\"欧元\",{\"1\":{\"884\":1}}],[\"€\",{\"1\":{\"884\":1}}],[\"日圆\",{\"1\":{\"884\":1}}],[\"日志记录器\",{\"1\":{\"286\":1,\"303\":1}}],[\"¥\",{\"1\":{\"884\":1}}],[\"镑\",{\"1\":{\"884\":1}}],[\"£\",{\"1\":{\"884\":1}}],[\"￠\",{\"1\":{\"884\":1}}],[\"谷歌内嵌浏览器框架gcf\",{\"1\":{\"880\":1}}],[\"斜字体标记\",{\"1\":{\"875\":1}}],[\"粗字体标记\",{\"1\":{\"875\":1}}],[\"粗粒度对象\",{\"1\":{\"328\":1}}],[\"列表项目标记\",{\"1\":{\"874\":1}}],[\"列表可以进行嵌套\",{\"1\":{\"874\":2}}],[\"列表是当作一个数据库\",{\"1\":{\"329\":1,\"333\":1}}],[\"居中对齐标记\",{\"1\":{\"874\":1}}],[\"段落标记\",{\"1\":{\"874\":1}}],[\"段页式存储管理\",{\"0\":{\"521\":1}}],[\"层可以多层嵌套使用\",{\"1\":{\"874\":1}}],[\"层次结构\",{\"0\":{\"52\":1}}],[\"头信息\",{\"1\":{\"873\":1}}],[\"封闭类型标记\",{\"1\":{\"872\":1}}],[\"封装变化\",{\"1\":{\"336\":1}}],[\"封装不变部分\",{\"1\":{\"324\":1}}],[\"封装了转换规则\",{\"1\":{\"321\":1}}],[\"告诉浏览器使用哪种html版本\",{\"1\":{\"871\":1}}],[\"告诉浏览器如何渲染\",{\"1\":{\"845\":1}}],[\"被重命名\",{\"1\":{\"867\":1}}],[\"被重命名了\",{\"1\":{\"867\":1}}],[\"被多次实例化\",{\"1\":{\"305\":1}}],[\"绑定到一个更灵活的函数上\",{\"1\":{\"867\":1}}],[\"已存在的\",{\"1\":{\"902\":1}}],[\"已更改为与组件生命周期一致\",{\"1\":{\"867\":2}}],[\"已更改为使用应用程序实例\",{\"1\":{\"867\":1}}],[\"已删除\",{\"1\":{\"867\":1}}],[\"已经被重构为可\",{\"1\":{\"867\":1}}],[\"递归双指针遍历diff算法\",{\"1\":{\"864\":1}}],[\"媒体查询\",{\"1\":{\"856\":1}}],[\"响应式布局\",{\"0\":{\"856\":1}}],[\"响应处理\",{\"1\":{\"36\":1}}],[\"百分比等方式\",{\"1\":{\"854\":1}}],[\"流体网格\",{\"1\":{\"856\":1}}],[\"流式布局\",{\"0\":{\"854\":1}}],[\"流水线加速比\",{\"1\":{\"49\":1}}],[\"流水线吞吐率\",{\"1\":{\"49\":1}}],[\"流水线执行时间\",{\"1\":{\"49\":1}}],[\"流水线周期\",{\"1\":{\"49\":1}}],[\"流水线技术\",{\"1\":{\"49\":1}}],[\"流水线\",{\"0\":{\"49\":1}}],[\"早期\",{\"0\":{\"853\":1,\"854\":1}}],[\"早期的软件主要就是指程序\",{\"1\":{\"21\":1}}],[\"盒模型\",{\"1\":{\"848\":1}}],[\"情形\",{\"1\":{\"845\":1}}],[\"情况下不需要同步\",{\"1\":{\"305\":1}}],[\"影响子节点\",{\"1\":{\"843\":1}}],[\"影视动画\",{\"1\":{\"146\":1}}],[\"订阅者模式\",{\"0\":{\"820\":1}}],[\"声明指定当前文档的版本和风格\",{\"1\":{\"871\":1}}],[\"声明的变量\",{\"1\":{\"780\":2}}],[\"声明变量存在提升\",{\"1\":{\"704\":1}}],[\"阮一峰写的一个工具\",{\"1\":{\"776\":1}}],[\"激进的部分改为esharmony\",{\"1\":{\"775\":1}}],[\"太过激进\",{\"1\":{\"775\":1}}],[\"成为国际标准\",{\"1\":{\"775\":1}}],[\"成功的通行版本\",{\"1\":{\"775\":1}}],[\"成套\",{\"1\":{\"304\":3}}],[\"平时两词可互换\",{\"1\":{\"774\":1}}],[\"平均复杂度tavg\",{\"1\":{\"240\":1}}],[\"平均故障间隔时间\",{\"1\":{\"77\":1}}],[\"平均故障修复时间\",{\"1\":{\"77\":1}}],[\"平均无故障时间\",{\"1\":{\"77\":1}}],[\"国际标准化组织\",{\"1\":{\"774\":1}}],[\"国内镜像源地址\",{\"0\":{\"545\":1}}],[\"李\",{\"1\":{\"774\":1}}],[\"伯纳斯\",{\"1\":{\"774\":1}}],[\"蒂姆\",{\"1\":{\"774\":1}}],[\"世界上第一个网页诞生\",{\"1\":{\"774\":1}}],[\"世界是由一组被称为实体的基本对象和这些对象的联系构成的\",{\"1\":{\"93\":1}}],[\"什么是ecmascript\",{\"0\":{\"774\":1}}],[\"禁止使用\",{\"1\":{\"739\":1}}],[\"社区繁荣\",{\"1\":{\"738\":1}}],[\"找到项目右下角的\",{\"1\":{\"736\":1}}],[\"找不到进程时\",{\"1\":{\"480\":1}}],[\"维护常量\",{\"1\":{\"736\":2}}],[\"箭头函数中的this指向上下文\",{\"1\":{\"736\":1}}],[\"箭头函数\",{\"0\":{\"802\":1},\"1\":{\"736\":1}}],[\"混合\",{\"0\":{\"925\":1}}],[\"混合类型接口\",{\"0\":{\"730\":1}}],[\"混入\",{\"0\":{\"654\":1}}],[\"约束\",{\"1\":{\"726\":1}}],[\"尽可能掌握\",{\"0\":{\"931\":1}}],[\"尽可能地使用let来代替var\",{\"1\":{\"725\":1}}],[\"尽管不用原生的submit\",{\"1\":{\"892\":1}}],[\"尽量用自然语言中含义清楚的单次来表示它的每一个值\",{\"1\":{\"724\":1}}],[\"尽量不缩写\",{\"1\":{\"613\":1}}],[\"尽量将臃肿庞大的接口拆分成更小的和更具体的接口\",{\"1\":{\"340\":1}}],[\"考虑到某一变量可能取得值\",{\"1\":{\"724\":1}}],[\"考虑到为某个服务查找\",{\"1\":{\"332\":1}}],[\"能直接通过\",{\"1\":{\"738\":1}}],[\"能在程序中用自然语言中有相应含义的单词来代表某一状态\",{\"1\":{\"724\":1}}],[\"能够节省开发成本和时间\",{\"1\":{\"709\":1}}],[\"能够恢复到他原先的状态\",{\"1\":{\"319\":1}}],[\"能够在多线程中很好的工作\",{\"1\":{\"305\":1}}],[\"泛型变量\",{\"0\":{\"735\":1}}],[\"泛型\",{\"0\":{\"734\":1}}],[\"泛型接口\",{\"1\":{\"724\":1}}],[\"泛web容器技术\",{\"1\":{\"396\":1}}],[\"`$\",{\"1\":{\"861\":1}}],[\"`\",{\"1\":{\"724\":1,\"861\":1}}],[\"`hello\",{\"1\":{\"724\":1}}],[\"`gene`\",{\"1\":{\"724\":1}}],[\"```txt\",{\"1\":{\"308\":1,\"320\":1,\"321\":1,\"332\":1}}],[\"```java\",{\"1\":{\"308\":1,\"310\":1,\"319\":3,\"321\":2,\"322\":1,\"326\":1,\"329\":1,\"332\":2}}],[\"监视\",{\"1\":{\"721\":1}}],[\"监控\",{\"0\":{\"383\":1}}],[\"弱类型\",{\"1\":{\"720\":1,\"749\":1}}],[\"弱实体\",{\"1\":{\"94\":1}}],[\"遵循最新规范\",{\"1\":{\"719\":1}}],[\"便对这么语言会有新的认识\",{\"1\":{\"749\":1}}],[\"便开始解析页面和加载子资源\",{\"1\":{\"706\":1}}],[\"便于开发\",{\"1\":{\"627\":1}}],[\"便于维护\",{\"1\":{\"324\":1}}],[\"便于控制细节风险\",{\"1\":{\"285\":1}}],[\"继续\",{\"1\":{\"706\":1}}],[\"继承重写都不合适\",{\"1\":{\"311\":1}}],[\"继承\",{\"0\":{\"652\":1,\"926\":1},\"1\":{\"306\":1,\"673\":1}}],[\"继承或依赖\",{\"1\":{\"284\":1}}],[\"渲染选项\",{\"1\":{\"867\":2}}],[\"渲染函数api改变\",{\"1\":{\"867\":1}}],[\"渲染函数\",{\"1\":{\"867\":1}}],[\"渲染流程\",{\"0\":{\"705\":1}}],[\"渲染进程接收完文档后\",{\"1\":{\"706\":1}}],[\"渲染进程在文档传输完成后\",{\"1\":{\"706\":1}}],[\"渲染进程\",{\"1\":{\"693\":1,\"706\":2}}],[\"越拆越多\",{\"1\":{\"693\":1}}],[\"越有利于检错和纠错\",{\"1\":{\"71\":1}}],[\"悟道\",{\"1\":{\"679\":1}}],[\"忍者秘籍\",{\"1\":{\"678\":1}}],[\"浏览器弹出一个日期选择窗口\",{\"1\":{\"893\":1}}],[\"浏览器会调用操作系统提供颜色选择窗口\",{\"1\":{\"893\":1}}],[\"浏览器强调渲染速度和几何精度的易读性\",{\"1\":{\"845\":1}}],[\"浏览器对这半个像素会进行优化渲染\",{\"1\":{\"845\":1}}],[\"浏览器根据contenttype做不同的响应\",{\"1\":{\"706\":1}}],[\"浏览器进程\",{\"1\":{\"706\":1}}],[\"浏览器api\",{\"0\":{\"700\":1}}],[\"浏览器安全\",{\"0\":{\"699\":1}}],[\"浏览器中的js执行机制\",{\"0\":{\"696\":1}}],[\"浏览器主进程准备\",{\"1\":{\"706\":1}}],[\"浏览器主进程处理用户在地址栏中输入的内容\",{\"1\":{\"706\":1}}],[\"浏览器主进程\",{\"1\":{\"693\":1}}],[\"浏览器渲染原理\",{\"0\":{\"691\":1}}],[\"浏览器\",{\"1\":{\"674\":1,\"776\":1}}],[\"宿主\",{\"1\":{\"674\":1}}],[\"垃圾回收\",{\"1\":{\"673\":1}}],[\"异步组件现在需要\",{\"1\":{\"867\":1}}],[\"异步操作和async函数\",{\"0\":{\"795\":1}}],[\"异步\",{\"0\":{\"768\":1},\"1\":{\"673\":1}}],[\"异常\",{\"1\":{\"36\":1}}],[\"闭包\",{\"0\":{\"810\":1},\"1\":{\"673\":1,\"815\":1}}],[\"闭合路径\",{\"1\":{\"145\":1}}],[\"词法\",{\"0\":{\"767\":1},\"1\":{\"672\":1}}],[\"词法分析\",{\"1\":{\"271\":1}}],[\"柯里化\",{\"1\":{\"672\":1}}],[\"候选\",{\"1\":{\"671\":1}}],[\"草案\",{\"1\":{\"671\":1}}],[\"征求意见\",{\"1\":{\"671\":1}}],[\"展示\",{\"1\":{\"671\":1}}],[\"写起来更加快速\",{\"1\":{\"920\":1}}],[\"写出来\",{\"1\":{\"670\":1}}],[\"写出来的系统\",{\"1\":{\"670\":1}}],[\"写成的程序在执行时耗费时间的长度\",{\"1\":{\"240\":1}}],[\"写成的程序在执行时占用存储单元的长度\",{\"1\":{\"240\":1}}],[\"凡是能用\",{\"1\":{\"670\":1}}],[\"未通过\",{\"1\":{\"775\":1}}],[\"未处理onecellanchor\",{\"0\":{\"667\":1}}],[\"未add操作的\",{\"1\":{\"420\":1}}],[\"疑难问题\",{\"0\":{\"665\":1,\"844\":1}}],[\"检查工具\",{\"1\":{\"657\":1}}],[\"○\",{\"1\":{\"655\":2}}],[\"布尔不是\",{\"1\":{\"724\":1}}],[\"布尔类型\",{\"1\":{\"724\":1}}],[\"布尔值\",{\"1\":{\"647\":1}}],[\"布局\",{\"0\":{\"852\":1},\"1\":{\"613\":1}}],[\"甚至一个变量找到合适的名称的时候\",{\"1\":{\"942\":1}}],[\"甚至数字\",{\"1\":{\"647\":1}}],[\"甚至对于一个家庭来说\",{\"1\":{\"304\":1}}],[\"隔离区\",{\"1\":{\"645\":1}}],[\"支持作为\",{\"1\":{\"867\":1}}],[\"支持有状态的热重载\",{\"1\":{\"643\":1}}],[\"支票在市场交易中用来代替现金\",{\"1\":{\"313\":1}}],[\"尝试调整jdk版本\",{\"1\":{\"638\":1}}],[\"阿里maven\",{\"1\":{\"637\":1}}],[\"阿里云\",{\"1\":{\"545\":1}}],[\"阿里云oss\",{\"0\":{\"378\":1}}],[\"腾讯maven\",{\"1\":{\"637\":1}}],[\"腾讯云cos服务\",{\"0\":{\"380\":1}}],[\"麻烦一些\",{\"1\":{\"637\":1}}],[\"贝壳公司一整套设计体系\",{\"1\":{\"635\":1}}],[\"环境\",{\"1\":{\"627\":1}}],[\"环境变量变了\",{\"1\":{\"627\":1}}],[\"毕竟国内\",{\"1\":{\"627\":1}}],[\"底层图像渲染引擎\",{\"1\":{\"624\":1}}],[\"补丁\",{\"1\":{\"613\":1}}],[\"补码\",{\"1\":{\"69\":2}}],[\"专为\",{\"1\":{\"738\":1}}],[\"专栏\",{\"1\":{\"613\":1}}],[\"专用寄存器\",{\"1\":{\"37\":1}}],[\"除号\",{\"1\":{\"884\":1}}],[\"除非进行强制类型转换\",{\"1\":{\"720\":1}}],[\"除非一看就明白的单词\",{\"1\":{\"613\":1}}],[\"除应用层api之外\",{\"1\":{\"1\":1}}],[\"摘要\",{\"1\":{\"612\":1}}],[\"边导航\",{\"1\":{\"612\":1}}],[\"顶导航\",{\"1\":{\"612\":1}}],[\"容易发生字体变模糊的情况\",{\"0\":{\"845\":1}}],[\"容易陷入重复性劳动\",{\"1\":{\"388\":1}}],[\"容器的属性\",{\"1\":{\"912\":1}}],[\"容器\",{\"1\":{\"612\":1}}],[\"登陆\",{\"1\":{\"612\":1}}],[\"登录条\",{\"1\":{\"610\":1,\"612\":1}}],[\"登记式\",{\"1\":{\"305\":1}}],[\"尾\",{\"1\":{\"610\":1}}],[\"尾数\",{\"1\":{\"68\":2}}],[\"投票\",{\"1\":{\"610\":1,\"612\":1}}],[\"注释使用变量\",{\"1\":{\"929\":1}}],[\"注释不能嵌套\",{\"1\":{\"873\":2}}],[\"注释\",{\"0\":{\"929\":1},\"1\":{\"612\":1}}],[\"注释的写法\",{\"0\":{\"611\":1}}],[\"注册商标\",{\"1\":{\"884\":1}}],[\"注册\",{\"1\":{\"610\":1,\"612\":1}}],[\"注意区别js的宿主浏览器中的对象\",{\"1\":{\"760\":1}}],[\"注意各端的管理规则\",{\"0\":{\"711\":1}}],[\"注意版本\",{\"1\":{\"451\":1}}],[\"注意cd\",{\"1\":{\"445\":1}}],[\"注意划分外部状态和内部状态\",{\"1\":{\"312\":1}}],[\"注意\",{\"1\":{\"305\":1,\"628\":1,\"760\":1,\"895\":1,\"910\":1,\"917\":1}}],[\"注意事项\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1,\"613\":1}}],[\"友情链接\",{\"1\":{\"610\":1,\"612\":1}}],[\"版\",{\"1\":{\"677\":1,\"678\":1,\"679\":1}}],[\"版面\",{\"1\":{\"613\":1}}],[\"版权\",{\"1\":{\"610\":1,\"612\":1,\"884\":1}}],[\"版本一致\",{\"1\":{\"736\":1}}],[\"版本太新2\",{\"1\":{\"436\":1}}],[\"版本\",{\"0\":{\"775\":1},\"1\":{\"305\":2}}],[\"滚动\",{\"1\":{\"610\":1,\"612\":1}}],[\"页尾\",{\"1\":{\"612\":1}}],[\"页头\",{\"1\":{\"612\":1}}],[\"页面元信息\",{\"1\":{\"873\":1}}],[\"页面生成完成渲染进程会通知主进程\",{\"1\":{\"706\":1}}],[\"页面结构\",{\"0\":{\"712\":1},\"1\":{\"612\":1}}],[\"页面外围控制整体布局宽度\",{\"1\":{\"610\":1,\"612\":1}}],[\"页面主体\",{\"1\":{\"610\":1,\"612\":1}}],[\"页脚\",{\"1\":{\"610\":1}}],[\"菜单\",{\"1\":{\"610\":1,\"612\":1,\"721\":1}}],[\"菜单栏\",{\"1\":{\"133\":1,\"169\":1}}],[\"热点\",{\"1\":{\"610\":1,\"612\":1}}],[\"广告\",{\"1\":{\"610\":1,\"612\":1}}],[\"广义表\",{\"0\":{\"350\":1},\"1\":{\"364\":1}}],[\"标签属性必须小写\",{\"1\":{\"906\":1}}],[\"标签属性可大写\",{\"1\":{\"906\":2}}],[\"标签必须结束\",{\"1\":{\"906\":1}}],[\"标签允许不结束\",{\"1\":{\"906\":2}}],[\"标签页\",{\"1\":{\"610\":1,\"612\":1}}],[\"标识了该属性的输入框会自动的获得输入焦点\",{\"1\":{\"895\":1}}],[\"标记\",{\"1\":{\"877\":1}}],[\"标题标记\",{\"1\":{\"875\":1}}],[\"标题栏样式\",{\"1\":{\"613\":1}}],[\"标题栏+画布\",{\"1\":{\"133\":1,\"169\":1}}],[\"标题\",{\"1\":{\"612\":2}}],[\"标志\",{\"1\":{\"610\":1,\"612\":1}}],[\"栏目标题\",{\"1\":{\"610\":1}}],[\"栏目\",{\"1\":{\"610\":1,\"612\":1}}],[\"侧栏\",{\"1\":{\"610\":1,\"612\":1}}],[\"附录\",{\"0\":{\"608\":1}}],[\"鸿蒙安装包\",{\"1\":{\"602\":1}}],[\"鸿蒙应用\",{\"0\":{\"602\":1}}],[\"鸿蒙简介\",{\"0\":{\"600\":1}}],[\"统一生态\",{\"1\":{\"601\":1}}],[\"抛掉了安卓的内核\",{\"1\":{\"600\":1}}],[\"悬浮\",{\"1\":{\"596\":1}}],[\"弹性伸缩盒\",{\"1\":{\"912\":1}}],[\"弹性布局\",{\"0\":{\"855\":1}}],[\"弹性架构\",{\"1\":{\"693\":1}}],[\"弹窗中选择constructor\",{\"1\":{\"596\":1}}],[\"弹出错误信息\",{\"1\":{\"480\":1}}],[\"字符实体\",{\"0\":{\"884\":1}}],[\"字符串扩展\",{\"0\":{\"782\":1}}],[\"字符串枚举是不可以用于反向映射的\",{\"1\":{\"724\":1}}],[\"字符串可以赋值给\",{\"1\":{\"724\":1}}],[\"字符串类型\",{\"1\":{\"724\":1}}],[\"字符串匹配\",{\"0\":{\"255\":1}}],[\"字符串算法\",{\"1\":{\"242\":1}}],[\"字体设置标记\",{\"1\":{\"875\":1}}],[\"字体size为奇数导致\",{\"1\":{\"845\":1}}],[\"字体大小\",{\"1\":{\"613\":1}}],[\"字样\",{\"1\":{\"736\":1}}],[\"字段和关键字等名称提供补全内容排序\",{\"1\":{\"596\":1}}],[\"鼠标单击代码\",{\"1\":{\"596\":1}}],[\"勾选support\",{\"1\":{\"595\":1}}],[\"勾选chinese\",{\"1\":{\"594\":1}}],[\"华为帐号登录\",{\"1\":{\"595\":1}}],[\"元组类型tuple\",{\"1\":{\"724\":1}}],[\"元组\",{\"1\":{\"722\":1}}],[\"元服务\",{\"1\":{\"602\":1}}],[\"元服务开发\",{\"1\":{\"595\":1}}],[\"元素不会被显示\",{\"1\":{\"917\":1}}],[\"元素嵌套\",{\"0\":{\"882\":1}}],[\"元素\",{\"0\":{\"881\":1},\"1\":{\"864\":1,\"867\":1,\"881\":1}}],[\"元素选择器\",{\"1\":{\"843\":1}}],[\"元素对象已接受访问者对象\",{\"1\":{\"325\":1}}],[\"元素的执行算法可以随着访问者改变而改变\",{\"1\":{\"325\":1}}],[\"搜索\",{\"1\":{\"610\":1,\"612\":1,\"893\":1}}],[\"搜索输入chinese\",{\"1\":{\"594\":1}}],[\"搜索相关文件的名称\",{\"1\":{\"480\":1}}],[\"启用中文化插件\",{\"0\":{\"594\":1}}],[\"启动vim后默认位于正常模式\",{\"1\":{\"486\":1}}],[\"启动多个窗口不退出\",{\"1\":{\"478\":1}}],[\"诊断开发环境\",{\"0\":{\"593\":1}}],[\"镜像站\",{\"1\":{\"582\":1}}],[\"镜像使用说明\",{\"1\":{\"582\":3}}],[\"镜像加速代理\",{\"1\":{\"582\":1}}],[\"镜像\",{\"0\":{\"581\":1}}],[\"镜像名\",{\"1\":{\"579\":1}}],[\"例子\",{\"1\":{\"580\":1}}],[\"例如验证用户的身份\",{\"1\":{\"568\":1}}],[\"例如日志记录\",{\"1\":{\"568\":2}}],[\"例如\",{\"1\":{\"306\":3,\"463\":1}}],[\"例如框选后去水印\",{\"1\":{\"174\":1}}],[\"退出容器\",{\"1\":{\"579\":1}}],[\"拉取镜像\",{\"1\":{\"579\":1}}],[\"跨端解决方案\",{\"1\":{\"623\":1}}],[\"跨语言跳转\",{\"1\":{\"596\":1}}],[\"跨域处理\",{\"1\":{\"576\":1}}],[\"跨平台解决方案\",{\"0\":{\"396\":1}}],[\"帮助\",{\"1\":{\"571\":1}}],[\"错误\",{\"1\":{\"724\":1}}],[\"错误过滤\",{\"1\":{\"576\":1}}],[\"错误处理\",{\"1\":{\"568\":2}}],[\"错误链接过多\",{\"0\":{\"561\":1}}],[\"卫士可以返回错误响应或者重定向到其他页面\",{\"1\":{\"568\":1}}],[\"卫士会在路由处理程序之前执行\",{\"1\":{\"568\":1}}],[\"卫士通常用于验证用户的身份\",{\"1\":{\"568\":1}}],[\"卫士是一种用于对请求进行验证和授权的机制\",{\"1\":{\"568\":1}}],[\"卫士\",{\"1\":{\"568\":1}}],[\"拥有丰富的\",{\"1\":{\"568\":1}}],[\"拥有稳定的接口\",{\"1\":{\"306\":1}}],[\"虽然vue\",{\"1\":{\"867\":1}}],[\"虽然概念简单\",{\"1\":{\"568\":1}}],[\"虽然仅使用\",{\"1\":{\"568\":1}}],[\"虽然导致类装载的原因有很多种\",{\"1\":{\"305\":1}}],[\"脚本快速生成物料模板\",{\"0\":{\"567\":1}}],[\"值\",{\"1\":{\"558\":1}}],[\"学习js中的设计模式\",{\"1\":{\"815\":1}}],[\"学习资料\",{\"0\":{\"551\":1}}],[\"学习算法最重要的是学习算法的设计过程\",{\"1\":{\"239\":1}}],[\"爬虫\",{\"0\":{\"549\":1}}],[\"清华大学\",{\"1\":{\"545\":1}}],[\"清除cache\",{\"1\":{\"453\":1}}],[\"豆瓣\",{\"1\":{\"545\":1}}],[\"汇编\",{\"0\":{\"533\":1}}],[\"汇编语言或机器语言程序\",{\"1\":{\"272\":1}}],[\"汇编语言\",{\"1\":{\"259\":1}}],[\"死锁\",{\"0\":{\"507\":1}}],[\"释放资源\",{\"1\":{\"505\":1}}],[\"申请资源\",{\"1\":{\"505\":1}}],[\"初值一般为共享资源的数量\",{\"1\":{\"505\":1}}],[\"初值为1\",{\"1\":{\"505\":1}}],[\"初始密码\",{\"1\":{\"433\":1}}],[\"初始的\",{\"1\":{\"332\":1}}],[\"初始化游戏\",{\"1\":{\"324\":1}}],[\"初始化\",{\"1\":{\"305\":6}}],[\"初始化过程\",{\"1\":{\"130\":1}}],[\"速度上有差异\",{\"1\":{\"505\":1}}],[\"互斥信号量\",{\"1\":{\"505\":1}}],[\"互斥\",{\"1\":{\"505\":1}}],[\"消费者取东西\",{\"1\":{\"505\":1}}],[\"消耗资源\",{\"1\":{\"319\":1}}],[\"临界区\",{\"1\":{\"505\":1}}],[\"临界资源\",{\"1\":{\"505\":2}}],[\"临时添加环境变量\",{\"1\":{\"458\":1}}],[\"临时切换为吸管工具进行吸色\",{\"1\":{\"184\":1}}],[\"临时切换为抓手\",{\"1\":{\"174\":1}}],[\"陷入死锁状态\",{\"1\":{\"504\":1}}],[\"哪些任务之间有顺序关系\",{\"1\":{\"503\":1}}],[\"阻塞没有cpu也没有其他必要数据\",{\"1\":{\"502\":1}}],[\"唯一标志\",{\"1\":{\"501\":1}}],[\"处于不可输入的状态\",{\"1\":{\"487\":1}}],[\"处理方案\",{\"1\":{\"845\":2}}],[\"处理应用程序所有类型请求的单个处理程序\",{\"1\":{\"330\":1}}],[\"处理器处理\",{\"1\":{\"42\":1}}],[\"跳到第几页\",{\"1\":{\"487\":1}}],[\"跳到第几行\",{\"1\":{\"487\":1}}],[\"跳到下一个相同word处\",{\"1\":{\"487\":1}}],[\"跳到括号那里\",{\"1\":{\"487\":1}}],[\"跳跃\",{\"1\":{\"46\":1}}],[\"引号\",{\"1\":{\"884\":1}}],[\"引号里的内容\",{\"1\":{\"487\":2}}],[\"引用方式的字体\",{\"1\":{\"875\":1}}],[\"引用数据类型\",{\"0\":{\"752\":1}}],[\"引入了\",{\"1\":{\"864\":1}}],[\"引入的\",{\"1\":{\"759\":1}}],[\"引言\",{\"0\":{\"272\":1}}],[\"替换第一行\",{\"1\":{\"487\":1}}],[\"替换全局所有\",{\"1\":{\"487\":1}}],[\"替换当前光标到单词末尾\",{\"1\":{\"487\":1}}],[\"替换算法\",{\"1\":{\"54\":1}}],[\"右侧显示它的版本号\",{\"1\":{\"736\":1}}],[\"右导航\",{\"1\":{\"612\":1}}],[\"右移\",{\"1\":{\"487\":1}}],[\"右键选择code\",{\"1\":{\"596\":1}}],[\"右键\",{\"1\":{\"479\":1}}],[\"左导航\",{\"1\":{\"612\":1}}],[\"左右中\",{\"1\":{\"610\":1,\"612\":1}}],[\"左移\",{\"1\":{\"487\":1}}],[\"左小又大\",{\"1\":{\"369\":1}}],[\"到目前\",{\"1\":{\"776\":1}}],[\"到页面展示的\",{\"0\":{\"706\":1}}],[\"到文件结束\",{\"1\":{\"487\":1}}],[\"到该行最后一个非空字符处\",{\"1\":{\"487\":1}}],[\"到该行第一个非空字符处\",{\"1\":{\"487\":1}}],[\"到构造和配置\",{\"1\":{\"302\":1}}],[\"光标移动到本行行尾\",{\"1\":{\"487\":1}}],[\"光标移动到行头\",{\"1\":{\"487\":1}}],[\"光盘和磁盘存储器\",{\"1\":{\"52\":1}}],[\"键\",{\"1\":{\"486\":1}}],[\"粘贴剪贴板的内容\",{\"1\":{\"487\":1}}],[\"粘贴\",{\"1\":{\"486\":1}}],[\"升级版\",{\"1\":{\"483\":1}}],[\"升级版的冒泡排序\",{\"0\":{\"252\":1}}],[\"验证是否更改成功\",{\"1\":{\"481\":1}}],[\"验证输出\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1}}],[\"看是否有相关进程\",{\"1\":{\"480\":1}}],[\"看是否能够删除\",{\"1\":{\"480\":1}}],[\"万能的重启\",{\"1\":{\"480\":1}}],[\"说文件已在资源管理器中打开\",{\"1\":{\"480\":1}}],[\"说话\",{\"1\":{\"341\":1}}],[\"遍历比较整个虚拟\",{\"1\":{\"864\":1}}],[\"遍历组件的子组件\",{\"1\":{\"858\":1}}],[\"遍历\",{\"1\":{\"478\":1}}],[\"遍历一个聚合对象\",{\"1\":{\"317\":1}}],[\"批处理\",{\"0\":{\"478\":1}}],[\"批处理操作系统\",{\"0\":{\"123\":1}}],[\"静默删除\",{\"1\":{\"477\":1}}],[\"静态类型\",{\"1\":{\"720\":1}}],[\"静态链表\",{\"1\":{\"354\":1}}],[\"静态内部类\",{\"1\":{\"305\":1}}],[\"卸载软件\",{\"0\":{\"468\":1}}],[\"$n\",{\"1\":{\"930\":3}}],[\"$gutter\",{\"1\":{\"930\":2}}],[\"$grid\",{\"1\":{\"930\":2}}],[\"$version\",{\"1\":{\"929\":2}}],[\"$translucent\",{\"1\":{\"927\":3}}],[\"$line\",{\"1\":{\"927\":2}}],[\"$radius\",{\"1\":{\"925\":5}}],[\"$width\",{\"1\":{\"922\":2,\"927\":2}}],[\"$watch\",{\"1\":{\"867\":2}}],[\"$basic\",{\"1\":{\"922\":1}}],[\"$black\",{\"1\":{\"922\":1}}],[\"$highlight\",{\"1\":{\"922\":2}}],[\"$home\",{\"1\":{\"466\":1}}],[\"$primary\",{\"1\":{\"920\":2}}],[\"$font\",{\"1\":{\"920\":2,\"927\":2}}],[\"$destroy\",{\"1\":{\"867\":1}}],[\"$off\",{\"1\":{\"867\":1}}],[\"$once\",{\"1\":{\"867\":1}}],[\"$on\",{\"1\":{\"867\":1}}],[\"$selector\",{\"1\":{\"925\":2}}],[\"$slots\",{\"1\":{\"867\":1}}],[\"$scopedslots\",{\"1\":{\"867\":1}}],[\"$\",{\"1\":{\"465\":1,\"487\":1,\"724\":2,\"895\":1,\"932\":1}}],[\"$$\",{\"1\":{\"218\":2}}],[\"仓库\",{\"0\":{\"453\":1}}],[\"宝塔是一个运维工具\",{\"1\":{\"448\":1}}],[\"黑客通常用它来编译c语言写的文件\",{\"1\":{\"445\":1}}],[\"黑盒\",{\"1\":{\"29\":1}}],[\"停止某进程\",{\"1\":{\"445\":1}}],[\"停止服务\",{\"1\":{\"431\":1}}],[\"父进程id\",{\"1\":{\"445\":1}}],[\"档案搜寻\",{\"1\":{\"445\":1}}],[\"档案文件比较\",{\"1\":{\"445\":1}}],[\"回流的区别\",{\"0\":{\"691\":1}}],[\"回到页头\",{\"1\":{\"487\":1}}],[\"回到上一层目录\",{\"1\":{\"445\":1}}],[\"回溯法\",{\"1\":{\"242\":1}}],[\"‌但执行顺序变为v\",{\"1\":{\"867\":1}}],[\"‌但它们在不同的操作系统中有不同的应用\",{\"1\":{\"437\":1}}],[\"‌尽管不推荐\",{\"1\":{\"867\":1}}],[\"‌同时适应不同的操作系统环境\",{\"1\":{\"437\":1}}],[\"‌这种设置有助于保持代码的一致性和可读性\",{\"1\":{\"437\":1}}],[\"‌这样做的好处在于可以保持跨平台的一致性\",{\"1\":{\"437\":1}}],[\"‌从而确保在windows环境下编辑和查看代码时不会出现问题\",{\"1\":{\"437\":1}}],[\"‌并在签出时代码时自动将lf转换为crlf\",{\"1\":{\"437\":1}}],[\"‌可以通过设置git\",{\"1\":{\"437\":1}}],[\"‌可以通过设置core\",{\"1\":{\"437\":1}}],[\"‌例如\",{\"1\":{\"437\":1}}],[\"‌避免因不同的行结束符导致的兼容性问题\",{\"1\":{\"437\":1}}],[\"‌因此推荐使用lf作为行结束符\",{\"1\":{\"437\":1}}],[\"‌由于大多数服务器运行的是linux系统\",{\"1\":{\"437\":1}}],[\"‌在代码仓库中\",{\"1\":{\"437\":1}}],[\"‌而crlf则在windows系统中更为常见\",{\"1\":{\"437\":1}}],[\"‌lf是unix和linux系统中使用的行结束符\",{\"1\":{\"437\":1}}],[\"‌line\",{\"1\":{\"437\":1}}],[\"‌都是用于表示文本文件中的行结束符\",{\"1\":{\"437\":1}}],[\"‌即\",{\"1\":{\"437\":1}}],[\"‌carriage\",{\"1\":{\"437\":1}}],[\"‌和crlf\",{\"1\":{\"437\":1}}],[\"‌\",{\"1\":{\"437\":3,\"867\":1}}],[\"‌推荐使用lf格式\",{\"1\":{\"437\":1}}],[\"备份版本号是备份文件名称中的那一串数字\",{\"1\":{\"431\":1}}],[\"备份\",{\"1\":{\"431\":1,\"447\":1}}],[\"备忘录模式属于行为型模式\",{\"1\":{\"319\":1}}],[\"备忘录模式\",{\"0\":{\"319\":1},\"1\":{\"281\":1}}],[\"|\",{\"1\":{\"431\":1,\"724\":4,\"776\":2}}],[\"||\",{\"1\":{\"316\":1,\"421\":1,\"724\":1}}],[\"企业用ee版本\",{\"1\":{\"430\":1}}],[\"预格式化标记\",{\"1\":{\"874\":1}}],[\"预备发布4\",{\"1\":{\"775\":1}}],[\"预览器\",{\"0\":{\"597\":1}}],[\"预先创建好一个空库\",{\"1\":{\"425\":1}}],[\"预防低水平人员带来的风险\",{\"1\":{\"311\":1}}],[\"法三\",{\"1\":{\"424\":1}}],[\"法二\",{\"1\":{\"424\":1}}],[\"法一\",{\"1\":{\"424\":1}}],[\"你可能认为\",{\"1\":{\"724\":1}}],[\"你不知道的\",{\"1\":{\"678\":1}}],[\"你merge的分支\",{\"1\":{\"423\":1}}],[\"你需要merge到的那个分支\",{\"1\":{\"423\":1}}],[\"你就在这样的岗位上\",{\"1\":{\"4\":1}}],[\"删除光标下面的字符\",{\"1\":{\"487\":1}}],[\"删除当前行\",{\"1\":{\"487\":1}}],[\"删除等操作\",{\"1\":{\"486\":1}}],[\"删除一个文件时\",{\"1\":{\"480\":1}}],[\"删除空文件夹\",{\"1\":{\"477\":1}}],[\"删除子目录\",{\"1\":{\"445\":1}}],[\"删除文件失败问题\",{\"0\":{\"480\":1}}],[\"删除文件夹及所有\",{\"1\":{\"477\":1}}],[\"删除文件\",{\"1\":{\"445\":1,\"477\":1}}],[\"删除设置好的远程仓库\",{\"1\":{\"421\":1}}],[\"删除操作在另一端\",{\"1\":{\"357\":1}}],[\"克隆特定分支\",{\"1\":{\"421\":1}}],[\"克隆\",{\"1\":{\"421\":1}}],[\"默认是有gap的\",{\"1\":{\"843\":1}}],[\"默认是下载很慢\",{\"1\":{\"627\":1}}],[\"默认官方maven\",{\"1\":{\"637\":1}}],[\"默认主分支\",{\"1\":{\"421\":1}}],[\"默认为\",{\"1\":{\"418\":1}}],[\"默认预览\",{\"1\":{\"135\":1}}],[\"确认\",{\"1\":{\"418\":1}}],[\"确定任务键的并行\",{\"1\":{\"503\":1}}],[\"确定\",{\"1\":{\"418\":1}}],[\"确定性\",{\"1\":{\"239\":1}}],[\"返回到根目录\",{\"1\":{\"445\":1}}],[\"返回\",{\"1\":{\"418\":1}}],[\"返回的也是一个抽象的产品\",{\"1\":{\"286\":1,\"303\":1}}],[\"条\",{\"1\":{\"418\":1}}],[\"条件\",{\"1\":{\"321\":1}}],[\"本地开发时\",{\"0\":{\"666\":1}}],[\"本地代码执行更高效\",{\"1\":{\"643\":1}}],[\"本地修改了一堆文件\",{\"1\":{\"421\":1}}],[\"本地仓库\",{\"1\":{\"420\":1}}],[\"本次分割文件数据总数为\",{\"1\":{\"418\":1}}],[\"本质是一段代码\",{\"1\":{\"505\":1}}],[\"本质就是每次选择出最小的元素进行交换\",{\"1\":{\"249\":1}}],[\"本质也是利用奇偶性构成方法是在确定位置\",{\"1\":{\"74\":1}}],[\"请改用计算属性函数作为参数\",{\"1\":{\"867\":1}}],[\"请改用计算函数作为参数\",{\"1\":{\"867\":1}}],[\"请\",{\"0\":{\"778\":1}}],[\"请求转发等\",{\"1\":{\"568\":2}}],[\"请求以命令的形式包裹在对象中\",{\"1\":{\"315\":1}}],[\"请遵循robots\",{\"1\":{\"549\":1}}],[\"请输入分割后的文件主名\",{\"1\":{\"418\":1}}],[\"请输入每次分割数据条目数\",{\"1\":{\"418\":1}}],[\"请鼠标选择需要拆分数据的开始行区域\",{\"1\":{\"418\":1}}],[\"请用鼠标选择表头及表标题所在区域\",{\"1\":{\"418\":1}}],[\"安卓调试时\",{\"0\":{\"637\":1}}],[\"安卓构建工具\",{\"1\":{\"627\":1}}],[\"安心等待即可\",{\"1\":{\"465\":1}}],[\"安装与编译\",{\"0\":{\"721\":1}}],[\"安装依赖后\",{\"0\":{\"637\":1}}],[\"安装对应版本的node\",{\"1\":{\"571\":1}}],[\"安装fake\",{\"1\":{\"556\":1}}],[\"安装完三方fluttertoast依赖后运行报错\",{\"0\":{\"638\":1}}],[\"安装完毕后brew\",{\"1\":{\"465\":1}}],[\"安装完最后可以看到log中有登录账号和密码等\",{\"1\":{\"449\":1}}],[\"安装homebrew\",{\"0\":{\"465\":1}}],[\"安装相关的环境\",{\"1\":{\"451\":1}}],[\"安装环境检测\",{\"1\":{\"627\":1}}],[\"安装环境\",{\"0\":{\"451\":1}}],[\"安装\",{\"0\":{\"449\":1,\"544\":1,\"578\":1},\"1\":{\"627\":1,\"721\":1}}],[\"安装包时\",{\"1\":{\"413\":1}}],[\"安全设置\",{\"0\":{\"563\":1}}],[\"安全\",{\"1\":{\"479\":1}}],[\"安全且在多线程情况下能保持高性能\",{\"1\":{\"305\":1}}],[\"安全等级\",{\"0\":{\"109\":1}}],[\"安全性\",{\"0\":{\"8\":1}}],[\"官方提供的用于快速执行\",{\"1\":{\"412\":1}}],[\"🙆🏻‍♂️\",{\"1\":{\"405\":1}}],[\"🙅🏻‍♂️\",{\"1\":{\"405\":4}}],[\"科学软件\",{\"1\":{\"405\":1}}],[\"科学计数法\",{\"1\":{\"68\":1}}],[\"问题分解\",{\"1\":{\"402\":1}}],[\"资源个数加一\",{\"1\":{\"505\":1}}],[\"资源个数减一\",{\"1\":{\"505\":1}}],[\"资源\",{\"1\":{\"400\":1,\"504\":1}}],[\"资源优化场景\",{\"1\":{\"306\":1}}],[\"项目\",{\"0\":{\"404\":1}}],[\"项目经理\",{\"1\":{\"401\":1}}],[\"项目管理\",{\"0\":{\"400\":1}}],[\"项目中划分出的模块\",{\"1\":{\"336\":1}}],[\"自定义指令\",{\"1\":{\"867\":2}}],[\"自绘引擎\",{\"1\":{\"623\":1}}],[\"自绘引擎技术\",{\"1\":{\"396\":1}}],[\"自由流转\",{\"1\":{\"601\":1}}],[\"自动完成\",{\"1\":{\"895\":1}}],[\"自动获得焦点\",{\"1\":{\"895\":1}}],[\"自动导包\",{\"1\":{\"596\":1}}],[\"自动支持序列化机制\",{\"1\":{\"305\":1}}],[\"自动选择存储的账号密码\",{\"0\":{\"668\":1}}],[\"自动选择\",{\"1\":{\"176\":1}}],[\"自动化测试sonic\",{\"0\":{\"394\":1}}],[\"自动化测试\",{\"1\":{\"29\":1}}],[\"低代码\",{\"0\":{\"395\":1}}],[\"低级语言\",{\"0\":{\"259\":1}}],[\"灰度部署\",{\"0\":{\"393\":1}}],[\"欠缺会限制你解决问题的思路\",{\"1\":{\"387\":1}}],[\"追本溯源\",{\"1\":{\"385\":1}}],[\"配合services处理数据\",{\"1\":{\"566\":1}}],[\"配合gitlab\",{\"1\":{\"434\":1}}],[\"配置文件\",{\"1\":{\"721\":1}}],[\"配置各种环境变量\",{\"1\":{\"627\":1}}],[\"配置project\",{\"1\":{\"627\":1}}],[\"配置环境变量\",{\"1\":{\"627\":1}}],[\"配置flutter环境变量\",{\"1\":{\"627\":1}}],[\"配置工程\",{\"1\":{\"595\":1}}],[\"配置国内镜像\",{\"1\":{\"466\":2}}],[\"配置主机端口\",{\"0\":{\"433\":1}}],[\"配置\",{\"0\":{\"432\":1}}],[\"配置仓库\",{\"1\":{\"431\":1}}],[\"配置ossutil\",{\"1\":{\"379\":1}}],[\"配备克隆方法需要对类的功能进行通盘考虑\",{\"1\":{\"306\":1}}],[\"逐步构建起一个有着优良设计结构的完整项目\",{\"1\":{\"657\":1}}],[\"逐步求精的设计方法\",{\"1\":{\"372\":1}}],[\"逐步练习\",{\"1\":{\"146\":1}}],[\"采用自顶向下\",{\"1\":{\"372\":1}}],[\"采用这种工厂模式可以使得获取单例的方式唯一不变\",{\"1\":{\"288\":1}}],[\"森林\",{\"0\":{\"370\":1}}],[\"根节点再与剩下的权值放一起取最小的两个同样操作\",{\"1\":{\"369\":1}}],[\"根据报错位置来看\",{\"1\":{\"638\":1}}],[\"根据flutter\",{\"1\":{\"627\":1}}],[\"根据模板创建\",{\"1\":{\"554\":1}}],[\"根据模式\",{\"1\":{\"325\":1}}],[\"根据计算机软件的分类\",{\"1\":{\"405\":1}}],[\"根据矩阵元素的值的类型而定\",{\"1\":{\"366\":1}}],[\"根据数据结构的逻辑特性\",{\"1\":{\"363\":1}}],[\"根据数据位计算校验位的值\",{\"1\":{\"74\":1}}],[\"霍夫曼编码左0右1\",{\"1\":{\"369\":1}}],[\"求法\",{\"1\":{\"369\":1}}],[\"权限和角色等信息\",{\"1\":{\"568\":2}}],[\"权限转换为指定使用者\",{\"1\":{\"445\":1}}],[\"权\",{\"1\":{\"369\":1}}],[\"哈夫曼树\",{\"0\":{\"369\":1}}],[\"哈希\",{\"1\":{\"365\":1}}],[\"哈希表\",{\"1\":{\"254\":1}}],[\"散列\",{\"1\":{\"365\":1}}],[\"散列表\",{\"1\":{\"364\":1}}],[\"映射到计算机中的存储结构\",{\"1\":{\"363\":1}}],[\"完整流程\",{\"0\":{\"706\":1}}],[\"完成之后即可访问对应的页面\",{\"1\":{\"452\":1}}],[\"完成\",{\"1\":{\"452\":1}}],[\"完成这些操作的方法就是算法\",{\"1\":{\"363\":1}}],[\"完善电路设计\",{\"1\":{\"79\":1}}],[\"必填项\",{\"1\":{\"895\":1}}],[\"必定与一系列加在其上的操作相关联\",{\"1\":{\"363\":1}}],[\"必须放在head里面\",{\"1\":{\"873\":1}}],[\"必须使用\",{\"1\":{\"739\":1}}],[\"必须实现\",{\"1\":{\"306\":1}}],[\"必须加锁\",{\"1\":{\"305\":1}}],[\"必须栅格化之后才能才能使用画笔等工具\",{\"1\":{\"157\":1}}],[\"跟ts\",{\"1\":{\"642\":1}}],[\"跟普通的输入文字是一样的\",{\"1\":{\"487\":1}}],[\"跟算法的巧妙程度有关系\",{\"1\":{\"363\":1}}],[\"跟空间的利用效率有关\",{\"1\":{\"363\":1}}],[\"跟数据的组织方式是直接相关的\",{\"1\":{\"363\":1}}],[\"宽搜\",{\"1\":{\"357\":1}}],[\"队尾\",{\"1\":{\"357\":1}}],[\"队头\",{\"1\":{\"357\":1}}],[\"队列\",{\"0\":{\"357\":1},\"1\":{\"364\":1}}],[\"若localstorage中数据发生改变\",{\"1\":{\"904\":1}}],[\"若输入的字符串不符合指定的正则表达式则无法提交\",{\"1\":{\"895\":1}}],[\"若输入的字符串长度大于该值无法提交\",{\"1\":{\"895\":1}}],[\"若输入的字符串长度小于该值无法提交\",{\"1\":{\"895\":1}}],[\"若输入值大于该值则无法提交\",{\"1\":{\"895\":1}}],[\"若输入值小于该值则无法提交\",{\"1\":{\"895\":1}}],[\"若没有输入则无法提交\",{\"1\":{\"895\":1}}],[\"若使用了未声明的变量\",{\"1\":{\"704\":1}}],[\"若选择select\",{\"1\":{\"596\":1}}],[\"若工程已配置code\",{\"1\":{\"596\":1}}],[\"若s\",{\"1\":{\"505\":1}}],[\"若各对象处理完毕\",{\"1\":{\"356\":1}}],[\"若优先级小于等于栈顶运算符时\",{\"1\":{\"356\":1}}],[\"若优先级大于栈顶运算符时\",{\"1\":{\"356\":1}}],[\"出栈\",{\"1\":{\"356\":1}}],[\"出错位和校验位\",{\"1\":{\"72\":1}}],[\"压入堆栈\",{\"1\":{\"356\":1}}],[\"深度选择器\",{\"0\":{\"869\":1}}],[\"深搜\",{\"1\":{\"355\":1}}],[\"深拷贝是通过实现\",{\"1\":{\"306\":1}}],[\"栈\",{\"0\":{\"355\":1},\"1\":{\"364\":1}}],[\"借助数组来描述线性表的链式存储结构\",{\"1\":{\"354\":1}}],[\"链条稳定的简单的可以用\",{\"1\":{\"841\":1}}],[\"链表\",{\"0\":{\"354\":1}}],[\"链式存储结构\",{\"0\":{\"354\":1},\"1\":{\"365\":1}}],[\"缩短\",{\"1\":{\"352\":1}}],[\"缩小增量排序\",{\"1\":{\"248\":1}}],[\"缩小画笔\",{\"1\":{\"182\":1}}],[\"缩小\",{\"1\":{\"174\":1}}],[\"下次输入时给予提示\",{\"1\":{\"895\":1}}],[\"下划线字体标记\",{\"1\":{\"875\":1}}],[\"下划线开头为私有变量\",{\"1\":{\"655\":1}}],[\"下调整android\",{\"1\":{\"627\":1}}],[\"下\",{\"1\":{\"627\":1}}],[\"下用\",{\"0\":{\"627\":1}}],[\"下面是两个前趋图\",{\"1\":{\"503\":1}}],[\"下移\",{\"1\":{\"487\":1}}],[\"下的连不上的仓库\",{\"1\":{\"447\":1}}],[\"下载的依赖中也进行调整external\",{\"1\":{\"637\":1}}],[\"下载的依赖一般在\",{\"1\":{\"628\":1}}],[\"下载命令\",{\"1\":{\"628\":1}}],[\"下载依赖时\",{\"1\":{\"628\":1}}],[\"下载java对应版本的gradle\",{\"1\":{\"627\":1}}],[\"下载jdk\",{\"1\":{\"627\":1}}],[\"下载安装\",{\"0\":{\"592\":1}}],[\"下载安装包\",{\"1\":{\"431\":1}}],[\"下载地址\",{\"1\":{\"571\":1}}],[\"下载command\",{\"1\":{\"465\":1}}],[\"下载unzip\",{\"1\":{\"458\":1}}],[\"下载解压文件过程\",{\"0\":{\"458\":1}}],[\"下载\",{\"1\":{\"456\":1,\"457\":1,\"458\":1,\"610\":1,\"612\":1,\"627\":2}}],[\"下载ossutil\",{\"1\":{\"379\":1}}],[\"下标\",{\"1\":{\"352\":1}}],[\"下一代响应式web设计\",{\"1\":{\"856\":1}}],[\"下一页\",{\"1\":{\"487\":1}}],[\"下一个单词\",{\"1\":{\"487\":1}}],[\"下一层内容范围内就是视口\",{\"1\":{\"160\":1}}],[\"下一条\",{\"1\":{\"37\":1}}],[\"索引存储结构\",{\"1\":{\"365\":1}}],[\"索引\",{\"1\":{\"352\":1}}],[\"称为表目\",{\"1\":{\"352\":1}}],[\"线性表中的元素叫表目或者记录\",{\"1\":{\"352\":1}}],[\"线性表\",{\"0\":{\"352\":1},\"1\":{\"364\":1}}],[\"线性结构\",{\"0\":{\"351\":1},\"1\":{\"364\":1}}],[\"线程\",{\"0\":{\"508\":1}}],[\"线程安全\",{\"1\":{\"305\":1}}],[\"线程不安全\",{\"1\":{\"305\":1}}],[\"稀疏矩阵\",{\"0\":{\"349\":1}}],[\"矩阵\",{\"0\":{\"347\":1},\"1\":{\"366\":1}}],[\"矩阵和广义表\",{\"0\":{\"345\":1}}],[\"相机\",{\"1\":{\"629\":1}}],[\"相加得到根节点\",{\"1\":{\"369\":1}}],[\"相关定义\",{\"1\":{\"749\":1}}],[\"相关问题\",{\"0\":{\"636\":1}}],[\"相关操作集是什么\",{\"1\":{\"366\":1}}],[\"相关书籍\",{\"0\":{\"343\":1}}],[\"相当于强类型语言中的类型声明\",{\"1\":{\"723\":1}}],[\"相当于具体的\",{\"1\":{\"315\":1}}],[\"相当于\",{\"1\":{\"315\":1}}],[\"陌生人\",{\"1\":{\"341\":1}}],[\"迪米特法则\",{\"0\":{\"341\":1}}],[\"比较时除外\",{\"1\":{\"739\":1}}],[\"比使用单个接口要好\",{\"1\":{\"339\":1}}],[\"比如在栅格布局中\",{\"1\":{\"927\":1}}],[\"比如在相同层级的元素间进行移动时\",{\"1\":{\"864\":1}}],[\"比如网页的标题\",{\"1\":{\"873\":1}}],[\"比如开启事务\",{\"1\":{\"324\":1}}],[\"比如要对行为进行\",{\"1\":{\"315\":1}}],[\"比如需要对行为进行记录\",{\"1\":{\"315\":1}}],[\"比如对象创建开销很大\",{\"1\":{\"313\":1}}],[\"比如说\",{\"1\":{\"313\":1}}],[\"比如说有商务装\",{\"1\":{\"304\":1}}],[\"比如写文件操作\",{\"1\":{\"305\":1}}],[\"比如管理学院首页页面缓存\",{\"1\":{\"305\":1}}],[\"比如一个电脑有两台打印机\",{\"1\":{\"305\":1}}],[\"比如\",{\"1\":{\"284\":1,\"305\":1,\"315\":1,\"320\":1,\"924\":1}}],[\"比如老虎和飞禽\",{\"1\":{\"284\":1}}],[\"比如web应用开发前后端分离方式\",{\"1\":{\"21\":1}}],[\"细节应该依赖抽象\",{\"1\":{\"338\":1}}],[\"细胞分裂\",{\"1\":{\"306\":1}}],[\"针对接口编程\",{\"1\":{\"338\":1}}],[\"针对class\",{\"1\":{\"279\":1,\"280\":1,\"281\":2}}],[\"教程是为那些想用\",{\"1\":{\"334\":1}}],[\"缓存进程\",{\"1\":{\"693\":1}}],[\"缓存等文件夹不放在c盘\",{\"1\":{\"627\":1}}],[\"缓存存储服务的引用\",{\"1\":{\"332\":1}}],[\"缓存\",{\"0\":{\"698\":1},\"1\":{\"332\":1}}],[\"带\",{\"1\":{\"922\":1}}],[\"带格式字符串\",{\"1\":{\"655\":1}}],[\"带有对要查找的服务的引用\",{\"1\":{\"332\":1}}],[\"带符号数\",{\"1\":{\"65\":1}}],[\"服务端\",{\"0\":{\"373\":1}}],[\"服务器端的业务类通常从数据库读取数据\",{\"1\":{\"333\":1}}],[\"服务器中查找到\",{\"1\":{\"332\":1}}],[\"服务\",{\"0\":{\"378\":1},\"1\":{\"332\":1,\"610\":1,\"612\":1,\"738\":1}}],[\"服务定位器是通过\",{\"1\":{\"332\":1}}],[\"服务定位器\",{\"1\":{\"332\":1}}],[\"服务定位器会在它的缓存中查找\",{\"1\":{\"332\":1}}],[\"服务定位器在\",{\"1\":{\"332\":1}}],[\"服务定位器模式充分利用了缓存技术\",{\"1\":{\"332\":1}}],[\"服务定位器模式\",{\"0\":{\"332\":1},\"1\":{\"282\":1}}],[\"授权\",{\"1\":{\"330\":1,\"331\":1}}],[\"授权威胁\",{\"1\":{\"110\":1}}],[\"持续部署\",{\"1\":{\"375\":1}}],[\"持续交付\",{\"1\":{\"375\":1}}],[\"持续集成\",{\"1\":{\"375\":1}}],[\"持续时间及出现的时间顺序\",{\"1\":{\"36\":1}}],[\"持久化机制中\",{\"1\":{\"328\":1}}],[\"违反了迪米特原则\",{\"1\":{\"325\":1}}],[\"违反了依赖倒置原则\",{\"1\":{\"309\":1,\"325\":1}}],[\"朋友接受您的访问\",{\"1\":{\"325\":1}}],[\"污染\",{\"1\":{\"325\":2}}],[\"稳定的数据结构和易变的操作耦合问题\",{\"1\":{\"325\":1}}],[\"难\",{\"1\":{\"324\":1}}],[\"西游记里面菩萨定好的\",{\"1\":{\"324\":1}}],[\"西游记里面悟空请求菩萨降服红孩儿\",{\"1\":{\"320\":1}}],[\"水管都一样\",{\"1\":{\"324\":1}}],[\"水平分割线标记\",{\"1\":{\"874\":1}}],[\"水平\",{\"1\":{\"184\":1}}],[\"走线\",{\"1\":{\"324\":1}}],[\"地理定位\",{\"0\":{\"900\":1}}],[\"地基要打好\",{\"1\":{\"657\":1}}],[\"地基\",{\"1\":{\"324\":1}}],[\"地址\",{\"1\":{\"425\":1}}],[\"地址不要求连续\",{\"1\":{\"354\":1}}],[\"地址总线\",{\"1\":{\"60\":1}}],[\"地址映射\",{\"1\":{\"54\":1}}],[\"地址码\",{\"1\":{\"44\":1}}],[\"地址寄存器ar\",{\"1\":{\"37\":1}}],[\"却在每一个子类都重新写了这一方法\",{\"1\":{\"324\":1}}],[\"坐汽车\",{\"1\":{\"323\":1}}],[\"旅行的出游方式\",{\"1\":{\"323\":1}}],[\"诸葛亮的锦囊妙计\",{\"1\":{\"323\":1}}],[\"策略集非常丰富且种类繁多\",{\"1\":{\"568\":1}}],[\"策略表示如何实现组合实体\",{\"1\":{\"328\":1}}],[\"策略\",{\"1\":{\"328\":1}}],[\"策略类会增多\",{\"1\":{\"323\":1}}],[\"策略对象改变\",{\"1\":{\"323\":1}}],[\"策略模式\",{\"0\":{\"323\":1,\"817\":1},\"1\":{\"281\":1}}],[\"开头\",{\"1\":{\"868\":1}}],[\"开闭\",{\"0\":{\"833\":1}}],[\"开闭原则\",{\"0\":{\"336\":1},\"1\":{\"321\":1}}],[\"开发不规范\",{\"1\":{\"720\":1}}],[\"开发周期异常短\",{\"1\":{\"643\":1}}],[\"开发期使用\",{\"1\":{\"643\":1}}],[\"开发平台\",{\"1\":{\"591\":1}}],[\"开发语言\",{\"1\":{\"587\":1}}],[\"开发人员\",{\"1\":{\"401\":1}}],[\"开始分割\",{\"1\":{\"418\":1}}],[\"开始游戏\",{\"1\":{\"324\":1}}],[\"开源软件\",{\"1\":{\"405\":1}}],[\"开放计算\",{\"1\":{\"405\":1}}],[\"开放路径\",{\"1\":{\"145\":1}}],[\"曾侯乙编钟\",{\"1\":{\"321\":1}}],[\"曾侯乙编钟中\",{\"1\":{\"321\":1}}],[\"钟a\",{\"1\":{\"321\":1}}],[\"钟是抽象接口\",{\"1\":{\"321\":1}}],[\"覆盖接口中的方法\",{\"1\":{\"321\":1}}],[\"且函数能正确执行\",{\"1\":{\"704\":1}}],[\"且软件单位的功能不受到影响时\",{\"1\":{\"337\":1}}],[\"且逻辑相同\",{\"1\":{\"320\":1,\"324\":1}}],[\"且这两个维度都需要进行扩展\",{\"1\":{\"307\":1}}],[\"观察目标会触发它们之间进行循环调用\",{\"1\":{\"320\":1}}],[\"观察者和被观察者是抽象耦合的\",{\"1\":{\"320\":1}}],[\"观察者对象\",{\"1\":{\"320\":1}}],[\"观察者模式没有相应的机制让观察者知道所观察的目标对象是怎么发生变化的\",{\"1\":{\"320\":1}}],[\"观察者模式属于行为型模式\",{\"1\":{\"320\":1}}],[\"观察者模式\",{\"0\":{\"299\":1},\"1\":{\"281\":1}}],[\"他观察菩萨洒水这个动作\",{\"1\":{\"320\":1}}],[\"他的根本还是一只猴子\",{\"1\":{\"310\":1}}],[\"菩萨洒了一地水招来一个老乌龟\",{\"1\":{\"320\":1}}],[\"拍卖师观察最高标价\",{\"1\":{\"320\":1}}],[\"拍卖的时候\",{\"1\":{\"320\":1}}],[\"存在则直接将资源返回给浏览器进程\",{\"1\":{\"706\":1}}],[\"存\",{\"1\":{\"505\":1}}],[\"存放进程执行时所需数据\",{\"1\":{\"501\":1}}],[\"存放观察者们\",{\"1\":{\"320\":1}}],[\"存取方法和存储空间的管理\",{\"0\":{\"499\":1}}],[\"存储管理\",{\"0\":{\"511\":1,\"515\":1}}],[\"存储结构\",{\"0\":{\"365\":1},\"1\":{\"365\":1}}],[\"存储数据元素\",{\"1\":{\"354\":1}}],[\"存储这些对象\",{\"1\":{\"312\":1}}],[\"存储为\",{\"1\":{\"174\":1}}],[\"存储为web所用格式ctrl\",{\"1\":{\"155\":1}}],[\"存储格式\",{\"0\":{\"134\":1},\"1\":{\"155\":1}}],[\"存储\",{\"1\":{\"121\":1}}],[\"存储单位\",{\"1\":{\"55\":1}}],[\"存储当前最活跃的程序和数据\",{\"1\":{\"54\":1}}],[\"存储系统\",{\"0\":{\"51\":1}}],[\"存储器\",{\"1\":{\"34\":1}}],[\"恢复数据的相关状态场景\",{\"1\":{\"319\":1}}],[\"势必会占用比较大的资源\",{\"1\":{\"319\":1}}],[\"捕获一个对象的内部状态\",{\"1\":{\"319\":2}}],[\"符\",{\"0\":{\"922\":1}}],[\"符号\",{\"1\":{\"893\":1}}],[\"符号处理引擎等\",{\"1\":{\"316\":1}}],[\"符合url规则\",{\"1\":{\"706\":1}}],[\"符合单一职责原则\",{\"1\":{\"325\":1}}],[\"符合迪米特原则\",{\"1\":{\"318\":1}}],[\"各进程间需要以互斥方式对其进行访问的资源\",{\"1\":{\"505\":1}}],[\"各个模块通过顺序\",{\"1\":{\"372\":1}}],[\"各个类之间的解耦\",{\"1\":{\"318\":1}}],[\"各种不同的style\",{\"1\":{\"858\":1}}],[\"各种命令操作\",{\"0\":{\"487\":1}}],[\"各种数据结构的运算定义\",{\"1\":{\"363\":1}}],[\"各种数据的存储结构表示\",{\"1\":{\"363\":1}}],[\"各种数据的逻辑结构表示\",{\"1\":{\"363\":1}}],[\"各种功能\",{\"1\":{\"168\":1,\"591\":1}}],[\"框架使用\",{\"1\":{\"892\":1}}],[\"框架集\",{\"0\":{\"880\":1}}],[\"框架\",{\"0\":{\"614\":1},\"1\":{\"318\":1}}],[\"形成了网状结构\",{\"1\":{\"318\":1}}],[\"形状选区\",{\"1\":{\"174\":1}}],[\"形状图层\",{\"1\":{\"157\":1}}],[\"访问者可以对功能进行统一\",{\"1\":{\"325\":1}}],[\"访问者模式\",{\"0\":{\"325\":1},\"1\":{\"281\":1}}],[\"访问一个聚合对象的内容而无须暴露它的内部表示\",{\"1\":{\"317\":1}}],[\"迭代器与生成器\",{\"1\":{\"673\":1}}],[\"迭代器简化了聚合类\",{\"1\":{\"317\":1}}],[\"迭代器模式就是分离了集合对象的遍历行为\",{\"1\":{\"317\":1}}],[\"迭代器模式\",{\"0\":{\"317\":1,\"819\":1},\"1\":{\"281\":1}}],[\"包中的可执行文件的工具\",{\"1\":{\"412\":1}}],[\"包管理工具\",{\"0\":{\"408\":1}}],[\"包含新增\",{\"1\":{\"596\":1}}],[\"包含括号\",{\"1\":{\"487\":1}}],[\"包含源格式的粘贴\",{\"1\":{\"418\":1}}],[\"包含了\",{\"1\":{\"329\":1}}],[\"包含解释器之外的一些全局信息\",{\"1\":{\"316\":1}}],[\"包括全局变量和局部变量\",{\"1\":{\"922\":1}}],[\"包括运算符\",{\"1\":{\"647\":1}}],[\"包括进程id\",{\"1\":{\"445\":1}}],[\"包括数据对象集\",{\"1\":{\"366\":1}}],[\"包括由需求分析到规格\",{\"1\":{\"302\":1}}],[\"包括一些可能在将来引进的类一起工作\",{\"1\":{\"284\":1}}],[\"给变量定义了一个类型\",{\"1\":{\"720\":1}}],[\"给文件夹设置权限\",{\"0\":{\"479\":1}}],[\"给用户提供了一种可以恢复状态的机制\",{\"1\":{\"319\":1}}],[\"给定一个语言\",{\"1\":{\"316\":1}}],[\"给出一队无序的元素时\",{\"1\":{\"247\":1}}],[\"见命令模式的扩展\",{\"1\":{\"315\":1}}],[\"认为是命令的地方都可以使用命令模式\",{\"1\":{\"315\":1}}],[\"认证技术\",{\"0\":{\"115\":1}}],[\"新增\",{\"1\":{\"893\":1,\"895\":1}}],[\"新增特性\",{\"0\":{\"866\":1}}],[\"新的表单属性\",{\"0\":{\"895\":1}}],[\"新的表单元素\",{\"0\":{\"894\":1}}],[\"新的inputtype\",{\"0\":{\"893\":1}}],[\"新的命令可以很容易添加到系统中去\",{\"1\":{\"315\":1}}],[\"新版本es7\",{\"0\":{\"778\":1}}],[\"新闻\",{\"1\":{\"610\":1,\"612\":1}}],[\"新添加的\",{\"1\":{\"420\":1}}],[\"新创建的桶已经不支持使用默认域名在浏览器预览文件\",{\"1\":{\"377\":1}}],[\"新书如何插入\",{\"1\":{\"363\":1}}],[\"新建文件\",{\"1\":{\"445\":1}}],[\"新建文档\",{\"1\":{\"174\":1}}],[\"新建文档与存储\",{\"0\":{\"155\":1}}],[\"新建图层\",{\"1\":{\"174\":2}}],[\"核心知识点\",{\"0\":{\"848\":1}}],[\"核心\",{\"0\":{\"673\":1}}],[\"核心概念\",{\"0\":{\"575\":1}}],[\"核心控制器\",{\"1\":{\"315\":1}}],[\"核心程序法\",{\"1\":{\"81\":1}}],[\"撤销到上一步\",{\"1\":{\"487\":1}}],[\"撤销\",{\"1\":{\"315\":1}}],[\"撤销或重做\",{\"1\":{\"315\":1}}],[\"事件循环\",{\"1\":{\"674\":1}}],[\"事件复杂度t\",{\"1\":{\"240\":1}}],[\"事务\",{\"1\":{\"315\":1}}],[\"事务等处理时\",{\"1\":{\"315\":1}}],[\"赋予它们不同的错误级别\",{\"1\":{\"314\":1}}],[\"赋值处理\",{\"1\":{\"268\":1}}],[\"责任链中的下一个元素\",{\"1\":{\"314\":1}}],[\"责任链模式\",{\"0\":{\"314\":1},\"1\":{\"281\":1}}],[\"允许其中输入多个值\",{\"1\":{\"895\":1}}],[\"允许状态转换逻辑与状态对象合成一体\",{\"1\":{\"321\":1}}],[\"允许对象在内部状态发生改变时改变它的行为\",{\"1\":{\"321\":1}}],[\"允许动态地新增或者删除责任\",{\"1\":{\"314\":1}}],[\"允许向一个现有的对象添加新的功能\",{\"1\":{\"310\":1}}],[\"增强给对象指派职责的灵活性\",{\"1\":{\"314\":1}}],[\"增加新的状态类需要修改那些负责状态转换的源代码\",{\"1\":{\"321\":1}}],[\"增加新的聚合类需要对应增加新的迭代器类\",{\"1\":{\"317\":1}}],[\"增加新的聚合类和迭代器类都很方便\",{\"1\":{\"317\":1}}],[\"增加新的请求处理类很方便\",{\"1\":{\"314\":1}}],[\"增加了新的解释表达式的方式\",{\"1\":{\"316\":1}}],[\"增加了类的透明度\",{\"1\":{\"284\":1}}],[\"增加中间层\",{\"1\":{\"313\":1}}],[\"增加一个适配器\",{\"1\":{\"284\":1}}],[\"击鼓传花\",{\"1\":{\"314\":1}}],[\"红\",{\"1\":{\"894\":2}}],[\"红楼梦中的\",{\"1\":{\"314\":1}}],[\"红黑树\",{\"1\":{\"254\":1}}],[\"向渲染进程提交文档\",{\"1\":{\"706\":1}}],[\"向多个对象中的一个提交一个请求\",{\"1\":{\"314\":1}}],[\"向谁传递之前\",{\"1\":{\"314\":1}}],[\"向cpu发送中断\",{\"1\":{\"59\":1}}],[\"拦截器与过滤器\",{\"1\":{\"325\":1}}],[\"拦截的类都实现统一接口\",{\"1\":{\"314\":1}}],[\"拦截过滤器模式\",{\"0\":{\"331\":1},\"1\":{\"282\":1}}],[\"职责链模式\",{\"0\":{\"825\":1}}],[\"职责链上的处理者负责处理请求\",{\"1\":{\"314\":1}}],[\"职责清晰\",{\"1\":{\"313\":1}}],[\"远程仓库有两个\",{\"1\":{\"425\":1}}],[\"远程仓库\",{\"1\":{\"420\":1}}],[\"远程代理\",{\"1\":{\"313\":1}}],[\"远程服务器等\",{\"1\":{\"286\":1,\"303\":1}}],[\"买火车票不一定在火车站买\",{\"1\":{\"313\":1}}],[\"猪八戒访问高翠兰的时候看不出来这个是孙悟空\",{\"1\":{\"313\":1}}],[\"猪八戒去找高翠兰结果是孙悟空变的\",{\"1\":{\"313\":1}}],[\"猪八戒从天蓬元帅转世投胎到猪\",{\"1\":{\"307\":1}}],[\"降低耦合\",{\"1\":{\"339\":1}}],[\"降低耦合度\",{\"1\":{\"314\":1}}],[\"降低类之间的耦合度\",{\"1\":{\"339\":1}}],[\"降低了类的复杂度\",{\"1\":{\"318\":1}}],[\"降低了系统耦合度\",{\"1\":{\"315\":1}}],[\"降低系统的内存\",{\"1\":{\"312\":1}}],[\"降低访问复杂系统的内部子系统时的复杂度\",{\"1\":{\"311\":1}}],[\"个人习惯问题而已\",{\"1\":{\"920\":1}}],[\"个文件\",{\"1\":{\"418\":1}}],[\"个\",{\"1\":{\"321\":1}}],[\"个分布于不同位置的圆来演示这种模式\",{\"1\":{\"312\":1}}],[\"个对象来画出\",{\"1\":{\"312\":1}}],[\"子元素项目属性\",{\"1\":{\"912\":1}}],[\"子菜单\",{\"1\":{\"610\":1,\"612\":1}}],[\"子导航\",{\"1\":{\"610\":1,\"612\":1}}],[\"子接口或类\",{\"1\":{\"596\":1}}],[\"子类继承关系\",{\"1\":{\"596\":1}}],[\"子类一定可以出现\",{\"1\":{\"337\":1}}],[\"子类可以扩展父类的功能\",{\"1\":{\"337\":1}}],[\"子类实现\",{\"1\":{\"324\":1}}],[\"子类会很膨胀\",{\"1\":{\"310\":1}}],[\"子系统相对独立\",{\"1\":{\"311\":1}}],[\"划价\",{\"1\":{\"311\":1}}],[\"门诊\",{\"1\":{\"311\":1}}],[\"客户\",{\"1\":{\"401\":1}}],[\"客户端开发\",{\"0\":{\"381\":1}}],[\"客户端可以发送请求或者发送传输对象到业务对象\",{\"1\":{\"333\":1}}],[\"客户端可以创建自己的传输对象\",{\"1\":{\"333\":1}}],[\"客户端\",{\"1\":{\"327\":1,\"331\":1,\"332\":1,\"333\":1}}],[\"客户端不与系统耦合\",{\"1\":{\"311\":1}}],[\"客户端不需要知道系统内部的复杂联系\",{\"1\":{\"311\":1}}],[\"客户不与备忘录类耦合\",{\"1\":{\"319\":1}}],[\"客户只需要将请求发送到职责链上即可\",{\"1\":{\"314\":1}}],[\"客户程序可以向处理简单元素一样来处理复杂元素\",{\"1\":{\"309\":1}}],[\"简言之\",{\"1\":{\"336\":1}}],[\"简化了对象\",{\"1\":{\"314\":1}}],[\"简化客户端与之的接口\",{\"1\":{\"311\":1}}],[\"简单条件下可以用\",{\"1\":{\"840\":1}}],[\"简单应用\",{\"1\":{\"709\":1}}],[\"简单\",{\"1\":{\"364\":1}}],[\"简单的\",{\"1\":{\"333\":1}}],[\"简单单例\",{\"1\":{\"293\":1}}],[\"简单选择排序\",{\"0\":{\"249\":1}}],[\"隐藏元素\",{\"1\":{\"917\":1}}],[\"隐藏系统的复杂性\",{\"1\":{\"311\":1}}],[\"隐藏折叠面板和工具箱\",{\"1\":{\"174\":1}}],[\"玻璃和画框形成了一个物体\",{\"1\":{\"310\":1}}],[\"装订线图标\",{\"1\":{\"596\":1}}],[\"装饰者模式\",{\"0\":{\"827\":1}}],[\"装饰器\",{\"1\":{\"720\":1}}],[\"装饰器来创建自定义的中间件\",{\"1\":{\"568\":1}}],[\"装饰器模式为了增强功能\",{\"1\":{\"313\":1}}],[\"装饰器模式相比生成子类更为灵活\",{\"1\":{\"310\":1}}],[\"装饰器模式\",{\"0\":{\"310\":1},\"1\":{\"280\":1}}],[\"装饰模式可以动态扩展一个实现类的功能\",{\"1\":{\"310\":1}}],[\"装饰模式是继承的一个替代模式\",{\"1\":{\"310\":1}}],[\"装饰类和被装饰类可以独立发展\",{\"1\":{\"310\":1}}],[\"装到框子里\",{\"1\":{\"310\":1}}],[\"后缀可加可不加\",{\"1\":{\"924\":1}}],[\"后端业务模块分析与拆分\",{\"1\":{\"576\":1}}],[\"后者申请p\",{\"1\":{\"505\":1}}],[\"后者相当于实现化\",{\"1\":{\"307\":1}}],[\"后处理\",{\"1\":{\"331\":1}}],[\"后悔药\",{\"1\":{\"319\":2}}],[\"后\",{\"1\":{\"310\":1}}],[\"庙宇\",{\"1\":{\"310\":1}}],[\"变化的链条不方便调试\",{\"1\":{\"841\":1}}],[\"变量的解构赋值\",{\"0\":{\"781\":1}}],[\"变量的声明类型尽量是接口或者是抽象类\",{\"1\":{\"338\":1}}],[\"变量声明\",{\"0\":{\"725\":1,\"922\":1}}],[\"变量提升\",{\"0\":{\"704\":1},\"1\":{\"673\":1}}],[\"变量\",{\"0\":{\"742\":1},\"1\":{\"478\":1,\"723\":1}}],[\"变得复杂难以维护\",{\"1\":{\"318\":1}}],[\"变\",{\"1\":{\"310\":1}}],[\"变换工具\",{\"1\":{\"174\":1}}],[\"孙悟空有\",{\"1\":{\"310\":1}}],[\"修饰器\",{\"0\":{\"797\":1}}],[\"修饰类引用和继承\",{\"1\":{\"310\":1}}],[\"修改pubspec\",{\"1\":{\"628\":1}}],[\"修改f\",{\"1\":{\"627\":1}}],[\"修改flutter配置\",{\"1\":{\"627\":1}}],[\"修改之后\",{\"1\":{\"627\":1}}],[\"修改\",{\"1\":{\"596\":1}}],[\"修改环境变量\",{\"1\":{\"458\":1,\"627\":1}}],[\"修改root密码\",{\"1\":{\"445\":1}}],[\"修改external\",{\"1\":{\"433\":1}}],[\"修正方法\",{\"1\":{\"337\":1}}],[\"修复率\",{\"1\":{\"77\":1}}],[\"节点到根节点的路径长度乘以该节点的权值\",{\"1\":{\"369\":1}}],[\"节点的带权路径长度\",{\"1\":{\"369\":1}}],[\"节点的值\",{\"1\":{\"369\":1}}],[\"节点的路径长度\",{\"1\":{\"369\":1}}],[\"节点自由增加\",{\"1\":{\"309\":1}}],[\"节省系统资源的时候\",{\"1\":{\"305\":1}}],[\"里氏代换原则是对开闭原则的补充\",{\"1\":{\"337\":1}}],[\"里氏代换原则是面向对象设计的基本原则之一\",{\"1\":{\"337\":1}}],[\"里氏代换原则中说\",{\"1\":{\"337\":1}}],[\"里氏替换原则\",{\"0\":{\"337\":1}}],[\"里的\",{\"1\":{\"319\":1}}],[\"里判断是否合适\",{\"1\":{\"314\":1}}],[\"里面聚合它自己\",{\"1\":{\"314\":1}}],[\"里面的快捷方式\",{\"1\":{\"313\":1}}],[\"里面放\",{\"1\":{\"309\":1}}],[\"里加代码\",{\"1\":{\"304\":1}}],[\"树的所有叶子节点的带权路径长度之和\",{\"1\":{\"369\":1}}],[\"树的带权路径长度\",{\"1\":{\"369\":1}}],[\"树的高度越低效率就越高\",{\"1\":{\"252\":1}}],[\"树\",{\"0\":{\"367\":1},\"1\":{\"864\":1}}],[\"树枝内部组合该接口\",{\"1\":{\"309\":2}}],[\"树枝和叶子实现统一接口\",{\"1\":{\"309\":1}}],[\"树形结构\",{\"1\":{\"309\":1,\"364\":1}}],[\"您通过朋友的描述\",{\"1\":{\"325\":1}}],[\"您是访问者\",{\"1\":{\"325\":1}}],[\"您在朋友家做客\",{\"1\":{\"325\":1}}],[\"您希望用户忽略组合对象与单个对象的不同\",{\"1\":{\"309\":1}}],[\"您想表示对象的部分\",{\"1\":{\"309\":1}}],[\"您需要一辆汽车\",{\"1\":{\"286\":1,\"303\":1}}],[\"部分知识在上述入门中已经有例子\",{\"1\":{\"932\":1}}],[\"部分\",{\"1\":{\"309\":2,\"627\":1}}],[\"部署图等\",{\"1\":{\"302\":1}}],[\"墙上的开关\",{\"1\":{\"307\":1}}],[\"生产构建时执行的顺序按照引入子组件的顺序\",{\"1\":{\"858\":1}}],[\"生产者存东西的时候消费者不能取东西\",{\"1\":{\"505\":1}}],[\"生产者存东西\",{\"1\":{\"505\":1}}],[\"生命周期选项被重命名为\",{\"1\":{\"867\":2}}],[\"生命周期区别\",{\"1\":{\"867\":1}}],[\"生命周期\",{\"0\":{\"634\":1}}],[\"生态系统\",{\"1\":{\"568\":1}}],[\"生灵通过功能的委派\",{\"1\":{\"307\":1}}],[\"生成一个tsconfig\",{\"1\":{\"721\":1}}],[\"生成树\",{\"1\":{\"369\":1}}],[\"生成器类\",{\"1\":{\"304\":1}}],[\"生成不同操作系统的程序\",{\"1\":{\"304\":1}}],[\"生成基于给定信息的实体类的对象\",{\"1\":{\"303\":1,\"312\":1}}],[\"生成出所谓的\",{\"1\":{\"285\":1}}],[\"生成物理数据库\",{\"1\":{\"106\":1}}],[\"灵感来源于angular\",{\"1\":{\"565\":1}}],[\"灵活的图片\",{\"1\":{\"856\":1}}],[\"灵活\",{\"1\":{\"316\":1,\"352\":1}}],[\"灵活性\",{\"1\":{\"325\":1}}],[\"灵活性好\",{\"1\":{\"284\":1}}],[\"灵活性和没有银弹\",{\"1\":{\"21\":1}}],[\"灵魂和肉体\",{\"1\":{\"307\":1}}],[\"桥接\",{\"0\":{\"307\":1}}],[\"桥接模式尤为适用\",{\"1\":{\"307\":1}}],[\"桥接模式的引入会增加系统的理解与设计难度\",{\"1\":{\"307\":1}}],[\"桥接模式\",{\"1\":{\"280\":1}}],[\"浅拷贝实现\",{\"1\":{\"306\":1}}],[\"融为浑然一体\",{\"1\":{\"306\":1}}],[\"逃避构造函数的约束\",{\"1\":{\"306\":2}}],[\"性能和代码量不是理由\",{\"1\":{\"840\":1}}],[\"性能和安全要求的场景\",{\"1\":{\"306\":1}}],[\"性能优化\",{\"0\":{\"656\":1,\"697\":1},\"1\":{\"674\":1}}],[\"性能\",{\"1\":{\"480\":1}}],[\"性能卓著\",{\"1\":{\"390\":1}}],[\"性能提高\",{\"1\":{\"306\":1}}],[\"性能评价\",{\"0\":{\"80\":1}}],[\"之外的其他位置\",{\"1\":{\"866\":1}}],[\"之间有空格\",{\"1\":{\"445\":1}}],[\"之间的关系配合之后\",{\"1\":{\"749\":1}}],[\"之间的通信封装到一个类中单独处理\",{\"1\":{\"318\":1}}],[\"之间的耦合关系\",{\"1\":{\"306\":1}}],[\"之前是各个国家相互贸易\",{\"1\":{\"318\":1}}],[\"之后才加入\",{\"1\":{\"305\":1}}],[\"之后进行拉伸等操作后可以防止图像质量下降\",{\"1\":{\"184\":1}}],[\"利用\",{\"0\":{\"418\":1}}],[\"利用已有的一个原型对象\",{\"1\":{\"306\":1}}],[\"利用魔法橡皮擦和容差进行抠图\",{\"1\":{\"179\":1}}],[\"则使用最高版本的ie内核进行渲染\",{\"1\":{\"880\":1}}],[\"则使用gcf来渲染页面\",{\"1\":{\"880\":1}}],[\"则使用观察者模式\",{\"0\":{\"320\":1}}],[\"则最终编译为模板\",{\"1\":{\"867\":2}}],[\"则根据浏览器默认的搜索引擎生成带有搜索内容的相关的url\",{\"1\":{\"706\":1}}],[\"则生成不带参数的构造器\",{\"1\":{\"596\":1}}],[\"则会加上请求协议\",{\"1\":{\"706\":1}}],[\"则会到pipeline中执行\",{\"1\":{\"556\":1}}],[\"则会自动通知它的依赖对象\",{\"1\":{\"320\":1}}],[\"则需要打开注册表编辑器regedit\",{\"1\":{\"480\":1}}],[\"则把堆栈中存留的运算符一并输出\",{\"1\":{\"356\":1}}],[\"则把它压栈\",{\"1\":{\"356\":1}}],[\"则返回这个唯一标识码所标识的对象\",{\"1\":{\"312\":1}}],[\"则创建新对象\",{\"1\":{\"312\":1}}],[\"则可以使用原型模式\",{\"1\":{\"306\":1}}],[\"则采用这种模式\",{\"1\":{\"306\":1}}],[\"则要将以前系统的\",{\"1\":{\"284\":1}}],[\"来自\",{\"1\":{\"867\":1}}],[\"来实现堆栈\",{\"1\":{\"355\":1}}],[\"来实现二者的解耦\",{\"1\":{\"307\":1}}],[\"来演示传输对象设计模式\",{\"1\":{\"333\":1}}],[\"来演示服务定位器设计模式\",{\"1\":{\"332\":1}}],[\"来演示拦截过滤器设计模式\",{\"1\":{\"331\":1}}],[\"来演示前端控制器设计模式\",{\"1\":{\"330\":1}}],[\"来演示数据访问对象模式的用法\",{\"1\":{\"329\":1}}],[\"来演示组合实体设计模式的用法\",{\"1\":{\"328\":1}}],[\"来演示游戏的定义方式\",{\"1\":{\"324\":1}}],[\"来显示网页\",{\"1\":{\"871\":1}}],[\"来显示\",{\"1\":{\"325\":1}}],[\"来查看当它改变策略\",{\"1\":{\"323\":1}}],[\"来查看当状态\",{\"1\":{\"321\":1}}],[\"来互相贸易\",{\"1\":{\"318\":1}}],[\"来隐藏系统的复杂性\",{\"1\":{\"311\":1}}],[\"来装饰\",{\"1\":{\"310\":1}}],[\"来画出不同颜色的圆\",{\"1\":{\"307\":1}}],[\"来调用私有构造方法\",{\"1\":{\"305\":1}}],[\"来获取迭代器\",{\"1\":{\"317\":1}}],[\"来获取\",{\"1\":{\"304\":1,\"313\":1,\"322\":1}}],[\"绝对防止多次实例化\",{\"1\":{\"305\":2}}],[\"枚举类型\",{\"1\":{\"724\":1}}],[\"枚举可能的状态\",{\"1\":{\"321\":1}}],[\"枚举\",{\"1\":{\"305\":1,\"722\":1}}],[\"另存为\",{\"1\":{\"487\":1}}],[\"另外一方面\",{\"1\":{\"305\":1}}],[\"另一个操作符也可以是操作树\",{\"1\":{\"309\":1}}],[\"另一个抽象产品\",{\"1\":{\"304\":1}}],[\"另一种设计技术\",{\"1\":{\"20\":1}}],[\"很多时候我们总是需要记录一个对象的内部状态\",{\"1\":{\"319\":1}}],[\"很消耗资源\",{\"1\":{\"305\":1}}],[\"很明显\",{\"1\":{\"305\":1}}],[\"效果时\",{\"1\":{\"305\":1}}],[\"效果\",{\"1\":{\"305\":1}}],[\"效率很低\",{\"1\":{\"305\":1}}],[\"效率高\",{\"1\":{\"260\":1}}],[\"效率极低\",{\"1\":{\"59\":1}}],[\"种可用的颜色\",{\"1\":{\"312\":1}}],[\"种双检锁方式\",{\"1\":{\"305\":1}}],[\"种枚举方式\",{\"1\":{\"305\":1}}],[\"种登记方式\",{\"1\":{\"305\":1}}],[\"种饿汉方式\",{\"1\":{\"305\":1}}],[\"种懒汉方式\",{\"1\":{\"305\":1}}],[\"种和第\",{\"1\":{\"305\":1}}],[\"种方式就显得很合理\",{\"1\":{\"305\":1}}],[\"种方式只要\",{\"1\":{\"305\":1}}],[\"种方式不同的是\",{\"1\":{\"305\":1}}],[\"种图\",{\"1\":{\"302\":1}}],[\"应始终声明为函数\",{\"1\":{\"867\":1}}],[\"应使用这种方式而不是双检锁方式\",{\"1\":{\"305\":1}}],[\"应用根容器的\",{\"1\":{\"867\":2}}],[\"应用开发\",{\"1\":{\"595\":1}}],[\"应用软件\",{\"1\":{\"405\":1}}],[\"应用程序可以是基于\",{\"1\":{\"330\":1}}],[\"应用实例\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1}}],[\"应用于科学计算\",{\"1\":{\"260\":1}}],[\"应用\",{\"1\":{\"132\":1,\"146\":1,\"355\":1,\"357\":1}}],[\"较复杂\",{\"1\":{\"305\":1}}],[\"起到一种规范和限制\",{\"1\":{\"726\":1}}],[\"起\",{\"1\":{\"305\":2}}],[\"双标记\",{\"1\":{\"872\":1}}],[\"双向预览\",{\"1\":{\"597\":1}}],[\"双向链表\",{\"1\":{\"354\":1}}],[\"双击shift键\",{\"1\":{\"596\":1}}],[\"双击左键\",{\"1\":{\"174\":1}}],[\"双引号\",{\"1\":{\"487\":2}}],[\"双重校验锁\",{\"1\":{\"305\":1}}],[\"双检锁方式可在实例域需要延迟初始化时使用\",{\"1\":{\"305\":1}}],[\"双检锁\",{\"1\":{\"305\":1}}],[\"显然是不合适的\",{\"1\":{\"305\":1}}],[\"显然没有达到\",{\"1\":{\"305\":1}}],[\"显示前进的进度提示条\",{\"1\":{\"894\":1}}],[\"显示搜索输入框\",{\"1\":{\"893\":1}}],[\"显示一个\",{\"1\":{\"893\":1}}],[\"显示一个月份选择器\",{\"1\":{\"893\":1}}],[\"显示一个日期选择窗口\",{\"1\":{\"893\":1}}],[\"显示一个颜色选择窗口\",{\"1\":{\"893\":1}}],[\"显示一个范围选择滑块\",{\"1\":{\"893\":1}}],[\"显示一个电话号码输入框\",{\"1\":{\"893\":1}}],[\"显示一个url地址输入框\",{\"1\":{\"893\":1}}],[\"显示一个邮件地址输入框\",{\"1\":{\"893\":1}}],[\"显示一个数字输入框\",{\"1\":{\"893\":1}}],[\"显示结果\",{\"1\":{\"884\":1}}],[\"显示在下一行\",{\"1\":{\"874\":1}}],[\"显示进程状态\",{\"1\":{\"445\":1}}],[\"显示当前目录文件\",{\"1\":{\"445\":1}}],[\"显示版本信息\",{\"1\":{\"445\":1}}],[\"显示文件列表详细信息\",{\"1\":{\"445\":1}}],[\"显示包括隐藏文件\",{\"1\":{\"445\":1}}],[\"显示消息\",{\"1\":{\"305\":1}}],[\"显示隐藏网格线\",{\"1\":{\"174\":1}}],[\"显示隐藏辅助线\",{\"1\":{\"174\":1}}],[\"显示隐藏标尺\",{\"1\":{\"174\":1}}],[\"导入时\",{\"1\":{\"924\":1}}],[\"导入css文件\",{\"0\":{\"924\":1}}],[\"导航\",{\"1\":{\"610\":1,\"612\":3}}],[\"导致造成类型思维缺失\",{\"1\":{\"720\":1}}],[\"导致不能被使用\",{\"1\":{\"704\":1}}],[\"导致ip被block\",{\"0\":{\"561\":1}}],[\"导致学习压力很大\",{\"1\":{\"389\":1}}],[\"导致类的个数增加\",{\"1\":{\"324\":1}}],[\"导致类装载\",{\"1\":{\"305\":1}}],[\"导致它们之间的依赖关系结构混乱而且难以复用该对象\",{\"1\":{\"318\":1}}],[\"导演\",{\"1\":{\"285\":1}}],[\"机场调度系统\",{\"1\":{\"318\":1}}],[\"机制来保证初始化\",{\"1\":{\"305\":1}}],[\"机制避免了多线程的同步问题\",{\"1\":{\"305\":1}}],[\"机器语言\",{\"1\":{\"259\":1}}],[\"机器运算加减法要比乘除法要快很多\",{\"1\":{\"240\":1}}],[\"机器字长为n时各种码取值范围\",{\"1\":{\"69\":1}}],[\"机器数对应的实际数值\",{\"1\":{\"66\":1}}],[\"机器数的最高位为符号位\",{\"1\":{\"65\":1}}],[\"机器数\",{\"0\":{\"65\":1}}],[\"浪费内存\",{\"1\":{\"305\":1}}],[\"饿汉式\",{\"1\":{\"305\":1}}],[\"避免使用多重条件判断\",{\"1\":{\"323\":1}}],[\"避免循环引用\",{\"1\":{\"320\":1}}],[\"避免请求发送者与接收者耦合在一起\",{\"1\":{\"314\":1}}],[\"避免重新创建\",{\"1\":{\"312\":1}}],[\"避免在两个层次之间建立静态的继承联系\",{\"1\":{\"307\":1}}],[\"避免内存浪费\",{\"1\":{\"305\":1}}],[\"避免对资源的多重占用\",{\"1\":{\"305\":1}}],[\"接收响应信息\",{\"1\":{\"706\":1}}],[\"接待员\",{\"1\":{\"311\":1}}],[\"接下来介绍的几种实现方式都支持多线程\",{\"1\":{\"305\":1}}],[\"接口与面向接口编程\",{\"0\":{\"839\":1}}],[\"接口继承类\",{\"0\":{\"733\":1}}],[\"接口继承接口\",{\"0\":{\"732\":1}}],[\"接口名\",{\"1\":{\"596\":1}}],[\"接口文档的集成\",{\"1\":{\"576\":1}}],[\"接口逻辑具体开发\",{\"1\":{\"576\":1}}],[\"接口隔离原则\",{\"0\":{\"340\":1}}],[\"接口创建抽象类\",{\"1\":{\"307\":1}}],[\"接口的内部类\",{\"1\":{\"317\":1}}],[\"接口的抽象装饰类\",{\"1\":{\"310\":1}}],[\"接口的抽象类\",{\"1\":{\"306\":1}}],[\"接口的实体类\",{\"1\":{\"307\":1,\"308\":1,\"315\":1,\"317\":1}}],[\"接口的实体桥接实现类\",{\"1\":{\"307\":1}}],[\"接口的实现\",{\"1\":{\"284\":1}}],[\"接口是负责创建一个相关对象的工厂\",{\"1\":{\"304\":1}}],[\"接口转化为\",{\"1\":{\"284\":1}}],[\"接口\",{\"0\":{\"726\":1},\"1\":{\"284\":4,\"306\":1,\"327\":1,\"720\":1}}],[\"否则\",{\"1\":{\"418\":1,\"706\":1}}],[\"否则类应该被拆分\",{\"1\":{\"339\":1}}],[\"否则无法切换到新增状态\",{\"1\":{\"321\":1}}],[\"否则可能会引起线程安全问题\",{\"1\":{\"312\":1}}],[\"否则会造成系统的混乱\",{\"1\":{\"312\":1}}],[\"否\",{\"1\":{\"305\":3}}],[\"懒汉式\",{\"1\":{\"305\":2}}],[\"让用户在特定范围内选择一个整数值\",{\"1\":{\"893\":1}}],[\"让段落或者是文字相对于父标记居中显示\",{\"1\":{\"874\":1}}],[\"让后面的文字\",{\"1\":{\"874\":1}}],[\"让开发者思考\",{\"1\":{\"720\":1}}],[\"让\",{\"1\":{\"487\":1}}],[\"让光标所在的行居屏幕最下一行\",{\"1\":{\"487\":1}}],[\"让光标所在的行居屏幕最上一行\",{\"1\":{\"487\":1}}],[\"让光标所在的行居屏幕中央\",{\"1\":{\"487\":1}}],[\"让多个对象都有可能接收请求\",{\"1\":{\"314\":1}}],[\"让患者或患者家属觉得很复杂\",{\"1\":{\"311\":1}}],[\"让它们独立变化\",{\"1\":{\"307\":1}}],[\"让构造函数为\",{\"1\":{\"305\":1}}],[\"让其子类实现工厂接口\",{\"1\":{\"286\":1,\"303\":1}}],[\"让其子类自己决定实例化哪一个工厂类\",{\"1\":{\"286\":1,\"303\":1}}],[\"防火墙\",{\"1\":{\"313\":1}}],[\"防止反序列化重新创建新的对象\",{\"1\":{\"305\":1}}],[\"防止多线程同时进入造成\",{\"1\":{\"305\":1}}],[\"防御编程模式\",{\"0\":{\"297\":1}}],[\"尤其是频繁的创建和销毁实例\",{\"1\":{\"305\":1}}],[\"判断节点类型\",{\"1\":{\"864\":1}}],[\"判断系统是否已经有这个单例\",{\"1\":{\"305\":1}}],[\"判断力和思辨力是软件行业给我们提出的更高要求\",{\"1\":{\"21\":1}}],[\"该属性使其可以被调用\",{\"1\":{\"761\":1}}],[\"该\",{\"1\":{\"334\":1}}],[\"该处理程序可以做认证\",{\"1\":{\"330\":1}}],[\"该对象是简单的\",{\"1\":{\"329\":1}}],[\"该对象包含依赖对象\",{\"1\":{\"328\":1}}],[\"该对象执行命令\",{\"1\":{\"315\":1}}],[\"该空对象类将无缝地使用在需要检查空值的地方\",{\"1\":{\"322\":1}}],[\"该解释器通过解释这些句子来解决该问题\",{\"1\":{\"316\":1}}],[\"该接口定义了在一个模型对象上要执行的标准操作\",{\"1\":{\"329\":1}}],[\"该接口解释一个特定的上下文\",{\"1\":{\"316\":1}}],[\"该接口用于创建当前对象的克隆\",{\"1\":{\"306\":1}}],[\"该类负责从数据源获取数据\",{\"1\":{\"329\":1}}],[\"该类负责创建自己的对象\",{\"1\":{\"305\":1}}],[\"该类实现了上述的接口\",{\"1\":{\"329\":1}}],[\"该类通常处理不同类之间的通信\",{\"1\":{\"318\":1}}],[\"该类有实现了\",{\"1\":{\"317\":1}}],[\"该类提供了客户端请求的简化方法和对现有系统类方法的委托调用\",{\"1\":{\"311\":1}}],[\"该类提供了修改相同对象组的方式\",{\"1\":{\"309\":1}}],[\"该类带有\",{\"1\":{\"309\":1}}],[\"该方法使用不太频繁\",{\"1\":{\"305\":1}}],[\"该超级工厂又称为其他工厂的工厂\",{\"1\":{\"304\":1}}],[\"6px\",{\"1\":{\"923\":1}}],[\"600px\",{\"1\":{\"927\":1}}],[\"60\",{\"1\":{\"884\":1,\"895\":1}}],[\"61\",{\"1\":{\"312\":1}}],[\"62\",{\"1\":{\"312\":1,\"884\":1}}],[\"69\",{\"1\":{\"312\":1}}],[\"64\",{\"1\":{\"312\":2,\"431\":2}}],[\"6\",{\"0\":{\"698\":1,\"775\":1,\"785\":1,\"878\":1,\"927\":1},\"1\":{\"304\":1,\"305\":2,\"306\":1,\"307\":1,\"310\":1,\"313\":1,\"315\":1,\"325\":1,\"327\":1,\"328\":1,\"331\":1,\"332\":1,\"478\":1,\"639\":1,\"724\":2,\"777\":1,\"780\":3,\"875\":1,\"893\":1,\"895\":2}}],[\"和less一样\",{\"0\":{\"923\":1}}],[\"和号\",{\"1\":{\"884\":1}}],[\"和<p>很相似\",{\"1\":{\"874\":1}}],[\"和事前编译\",{\"1\":{\"643\":1}}],[\"和中间件\",{\"1\":{\"568\":1}}],[\"和不可剥夺\",{\"1\":{\"506\":1}}],[\"和修改的\",{\"1\":{\"420\":1}}],[\"和实体观察者对象\",{\"1\":{\"320\":1}}],[\"和装饰器模式的区别\",{\"1\":{\"313\":1}}],[\"和适配器模式的区别\",{\"1\":{\"313\":1}}],[\"和它们的结合来过滤\",{\"1\":{\"308\":1}}],[\"和\",{\"0\":{\"780\":1},\"1\":{\"304\":1,\"307\":1,\"309\":2,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"327\":1,\"437\":1,\"627\":1,\"628\":1,\"648\":1,\"724\":1,\"749\":1,\"864\":1,\"867\":2}}],[\"和数据流\",{\"1\":{\"42\":1}}],[\"换段落\",{\"1\":{\"874\":1}}],[\"换皮肤\",{\"1\":{\"304\":1}}],[\"换数据库只需换方言和驱动就可以\",{\"1\":{\"286\":1,\"303\":1}}],[\"qrcodejs\",{\"0\":{\"620\":1}}],[\"qt5\",{\"1\":{\"551\":1}}],[\"qt5中文网\",{\"1\":{\"551\":1}}],[\"q可以退出\",{\"1\":{\"487\":1}}],[\"q\",{\"0\":{\"559\":1,\"684\":1,\"859\":1},\"1\":{\"477\":3,\"487\":1}}],[\"qiankun\",{\"1\":{\"391\":1}}],[\"quot\",{\"1\":{\"884\":1}}],[\"queries\",{\"1\":{\"856\":1}}],[\"quill\",{\"0\":{\"622\":1}}],[\"quickfix\",{\"1\":{\"596\":1}}],[\"quicksort\",{\"1\":{\"252\":4}}],[\"quantity\",{\"1\":{\"315\":7}}],[\"qq\",{\"1\":{\"304\":1}}],[\"又叫霍夫曼树\",{\"1\":{\"369\":1}}],[\"又叫部分整体模式\",{\"1\":{\"309\":1}}],[\"又可让外部代码透明地访问集合内部的数据\",{\"1\":{\"317\":1}}],[\"又不希望在\",{\"1\":{\"305\":1}}],[\"又要在具体的里面加代码\",{\"1\":{\"304\":1}}],[\"又称统一建模语言或标准建模语言\",{\"1\":{\"302\":1}}],[\"又称为符号语言\",{\"1\":{\"259\":1}}],[\"既要在抽象的\",{\"1\":{\"304\":1}}],[\"裤子\",{\"1\":{\"304\":1}}],[\"某一观察者错误会导致系统卡壳\",{\"1\":{\"320\":1}}],[\"某一具体产品\",{\"1\":{\"304\":2}}],[\"某一个\",{\"1\":{\"304\":1}}],[\"某一个衣柜\",{\"1\":{\"304\":1}}],[\"具有inline的同行特性\",{\"1\":{\"910\":1}}],[\"具有block宽度高度特性\",{\"1\":{\"910\":1}}],[\"具有2选1的功能中可切换到另一种\",{\"1\":{\"184\":1}}],[\"具体示例\",{\"0\":{\"555\":1}}],[\"具体的优化点包括\",{\"1\":{\"864\":1}}],[\"具体的类型在使用的时候确定\",{\"1\":{\"734\":1}}],[\"具体的包名可以在链接网站中进行查询\",{\"1\":{\"431\":1}}],[\"具体的裤子也都是裤子\",{\"1\":{\"304\":1}}],[\"具体内容\",{\"1\":{\"338\":1}}],[\"具体元素变更比较困难\",{\"1\":{\"325\":1}}],[\"具体元素对访问者公布细节\",{\"1\":{\"325\":1}}],[\"具体哪个对象处理该请求由运行时刻自动确定\",{\"1\":{\"314\":1}}],[\"具体扩展类重写父类方法\",{\"1\":{\"310\":1}}],[\"具体工厂\",{\"1\":{\"304\":2}}],[\"没必要深入去了解学习\",{\"1\":{\"448\":1}}],[\"没有格式验证\",{\"1\":{\"893\":1}}],[\"没有特殊指令的标记\",{\"1\":{\"867\":1}}],[\"没有多态概念\",{\"1\":{\"651\":1}}],[\"没有线程\",{\"1\":{\"645\":1}}],[\"没有参数表示\",{\"1\":{\"477\":1}}],[\"没有依赖抽象\",{\"1\":{\"325\":1}}],[\"没有达到\",{\"1\":{\"305\":1}}],[\"没有加锁\",{\"1\":{\"305\":1}}],[\"没有接口\",{\"1\":{\"305\":1}}],[\"没有符号位\",{\"1\":{\"65\":1}}],[\"没法进入共产主义了\",{\"1\":{\"304\":1}}],[\"要尽量先使用组合或者聚合等关联关系来实现\",{\"1\":{\"342\":1}}],[\"要访问的对象在远程的机器上\",{\"1\":{\"313\":1}}],[\"要求开发者针对抽象进行设计与编程\",{\"1\":{\"307\":1}}],[\"要求生产唯一序列号\",{\"1\":{\"305\":1}}],[\"要增加一个系列的某一产品\",{\"1\":{\"304\":1}}],[\"要不然\",{\"1\":{\"304\":1}}],[\"要深入代码细节中去\",{\"1\":{\"4\":1}}],[\"假设的\",{\"1\":{\"864\":2}}],[\"假设一种情况\",{\"1\":{\"304\":1}}],[\"假如链条容易发生变化还是使用普通调用\",{\"1\":{\"841\":1}}],[\"假如直接用上述对象字面量就会报错\",{\"1\":{\"727\":1}}],[\"假如200\",{\"1\":{\"706\":1}}],[\"假如重定向\",{\"1\":{\"706\":1}}],[\"假如开启了pipeline\",{\"1\":{\"556\":1}}],[\"假如要还原\",{\"1\":{\"431\":1}}],[\"假如不配置仓库\",{\"1\":{\"431\":1}}],[\"假如不想将密码全局保存在global\",{\"1\":{\"421\":1}}],[\"假如是explorer占用\",{\"1\":{\"480\":1}}],[\"假如是右括号\",{\"1\":{\"356\":1}}],[\"假如是左括号\",{\"1\":{\"356\":1}}],[\"假如是运算符\",{\"1\":{\"356\":1}}],[\"假如有则指向已创建的实例\",{\"1\":{\"288\":1}}],[\"假如没有则创建的实例\",{\"1\":{\"288\":1}}],[\"假如打印的时候\",{\"1\":{\"155\":1}}],[\"肯定有两套或多套衣服吧\",{\"1\":{\"304\":1}}],[\"获取页面中的另一个链接\",{\"1\":{\"556\":1}}],[\"获取分割后的文件存储路径\",{\"1\":{\"418\":1}}],[\"获取分割开始行区域列数\",{\"1\":{\"418\":1}}],[\"获取分割开始行所在区域列号\",{\"1\":{\"418\":1}}],[\"获取分割开始行所在区域行号\",{\"1\":{\"418\":1}}],[\"获取需要分割的数据总条数\",{\"1\":{\"418\":1}}],[\"获取属性的方法\",{\"1\":{\"333\":1}}],[\"获取学生\",{\"1\":{\"329\":1,\"333\":1}}],[\"获取唯一可用的对象\",{\"1\":{\"305\":2}}],[\"获取颜色为\",{\"1\":{\"304\":3}}],[\"获取颜色工厂\",{\"1\":{\"304\":1}}],[\"获取形状为\",{\"1\":{\"304\":3}}],[\"获取形状工厂\",{\"1\":{\"304\":1}}],[\"获取\",{\"1\":{\"303\":3,\"324\":1}}],[\"协议进行连接\",{\"1\":{\"457\":1}}],[\"协作图\",{\"1\":{\"302\":1}}],[\"协调沟通\",{\"1\":{\"32\":1}}],[\"活动图\",{\"1\":{\"302\":1}}],[\"它会遍历新旧两个虚拟节点树的每一层\",{\"1\":{\"864\":1}}],[\"它会记住第一次输入的密码\",{\"1\":{\"421\":1}}],[\"它们的行为可能跟object的行为不一致\",{\"1\":{\"760\":1}}],[\"它们之间的区别仅在于它们的行为\",{\"1\":{\"323\":1}}],[\"它将允许隐式类型转换\",{\"1\":{\"749\":1}}],[\"它将请求的发送者和接收者解耦\",{\"1\":{\"314\":1}}],[\"它表示与项目依赖的\",{\"1\":{\"736\":1}}],[\"它允许你在编译时可选择地包含或移除类型检查\",{\"1\":{\"724\":1}}],[\"它可以用于处理请求的前置或后置操作\",{\"1\":{\"568\":1}}],[\"它可以用于保护路由\",{\"1\":{\"568\":1}}],[\"它可以是粗粒的\",{\"1\":{\"328\":1}}],[\"它强调降低依赖\",{\"1\":{\"339\":1}}],[\"它还有另外一个意思是\",{\"1\":{\"339\":1}}],[\"它没有任何的行为\",{\"1\":{\"333\":1}}],[\"它有自己的生命周期\",{\"1\":{\"328\":1}}],[\"它提供了对业务服务方法的访问\",{\"1\":{\"327\":1}}],[\"它提供了减少对象数量从而改善应用所需的对象结构的方式\",{\"1\":{\"312\":1}}],[\"它基本上是用来减少通信或对表示层代码中的业务层代码的远程查询功能\",{\"1\":{\"327\":1}}],[\"它基于\",{\"1\":{\"305\":1}}],[\"它使视图与模型分离开\",{\"1\":{\"326\":1}}],[\"它控制数据流向模型对象\",{\"1\":{\"326\":1}}],[\"它也可以带有逻辑\",{\"1\":{\"326\":1}}],[\"它改变了元素类的执行算法\",{\"1\":{\"325\":1}}],[\"它的模板方法被设置为\",{\"1\":{\"324\":1}}],[\"它的子类可以按需要重写方法实现\",{\"1\":{\"324\":1}}],[\"它支持以不同的方式遍历一个聚合对象\",{\"1\":{\"317\":1}}],[\"它属于行为型模式\",{\"1\":{\"315\":1,\"316\":1}}],[\"它向现有的系统添加一个接口\",{\"1\":{\"311\":1}}],[\"它是可序列化的\",{\"1\":{\"333\":1}}],[\"它是主要的实体\",{\"1\":{\"328\":1}}],[\"它是作为现有的类的一个包装\",{\"1\":{\"310\":1}}],[\"它是一个支持模型化和软件系统开发的图形化语言\",{\"1\":{\"302\":1}}],[\"它在我们树型结构的问题中\",{\"1\":{\"309\":1}}],[\"它创建了对象组的树形结构\",{\"1\":{\"309\":1}}],[\"它结合多个标准来获得单一标准\",{\"1\":{\"308\":1}}],[\"它通过提供抽象化和实现化之间的桥接结构\",{\"1\":{\"307\":1}}],[\"它同样要求这些\",{\"1\":{\"306\":1}}],[\"它不仅能避免多线程同步问题\",{\"1\":{\"305\":1}}],[\"它不仅统一了booch\",{\"1\":{\"302\":1}}],[\"它更简洁\",{\"1\":{\"305\":1}}],[\"它跟第\",{\"1\":{\"305\":1}}],[\"它能保证客户端始终只使用同一个产品族中的对象\",{\"1\":{\"304\":1}}],[\"为输入框中添加提示消息\",{\"1\":{\"895\":1}}],[\"为某个输入框提供输入建议\",{\"1\":{\"894\":1}}],[\"为止\",{\"1\":{\"776\":1}}],[\"为传输对象填充数据的业务服务\",{\"1\":{\"333\":1}}],[\"为防止恶意操作\",{\"1\":{\"324\":1}}],[\"为遍历不同的聚合结构提供一个统一的接口\",{\"1\":{\"317\":1}}],[\"为请求创建了一个接收者对象的链\",{\"1\":{\"314\":1}}],[\"为其他对象提供一种代理以控制对这个对象的访问\",{\"1\":{\"313\":1}}],[\"为复杂的模块或子系统提供外界访问的模块\",{\"1\":{\"311\":1}}],[\"为子系统中的一组接口提供一个一致的界面\",{\"1\":{\"311\":1}}],[\"为标准\",{\"1\":{\"308\":1}}],[\"为了实现更加简洁的代码\",{\"1\":{\"906\":1}}],[\"为了更安全\",{\"1\":{\"431\":1}}],[\"为了节约内存\",{\"1\":{\"319\":1}}],[\"为了符合迪米特原则\",{\"1\":{\"319\":1}}],[\"为了避免创建一个与产品类层次平行的工厂类层次时\",{\"1\":{\"306\":1}}],[\"为了参加一些聚会\",{\"1\":{\"304\":1}}],[\"为\",{\"1\":{\"304\":1,\"332\":1}}],[\"为颜色创建一个接口\",{\"1\":{\"304\":1}}],[\"为形状创建一个接口\",{\"1\":{\"304\":1}}],[\"为软件开发的所有阶段提供模型化和可视化支持\",{\"1\":{\"302\":1}}],[\"为教学开发\",{\"1\":{\"260\":1}}],[\"委托模式\",{\"0\":{\"301\":1}}],[\"九\",{\"0\":{\"301\":1}}],[\"八种\",{\"0\":{\"750\":1}}],[\"八\",{\"0\":{\"300\":1}}],[\"八进制\",{\"1\":{\"63\":1}}],[\"七\",{\"0\":{\"299\":1,\"342\":1}}],[\"六\",{\"0\":{\"298\":1,\"341\":1}}],[\"管理方案\",{\"0\":{\"517\":1}}],[\"管理的\",{\"1\":{\"328\":1}}],[\"管理者模式\",{\"0\":{\"295\":1}}],[\"管理建造出来的实例的依赖关系\",{\"1\":{\"285\":1}}],[\"插件众多\",{\"1\":{\"738\":1}}],[\"插件进程\",{\"1\":{\"693\":1}}],[\"插件设计模式\",{\"0\":{\"292\":1}}],[\"插入操作在表的一端\",{\"1\":{\"357\":1}}],[\"插入和删除操作都限制在表的同一端进行\",{\"1\":{\"355\":1}}],[\"插入和删除需要移动元素\",{\"1\":{\"353\":1}}],[\"插画\",{\"1\":{\"132\":1}}],[\"><\",{\"1\":{\"894\":3,\"895\":1}}],[\">app<\",{\"1\":{\"880\":1}}],[\">abc\",{\"1\":{\"445\":1}}],[\">declarations\",{\"1\":{\"596\":1}}],[\">getter\",{\"1\":{\"596\":1}}],[\">>>\",{\"1\":{\"869\":1}}],[\">>\",{\"1\":{\"463\":1}}],[\">\",{\"1\":{\"288\":1,\"363\":2,\"479\":5,\"480\":4,\"593\":2,\"594\":2,\"595\":3,\"596\":10,\"627\":4,\"637\":1,\"638\":4,\"693\":3,\"720\":1,\"860\":2,\"867\":2,\"871\":5,\"873\":1,\"875\":3,\"880\":15,\"884\":1,\"893\":20,\"894\":7,\"895\":19}}],[\">=\",{\"1\":{\"252\":1,\"505\":1}}],[\"5px\",{\"1\":{\"927\":1}}],[\"500px\",{\"1\":{\"843\":1,\"927\":1}}],[\"5000\",{\"1\":{\"288\":1}}],[\"50\",{\"1\":{\"323\":1,\"893\":1,\"894\":1}}],[\"55\",{\"1\":{\"312\":1}}],[\"5\",{\"0\":{\"292\":1,\"697\":1,\"784\":1,\"877\":1,\"926\":1},\"1\":{\"303\":1,\"304\":1,\"305\":5,\"306\":2,\"307\":1,\"308\":1,\"310\":1,\"311\":1,\"312\":4,\"313\":2,\"315\":1,\"319\":1,\"320\":1,\"321\":3,\"322\":1,\"323\":11,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"478\":1,\"724\":2,\"736\":1,\"775\":1,\"843\":2,\"867\":2,\"893\":2,\"895\":1,\"927\":2,\"930\":1}}],[\"54\",{\"1\":{\"251\":1,\"252\":1}}],[\"共有6个级别\",{\"1\":{\"875\":1}}],[\"共336个\",{\"1\":{\"582\":1}}],[\"共同实现一个接口\",{\"1\":{\"286\":1,\"303\":1}}],[\"共享性\",{\"1\":{\"120\":1}}],[\"记录每一个请求\",{\"1\":{\"330\":1}}],[\"记录日志\",{\"1\":{\"330\":1,\"331\":1}}],[\"记录\",{\"1\":{\"315\":1}}],[\"记录可能记录到本地硬盘\",{\"1\":{\"286\":1,\"303\":1}}],[\"记录是用来指定主机名\",{\"1\":{\"117\":1}}],[\"屏蔽产品的具体实现\",{\"1\":{\"286\":1,\"303\":1}}],[\"以前dockerhub直接找镜像\",{\"1\":{\"581\":1}}],[\"以管理员身份打开powershell\",{\"1\":{\"481\":1}}],[\"以免发生莫名其妙的情况\",{\"1\":{\"449\":1}}],[\"以阿里云\",{\"1\":{\"449\":1}}],[\"以一页一页的方式显示一个文本文件\",{\"1\":{\"445\":1}}],[\"以一种非常通用的方式检查设计模式\",{\"1\":{\"334\":1}}],[\"以数据结构为中心的算法设计\",{\"1\":{\"363\":1}}],[\"以下是这种设计模式的实体\",{\"1\":{\"330\":1,\"331\":1,\"332\":1,\"333\":1}}],[\"以下是数据访问对象模式的参与者\",{\"1\":{\"329\":1}}],[\"以下是组合实体\",{\"1\":{\"328\":1}}],[\"以便保持所有格式一致\",{\"1\":{\"418\":1}}],[\"以便一次性更新数据库中的数值\",{\"1\":{\"333\":1}}],[\"以便复用它们\",{\"1\":{\"332\":1}}],[\"以便在适当的时候恢复对象\",{\"1\":{\"319\":1}}],[\"以便向外界提供功能接口\",{\"1\":{\"313\":1}}],[\"以减少内存占用和提高性能\",{\"1\":{\"312\":1}}],[\"以此来减少数据库调用\",{\"1\":{\"306\":1}}],[\"以及数据库可能有变化时\",{\"1\":{\"286\":1,\"303\":1}}],[\"以及这个汽车里面的具体实现\",{\"1\":{\"286\":1,\"303\":1}}],[\"以简洁描述一种编程语言的语言\",{\"1\":{\"272\":1}}],[\"范围有限制\",{\"1\":{\"285\":1}}],[\"易读性差\",{\"1\":{\"724\":1}}],[\"易于维护和升级\",{\"1\":{\"336\":1}}],[\"易于实现简单文法\",{\"1\":{\"316\":1}}],[\"易变类\",{\"1\":{\"306\":2}}],[\"易\",{\"1\":{\"305\":4}}],[\"易扩展\",{\"1\":{\"285\":1}}],[\"易移植性\",{\"1\":{\"130\":1}}],[\"套餐\",{\"1\":{\"285\":1}}],[\"套索工具\",{\"0\":{\"178\":1}}],[\"炸鸡翅等是不变的\",{\"1\":{\"285\":1}}],[\"薯条\",{\"1\":{\"285\":1}}],[\"汉堡\",{\"1\":{\"285\":1}}],[\"去医院看病\",{\"1\":{\"311\":1}}],[\"去肯德基\",{\"1\":{\"285\":1}}],[\"去色\",{\"1\":{\"185\":1}}],[\"但方便结合表单验证或者其他三方库\",{\"1\":{\"892\":1}}],[\"但它们的参数不一样\",{\"1\":{\"736\":1}}],[\"但不知道还有多少地方调用\",{\"1\":{\"720\":1}}],[\"但不能改变父类原有的功能\",{\"1\":{\"337\":1}}],[\"但你可以选择的\",{\"1\":{\"568\":1}}],[\"但文件中没有提示\",{\"1\":{\"436\":1}}],[\"但好多用户不知道怎么用\",{\"1\":{\"436\":1}}],[\"但经常需要在此对象结构上定义新的操作\",{\"1\":{\"325\":1}}],[\"但调用将以抽象类中定义的方式进行\",{\"1\":{\"324\":1}}],[\"但某些场合\",{\"1\":{\"315\":1}}],[\"但对于已有的类不一定很容易\",{\"1\":{\"306\":1}}],[\"但这是实现单例模式的最佳方法\",{\"1\":{\"305\":1}}],[\"但实现更简单\",{\"1\":{\"305\":1}}],[\"但容易产生垃圾对象\",{\"1\":{\"305\":1}}],[\"但加锁会影响效率\",{\"1\":{\"305\":1}}],[\"但是ts中必须一样\",{\"1\":{\"736\":1}}],[\"但是却不能够在它上面调用任意的方法\",{\"1\":{\"724\":1}}],[\"但是由于暂时性死区\",{\"1\":{\"704\":1}}],[\"但是该变量的值会为\",{\"1\":{\"704\":1}}],[\"但是如果在资源受限的设备上\",{\"1\":{\"693\":1}}],[\"但是使用passport能在更高层次上提供更多便利\",{\"1\":{\"568\":1}}],[\"但是通常都是有画框的\",{\"1\":{\"310\":1}}],[\"但是他又有了庙宇的功能\",{\"1\":{\"310\":1}}],[\"但是也不能确定有其他的方式\",{\"1\":{\"305\":1}}],[\"但是\",{\"1\":{\"305\":1,\"724\":2}}],[\"但是在性能上有所差异\",{\"1\":{\"305\":1}}],[\"但是将它们组合在一起的算法却相对稳定\",{\"1\":{\"285\":1}}],[\"但有利于说明抽象工厂模式\",{\"1\":{\"304\":1}}],[\"但要求可靠性要保障\",{\"1\":{\"125\":1}}],[\"使之立即生效\",{\"1\":{\"458\":1}}],[\"使软件系统或软件产品按原定计划和质量要求如期完成\",{\"1\":{\"400\":1}}],[\"使其满足新的需求\",{\"1\":{\"336\":1}}],[\"使代码易于维护\",{\"1\":{\"318\":1}}],[\"使效率提高\",{\"1\":{\"312\":1}}],[\"使它们都可以独立的变化\",{\"1\":{\"307\":1}}],[\"使用技巧\",{\"0\":{\"935\":1}}],[\"使用局部变量\",{\"1\":{\"922\":1}}],[\"使用全局变量\",{\"1\":{\"922\":1}}],[\"使用的是缩进语法\",{\"1\":{\"920\":1}}],[\"使用的语法树\",{\"1\":{\"738\":1}}],[\"使用不同的颜色标示出数据所处的区间\",{\"1\":{\"894\":1}}],[\"使用不同的标准\",{\"1\":{\"308\":1}}],[\"使用transform的盒子为奇数\",{\"1\":{\"845\":1}}],[\"使用tslint\",{\"0\":{\"739\":1}}],[\"使用eslint\",{\"0\":{\"740\":1}}],[\"使用enum\",{\"1\":{\"736\":1}}],[\"使用flutter\",{\"1\":{\"627\":1}}],[\"使用对齐目标的英文名称\",{\"1\":{\"613\":1}}],[\"使用颜色的名称或者16进制代码\",{\"1\":{\"613\":1}}],[\"使用harmonyos\",{\"1\":{\"602\":1}}],[\"使用中间件\",{\"1\":{\"568\":1}}],[\"使用卫士\",{\"1\":{\"568\":1}}],[\"使用2\",{\"1\":{\"436\":1}}],[\"使用如下命令添加远程仓库\",{\"1\":{\"425\":1}}],[\"使用查找方式find\",{\"1\":{\"418\":1}}],[\"使用传统的\",{\"1\":{\"418\":1}}],[\"使用三种基本控制结构构造程序\",{\"1\":{\"372\":1}}],[\"使用多个隔离的接口\",{\"1\":{\"339\":1}}],[\"使用继承时尽量遵循里氏替换原则\",{\"1\":{\"338\":1}}],[\"使用访问者模式将这些封装到类中\",{\"1\":{\"325\":1}}],[\"使用面向对象技术\",{\"1\":{\"320\":1}}],[\"使用命令模式可能会导致某些系统有过多的具体命令类\",{\"1\":{\"315\":1}}],[\"使用命令对象的入口\",{\"1\":{\"315\":1}}],[\"使用该外观类画出各种类型的形状\",{\"1\":{\"311\":1}}],[\"使用该工厂\",{\"1\":{\"303\":1,\"312\":1}}],[\"使用桥接模式再适合不过了\",{\"1\":{\"307\":1}}],[\"使用\",{\"0\":{\"554\":1},\"1\":{\"303\":1,\"304\":1,\"306\":1,\"307\":2,\"309\":1,\"310\":1,\"313\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":2,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1,\"556\":1,\"566\":1,\"613\":1,\"736\":3}}],[\"使用场景\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1}}],[\"使得对象的属性具有唯一标识\",{\"1\":{\"759\":1}}],[\"使得对象不需要知道链的结构\",{\"1\":{\"314\":1}}],[\"使得在一个文件中的类型定义能够联动到其他文件中的代码检查\",{\"1\":{\"738\":1}}],[\"使得系统功能模块相对独立\",{\"1\":{\"341\":1}}],[\"使得系统更加庞大\",{\"1\":{\"324\":1}}],[\"使得系统中类的个数成倍增加\",{\"1\":{\"286\":1,\"303\":1}}],[\"使得用户不需要关心状态的保存细节\",{\"1\":{\"319\":1}}],[\"使得他有\",{\"1\":{\"319\":1}}],[\"使得生灵可以动态地选择\",{\"1\":{\"307\":1}}],[\"使得实体类的功能独立于接口实现类\",{\"1\":{\"307\":1}}],[\"使得二者可以独立变化\",{\"1\":{\"307\":1}}],[\"使得同样的构建过程可以创建不同的表示\",{\"1\":{\"285\":1}}],[\"至多继承一个类\",{\"1\":{\"284\":1}}],[\"至少有一个\",{\"1\":{\"37\":1}}],[\"明明看到调用的是\",{\"1\":{\"284\":1}}],[\"会后不久改为es\",{\"1\":{\"775\":1}}],[\"会使用联合类型替代\",{\"1\":{\"724\":1}}],[\"会报错\",{\"1\":{\"724\":1}}],[\"会通知主进程\",{\"1\":{\"706\":1}}],[\"会将很多服务整合到一个进程中\",{\"1\":{\"693\":1}}],[\"会生成一个\",{\"1\":{\"628\":1}}],[\"会提交到远程仓库\",{\"1\":{\"420\":1}}],[\"会进入命令模式\",{\"1\":{\"486\":1}}],[\"会进入插入模式\",{\"1\":{\"486\":1}}],[\"会进入本地仓库\",{\"1\":{\"420\":1}}],[\"会进入暂存区\",{\"1\":{\"420\":1}}],[\"会自动更新\",{\"1\":{\"328\":1}}],[\"会增加系统的复杂度\",{\"1\":{\"286\":1,\"303\":1}}],[\"会有很多的建造类\",{\"1\":{\"285\":1}}],[\"会让系统非常零乱\",{\"1\":{\"284\":1}}],[\"会产生饥饿现象\",{\"1\":{\"56\":1}}],[\"就绪等待cpu\",{\"1\":{\"502\":1}}],[\"就像它在其它语言中那样\",{\"1\":{\"724\":1}}],[\"就像shell一样\",{\"1\":{\"486\":1}}],[\"就像图书与书架的关系\",{\"1\":{\"363\":1}}],[\"就需要考虑使用混合模式\",{\"1\":{\"323\":1}}],[\"就需要引入一个工厂类\",{\"1\":{\"286\":1,\"303\":1}}],[\"就很方便\",{\"1\":{\"311\":1}}],[\"就增加功能来说\",{\"1\":{\"310\":1}}],[\"就会被实例化\",{\"1\":{\"305\":1}}],[\"就不可避免地出现多个进程或线程同时操作一个文件的现象\",{\"1\":{\"305\":1}}],[\"就可以完成创建的对象\",{\"1\":{\"286\":1,\"303\":1}}],[\"就要有一个适配器将\",{\"1\":{\"284\":1}}],[\"就是利用各种工具\",{\"1\":{\"657\":1}}],[\"就是将一类对象抽象成一种数据类型的过程\",{\"1\":{\"366\":1}}],[\"就是\",{\"1\":{\"318\":1}}],[\"就是横平竖直\",{\"1\":{\"145\":1}}],[\"就是一种系统软件\",{\"1\":{\"119\":1}}],[\"就是软件工程\",{\"1\":{\"21\":1}}],[\"美国电器\",{\"1\":{\"284\":1}}],[\"推荐书籍\",{\"0\":{\"676\":1}}],[\"推荐\",{\"1\":{\"284\":1}}],[\"现在使用应用容器的\",{\"1\":{\"867\":1}}],[\"现在使用应用程序容器的\",{\"1\":{\"867\":1}}],[\"现在被视为普通元素\",{\"1\":{\"867\":1}}],[\"现在排序敏感\",{\"1\":{\"867\":1}}],[\"现在都出到5\",{\"1\":{\"851\":1}}],[\"现在国内某些原因进不去了\",{\"1\":{\"581\":1}}],[\"现在的日期\",{\"1\":{\"445\":1}}],[\"现在是各个国家通过\",{\"1\":{\"318\":1}}],[\"现在多了一个飞虎\",{\"1\":{\"284\":1}}],[\"现实中是不存在的\",{\"1\":{\"304\":1}}],[\"现代模块化设计模式\",{\"0\":{\"290\":1}}],[\"现存的对象\",{\"1\":{\"284\":1}}],[\"这一点不像less\",{\"1\":{\"924\":1}}],[\"这一层将调用顺序\",{\"1\":{\"311\":1}}],[\"这是一个网站\",{\"1\":{\"880\":1}}],[\"这意味着容器本身不再被视为模板的一部分\",{\"1\":{\"867\":1}}],[\"这会启用字距调整和可选的连字\",{\"1\":{\"845\":1}}],[\"这与\",{\"1\":{\"633\":1}}],[\"这里说的是scss\",{\"1\":{\"920\":1}}],[\"这里是注释\",{\"1\":{\"873\":1}}],[\"这里后续都用es代替\",{\"0\":{\"774\":1}}],[\"这里的n是指行数\",{\"1\":{\"487\":1}}],[\"这里的elementtype\",{\"1\":{\"366\":1}}],[\"这里\",{\"1\":{\"418\":1,\"487\":1}}],[\"这就是访问者模式\",{\"1\":{\"325\":1}}],[\"这就是一个顶层的逻辑骨架\",{\"1\":{\"324\":1}}],[\"这在一定程度上增加了系统的复杂性\",{\"1\":{\"317\":1}}],[\"这两种类型的类可被结构化改变而互不影响\",{\"1\":{\"307\":1}}],[\"这对于全新的类不是很难\",{\"1\":{\"306\":1}}],[\"这种问题\",{\"1\":{\"861\":1}}],[\"这种处理方法不直观\",{\"1\":{\"724\":1}}],[\"这种类型的设计模式属于行为型模式\",{\"1\":{\"321\":1,\"324\":1,\"325\":1}}],[\"这种类型的设计模式属于结构型模式\",{\"1\":{\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1}}],[\"这种无法抵御变化的紧耦合是不合适的\",{\"1\":{\"315\":1}}],[\"这种无法抵御变化的紧耦合的设计就不太合适\",{\"1\":{\"315\":1}}],[\"这种模式用于应用程序的分层开发\",{\"1\":{\"326\":1}}],[\"这种模式用于顺序访问集合对象的元素\",{\"1\":{\"317\":1}}],[\"这种模式提供了一个中介类\",{\"1\":{\"318\":1}}],[\"这种模式被用在\",{\"1\":{\"316\":1}}],[\"这种模式实现了一个表达式接口\",{\"1\":{\"316\":1}}],[\"这种模式给予请求的类型\",{\"1\":{\"314\":1}}],[\"这种模式创建了一个装饰类\",{\"1\":{\"310\":1}}],[\"这种模式创建了一个包含自己对象组的类\",{\"1\":{\"309\":1}}],[\"这种模式允许开发人员使用不同的标准来过滤一组对象\",{\"1\":{\"308\":1}}],[\"这种模式涉及到一个作为桥接的接口\",{\"1\":{\"307\":1}}],[\"这种模式涉及到一个单一的类\",{\"1\":{\"305\":1,\"311\":1}}],[\"这种模式是实现了一个原型接口\",{\"1\":{\"306\":1}}],[\"这种实现方式还没有被广泛采用\",{\"1\":{\"305\":1}}],[\"这种实现最大的问题就是不支持多线程\",{\"1\":{\"305\":1}}],[\"这种方式是\",{\"1\":{\"305\":1}}],[\"这种方式是最基本的实现方式\",{\"1\":{\"305\":1}}],[\"这种方式相比第\",{\"1\":{\"305\":1}}],[\"这种方式同样利用了\",{\"1\":{\"305\":1}}],[\"这种方式只适用于静态域的情况\",{\"1\":{\"305\":1}}],[\"这种方式能达到双检锁方式一样的功效\",{\"1\":{\"305\":1}}],[\"这种方式采用双锁机制\",{\"1\":{\"305\":1}}],[\"这种方式比较常用\",{\"1\":{\"305\":1}}],[\"这种方式具备很好的\",{\"1\":{\"305\":1}}],[\"这种方式\",{\"1\":{\"305\":1}}],[\"这样写可以达到的效果是如果安装了gcf\",{\"1\":{\"880\":1}}],[\"这样可以在很大程度上提高应用程序的性能\",{\"1\":{\"332\":1}}],[\"这样可以在以后将对象恢复到原先保存的状态\",{\"1\":{\"319\":1}}],[\"这样访问者对象就可以处理元素对象上的操作\",{\"1\":{\"325\":1}}],[\"这样的\",{\"1\":{\"322\":1}}],[\"这样做的目的就是为了允许用户取消不确定或者错误的操作\",{\"1\":{\"319\":1}}],[\"这样势必会导致系统的结构变得很复杂\",{\"1\":{\"318\":1}}],[\"这样既可以做到不暴露集合的内部结构\",{\"1\":{\"317\":1}}],[\"这样就可以构建一个解释器\",{\"1\":{\"316\":1}}],[\"这样该类就不会被实例化\",{\"1\":{\"305\":1}}],[\"这样才能发现设计中存在的问题\",{\"1\":{\"4\":1}}],[\"这个可能是因为项目中的typescript版本比较低\",{\"1\":{\"861\":1}}],[\"这个属性定义了项目使用的kotlin版本\",{\"1\":{\"639\":1}}],[\"这个测试可用\",{\"1\":{\"582\":1}}],[\"这个是重点\",{\"1\":{\"366\":1}}],[\"这个原则是开闭原则的基础\",{\"1\":{\"338\":1}}],[\"这个乌龟就是观察者\",{\"1\":{\"320\":1}}],[\"这个解释器使用该标识来解释语言中的句子\",{\"1\":{\"316\":1}}],[\"这个接口使得这一子系统更加容易使用\",{\"1\":{\"311\":1}}],[\"这个资源包括数据\",{\"1\":{\"306\":1}}],[\"这个时候页面才会被替换\",{\"1\":{\"706\":1}}],[\"这个时候华为已经出鸿蒙next了\",{\"1\":{\"600\":1}}],[\"这个时候ctrl\",{\"1\":{\"487\":1}}],[\"这个时候\",{\"1\":{\"305\":1}}],[\"这个类提供了一种访问其唯一的对象的方式\",{\"1\":{\"305\":1}}],[\"这个复杂对象的各个部分经常面临着剧烈的变化\",{\"1\":{\"285\":1}}],[\"这些行为就只好使用多重的条件选择语句来实现\",{\"1\":{\"323\":1}}],[\"这些类必须有一个工厂对象加以控制\",{\"1\":{\"312\":1}}],[\"这些对象的类\",{\"1\":{\"325\":2}}],[\"这些对象的状态大部分可以外部化\",{\"1\":{\"312\":1}}],[\"这些对象是不可分辨的\",{\"1\":{\"312\":1}}],[\"这些对象可以按照内蕴状态分为很多组\",{\"1\":{\"312\":1}}],[\"这些对象消耗大量内存\",{\"1\":{\"312\":1}}],[\"这些具体的上衣其实也都是上衣\",{\"1\":{\"304\":1}}],[\"这些也都是成套的\",{\"1\":{\"304\":1}}],[\"这些源类不一定有一致的接口\",{\"1\":{\"284\":1}}],[\"这并不是什么好事\",{\"1\":{\"286\":1,\"303\":1}}],[\"这时会出现函数重载的情况\",{\"1\":{\"736\":1}}],[\"这时画\",{\"1\":{\"310\":1}}],[\"这时候初始化\",{\"1\":{\"305\":1}}],[\"这时应该考虑使用适配器模式\",{\"1\":{\"284\":1}}],[\"这时就需要适配器模式\",{\"1\":{\"284\":1}}],[\"想将其标准化\",{\"1\":{\"774\":1}}],[\"想不通\",{\"1\":{\"670\":1}}],[\"想查询的单词\",{\"1\":{\"487\":1}}],[\"想放弃修改\",{\"1\":{\"421\":1}}],[\"想通过一个中间类来封装多个类中的行为\",{\"1\":{\"318\":1}}],[\"想在访问一个类时做一些控制\",{\"1\":{\"313\":1}}],[\"想象一下\",{\"1\":{\"305\":1}}],[\"想象一下水下的气泡往上冒的过程\",{\"1\":{\"251\":1}}],[\"想要达到这样的效果\",{\"1\":{\"336\":1}}],[\"想要使用\",{\"1\":{\"284\":1}}],[\"想要建立一个可以重复使用的类\",{\"1\":{\"284\":1}}],[\"何时使用中间件呢\",{\"1\":{\"568\":1}}],[\"何时使用\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1}}],[\"放在树的两侧\",{\"1\":{\"369\":1}}],[\"放到新的环境中\",{\"1\":{\"284\":1}}],[\"放大画笔\",{\"1\":{\"182\":1}}],[\"放大\",{\"1\":{\"174\":1}}],[\"意图\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1}}],[\"读取二进制流\",{\"1\":{\"306\":1}}],[\"读卡器作为单独的一个类而存在\",{\"1\":{\"284\":1}}],[\"读写存取等\",{\"1\":{\"121\":1}}],[\"像\",{\"1\":{\"932\":1}}],[\"像在360这种双核浏览器中\",{\"1\":{\"880\":1}}],[\"像现实生活中的读卡器\",{\"1\":{\"284\":1}}],[\"像素\",{\"1\":{\"154\":1}}],[\"像素形式\",{\"1\":{\"135\":1}}],[\"详述\",{\"0\":{\"283\":1}}],[\"详设\",{\"0\":{\"25\":1}}],[\"特殊概念\",{\"0\":{\"655\":1}}],[\"特殊粘贴\",{\"1\":{\"418\":1}}],[\"特殊矩阵\",{\"0\":{\"348\":1}}],[\"特点\",{\"1\":{\"352\":1}}],[\"特性\",{\"0\":{\"643\":1},\"1\":{\"305\":1}}],[\"特别当一个类引用不支持串行化的间接对象\",{\"1\":{\"306\":1}}],[\"特别是只需要通过\",{\"1\":{\"286\":1,\"303\":1}}],[\"特别关注表示层\",{\"0\":{\"282\":1}}],[\"特征\",{\"0\":{\"85\":1}}],[\"模块化\",{\"0\":{\"834\":1},\"1\":{\"674\":1}}],[\"模块\",{\"1\":{\"613\":1}}],[\"模块将这个模式封装并标准化为熟悉的\",{\"1\":{\"568\":1}}],[\"模板指令\",{\"1\":{\"867\":1}}],[\"模板支持多个根节点\",{\"1\":{\"866\":1}}],[\"模板方法模式\",{\"0\":{\"823\":1}}],[\"模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤\",{\"1\":{\"324\":1}}],[\"模板字符串\",{\"1\":{\"724\":1}}],[\"模板\",{\"1\":{\"324\":2}}],[\"模板模式\",{\"0\":{\"324\":1},\"1\":{\"281\":1}}],[\"模型对象\",{\"1\":{\"329\":1}}],[\"模型代表一个存取数据的对象或\",{\"1\":{\"326\":1}}],[\"模型\",{\"1\":{\"318\":1,\"326\":2}}],[\"模拟器\",{\"0\":{\"598\":1}}],[\"模拟\",{\"1\":{\"315\":1}}],[\"模糊了简单元素和复杂元素的概念\",{\"1\":{\"309\":1}}],[\"模式切换\",{\"0\":{\"486\":1}}],[\"模式\",{\"0\":{\"289\":1,\"326\":1,\"329\":1},\"1\":{\"101\":3,\"282\":1,\"326\":1}}],[\"空格\",{\"1\":{\"884\":1}}],[\"空标记\",{\"1\":{\"872\":1}}],[\"空对象模式\",{\"0\":{\"322\":1},\"1\":{\"281\":1}}],[\"空间复杂度分析\",{\"1\":{\"363\":1}}],[\"空间复杂度s\",{\"1\":{\"240\":1}}],[\"空间局部性\",{\"1\":{\"53\":1}}],[\"空间换时间\",{\"1\":{\"49\":2}}],[\"状态管理\",{\"1\":{\"629\":1}}],[\"状态\",{\"1\":{\"610\":1,\"612\":1}}],[\"状态图\",{\"1\":{\"302\":1}}],[\"状态模式对\",{\"1\":{\"321\":1}}],[\"状态模式的结构与实现都较为复杂\",{\"1\":{\"321\":1}}],[\"状态模式的使用必然会增加系统类和对象的个数\",{\"1\":{\"321\":1}}],[\"状态模式的实现类的方法\",{\"1\":{\"321\":1}}],[\"状态模式和命令模式一样\",{\"1\":{\"321\":1}}],[\"状态模式一般和对象的状态有关\",{\"1\":{\"321\":1}}],[\"状态模式\",{\"0\":{\"321\":1,\"828\":1},\"1\":{\"281\":1}}],[\"状态栏\",{\"1\":{\"133\":1,\"169\":1}}],[\"中间一个\",{\"1\":{\"893\":1}}],[\"中间件可以在请求到达路由处理程序之前对请求进行修改或者在路由处理程序之后对响应进行修改\",{\"1\":{\"568\":1}}],[\"中间件是一种用于在请求到达路由处理程序之前或之后执行一些通用逻辑的机制\",{\"1\":{\"568\":1}}],[\"中使用了\",{\"1\":{\"864\":1}}],[\"中会根据\",{\"1\":{\"864\":1}}],[\"中settings\",{\"1\":{\"627\":1}}],[\"中下载flutter和dart插件\",{\"1\":{\"627\":1}}],[\"中勾选\",{\"1\":{\"596\":1}}],[\"中文官网地址\",{\"1\":{\"573\":1}}],[\"中括号\",{\"1\":{\"487\":2}}],[\"中缀表达式转换为后缀表达式\",{\"0\":{\"356\":1}}],[\"中查找服务\",{\"1\":{\"332\":1}}],[\"中对\",{\"1\":{\"324\":1}}],[\"中已经有了对观察者模式的支持类\",{\"1\":{\"320\":1}}],[\"中介者会庞大\",{\"1\":{\"318\":1}}],[\"中介者使各对象不需要显式地相互引用\",{\"1\":{\"318\":1}}],[\"中介者模式属于行为型模式\",{\"1\":{\"318\":1}}],[\"中介者模式\",{\"0\":{\"300\":1,\"318\":1,\"826\":1},\"1\":{\"281\":1}}],[\"中如果碰到可以用\",{\"1\":{\"316\":1}}],[\"中每一个按钮都是一条命令\",{\"1\":{\"315\":1}}],[\"中遇到很多应用\",{\"1\":{\"314\":1}}],[\"中\",{\"1\":{\"306\":1,\"309\":1,\"314\":1,\"627\":1,\"628\":1,\"637\":1,\"866\":1,\"867\":2}}],[\"中可以使用\",{\"1\":{\"306\":1}}],[\"中最简单的设计模式之一\",{\"1\":{\"305\":1}}],[\"中的变量是没有类型的\",{\"1\":{\"749\":1}}],[\"中的配置编译整个项目\",{\"1\":{\"738\":1}}],[\"中的后退\",{\"1\":{\"319\":1}}],[\"中的事件冒泡\",{\"1\":{\"314\":1}}],[\"中的形状的克隆\",{\"1\":{\"306\":1}}],[\"中的计数器\",{\"1\":{\"305\":1}}],[\"中的\",{\"1\":{\"284\":1,\"285\":1,\"306\":1,\"312\":1,\"315\":1,\"317\":1,\"323\":1,\"561\":1,\"867\":1}}],[\"中提供了\",{\"1\":{\"284\":1}}],[\"中国科学技术大学\",{\"1\":{\"545\":1}}],[\"中国科技大学\",{\"1\":{\"545\":1}}],[\"中国加入\",{\"1\":{\"318\":1}}],[\"中国\",{\"1\":{\"284\":1}}],[\"中央处理单元\",{\"1\":{\"35\":1}}],[\"命名的过程本身就是一个抽象和思考的过程\",{\"1\":{\"942\":1}}],[\"命名空间嵌套\",{\"1\":{\"923\":1}}],[\"命名空间\",{\"1\":{\"871\":1}}],[\"命名\",{\"0\":{\"660\":1,\"942\":1}}],[\"命令将显示所有进程的详细信息\",{\"1\":{\"445\":1}}],[\"命令模式下\",{\"1\":{\"487\":1}}],[\"命令模式\",{\"0\":{\"315\":1,\"821\":1},\"1\":{\"281\":1,\"486\":1}}],[\"命中与未命中概率相加\",{\"1\":{\"54\":1}}],[\"命中率及平均时间\",{\"1\":{\"54\":1}}],[\"享元模式尝试重用现有的同类对象\",{\"1\":{\"312\":1}}],[\"享元模式\",{\"0\":{\"312\":1,\"824\":1},\"1\":{\"280\":1}}],[\"过渡\",{\"1\":{\"848\":1}}],[\"过滤\",{\"1\":{\"867\":1}}],[\"过滤管理器管理过滤器和过滤器链\",{\"1\":{\"331\":1}}],[\"过滤管理器\",{\"1\":{\"331\":1}}],[\"过滤器链带有多个过滤器\",{\"1\":{\"331\":1}}],[\"过滤器链\",{\"1\":{\"331\":1}}],[\"过滤器在请求处理程序执行请求之前或之后\",{\"1\":{\"331\":1}}],[\"过滤器\",{\"1\":{\"331\":1}}],[\"过滤器可以做认证\",{\"1\":{\"331\":1}}],[\"过滤器模式\",{\"0\":{\"308\":1},\"1\":{\"280\":1}}],[\"过多地使用适配器\",{\"1\":{\"284\":1}}],[\"过程\",{\"0\":{\"403\":1},\"1\":{\"59\":1}}],[\"适合中小型企业\",{\"1\":{\"623\":1}}],[\"适配器不是在详细设计时添加的\",{\"1\":{\"284\":1}}],[\"适配器继承或依赖已有的对象\",{\"1\":{\"284\":1}}],[\"适配器模式主要改变所考虑对象的接口\",{\"1\":{\"313\":1}}],[\"适配器模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作\",{\"1\":{\"284\":1}}],[\"适配器模式\",{\"0\":{\"284\":1,\"829\":1},\"1\":{\"280\":1}}],[\"适用场景\",{\"1\":{\"250\":1}}],[\"类选择器\",{\"1\":{\"843\":1}}],[\"类类型接口\",{\"0\":{\"731\":1}}],[\"类型断言\",{\"1\":{\"724\":1}}],[\"类型元素数组\",{\"1\":{\"724\":2}}],[\"类型注解\",{\"0\":{\"723\":1}}],[\"类型转换\",{\"0\":{\"680\":1},\"1\":{\"724\":1}}],[\"类型\",{\"0\":{\"647\":1,\"720\":1},\"1\":{\"724\":4}}],[\"类型名称\",{\"1\":{\"366\":1}}],[\"类别+功能\",{\"1\":{\"613\":1}}],[\"类似web前端工程依赖\",{\"0\":{\"628\":1}}],[\"类似小程序\",{\"1\":{\"602\":1}}],[\"类似android\",{\"1\":{\"591\":1}}],[\"类似科学计数法\",{\"1\":{\"68\":1}}],[\"类与接口\",{\"1\":{\"336\":1}}],[\"类检索到的数据\",{\"1\":{\"329\":1}}],[\"类充当抽象角色\",{\"1\":{\"310\":1}}],[\"类来演示业务代表模式\",{\"1\":{\"327\":1}}],[\"类来创建规则\",{\"1\":{\"316\":1}}],[\"类来创建和打印员工的层次结构\",{\"1\":{\"309\":1}}],[\"类来接受并执行命令\",{\"1\":{\"315\":1}}],[\"类来获取存储在\",{\"1\":{\"306\":1}}],[\"类画出不同颜色的圆\",{\"1\":{\"307\":1}}],[\"类初始化需要消化非常多的资源\",{\"1\":{\"306\":1}}],[\"类的行为是基于它的状态改变的\",{\"1\":{\"321\":1}}],[\"类的个数成对增加\",{\"1\":{\"317\":1}}],[\"类的对象\",{\"1\":{\"313\":1}}],[\"类的实体装饰类\",{\"1\":{\"310\":1}}],[\"类的\",{\"1\":{\"306\":1}}],[\"类还可能在其他的地方被主动使用从而被加载\",{\"1\":{\"305\":1}}],[\"类加载时就实例化\",{\"1\":{\"305\":1}}],[\"类加载时就初始化\",{\"1\":{\"305\":1}}],[\"类没有被主动使用\",{\"1\":{\"305\":1}}],[\"类被装载了\",{\"1\":{\"305\":2}}],[\"类获取唯一的对象\",{\"1\":{\"305\":1}}],[\"类\",{\"0\":{\"650\":1,\"737\":1},\"1\":{\"305\":2,\"309\":1,\"310\":1,\"318\":1,\"319\":3,\"320\":2,\"321\":1,\"322\":1,\"323\":1,\"333\":1}}],[\"类名等\",{\"1\":{\"596\":1}}],[\"类名\",{\"1\":{\"302\":1}}],[\"类图\",{\"1\":{\"302\":1}}],[\"类和对象的组合\",{\"1\":{\"280\":1}}],[\"工作区\",{\"1\":{\"420\":1}}],[\"工作了\",{\"1\":{\"304\":1}}],[\"工程化\",{\"1\":{\"674\":1}}],[\"工程\",{\"1\":{\"405\":1}}],[\"工厂模式使其创建过程延迟到子类进行\",{\"1\":{\"286\":1,\"303\":1}}],[\"工厂模式\",{\"0\":{\"286\":1,\"303\":1},\"1\":{\"279\":1}}],[\"工具中安装typescript插件\",{\"1\":{\"721\":1}}],[\"工具属性\",{\"1\":{\"720\":1}}],[\"工具是拿来用的\",{\"1\":{\"483\":1}}],[\"工具组工具切换\",{\"1\":{\"184\":1}}],[\"工具与操作\",{\"0\":{\"147\":1}}],[\"工具\",{\"1\":{\"145\":1,\"168\":1}}],[\"工具箱快捷键\",{\"1\":{\"175\":1}}],[\"工具箱中不同的工具针对的图像类型也不同\",{\"1\":{\"154\":1}}],[\"工具箱\",{\"0\":{\"175\":1},\"1\":{\"133\":1,\"169\":1}}],[\"创建配置文件\",{\"1\":{\"739\":1}}],[\"创建工程\",{\"0\":{\"595\":1}}],[\"创建或修改\",{\"1\":{\"583\":1}}],[\"创建各个模块的entity实体\",{\"1\":{\"576\":1}}],[\"创建所需的各个模块\",{\"1\":{\"576\":1}}],[\"创建目录\",{\"1\":{\"477\":1}}],[\"创建网站\",{\"0\":{\"451\":1}}],[\"创建并切换到新分支\",{\"1\":{\"421\":1}}],[\"创建传输对象\",{\"1\":{\"333\":1}}],[\"创建服务定位器\",{\"1\":{\"332\":1}}],[\"创建服务接口\",{\"1\":{\"332\":1}}],[\"创建缓存\",{\"1\":{\"332\":1}}],[\"创建过滤管理器\",{\"1\":{\"331\":1}}],[\"创建过滤器链\",{\"1\":{\"331\":1}}],[\"创建过滤器接口\",{\"1\":{\"331\":1}}],[\"创建过程在其子类执行\",{\"1\":{\"286\":1,\"303\":1}}],[\"创建前端控制器\",{\"1\":{\"330\":1}}],[\"创建调度器\",{\"1\":{\"330\":1}}],[\"创建数据库和数据库连接\",{\"1\":{\"576\":1}}],[\"创建数据访问对象接口\",{\"1\":{\"329\":1}}],[\"创建数值对象\",{\"1\":{\"329\":1}}],[\"创建使用组合实体的客户端类\",{\"1\":{\"328\":1}}],[\"创建组合实体\",{\"1\":{\"328\":1}}],[\"创建粗粒度对象\",{\"1\":{\"328\":1}}],[\"创建依赖对象\",{\"1\":{\"328\":1}}],[\"创建客户端\",{\"1\":{\"327\":1,\"331\":1}}],[\"创建业务对象\",{\"1\":{\"333\":1}}],[\"创建业务代表\",{\"1\":{\"327\":1}}],[\"创建业务查询服务\",{\"1\":{\"327\":1}}],[\"创建控制器\",{\"1\":{\"326\":1}}],[\"创建视图\",{\"1\":{\"326\":1,\"330\":1}}],[\"创建模型\",{\"1\":{\"326\":1}}],[\"创建实体服务\",{\"1\":{\"332\":1}}],[\"创建实体服务类\",{\"1\":{\"327\":1}}],[\"创建实体过滤器\",{\"1\":{\"331\":1}}],[\"创建实体观察者类\",{\"1\":{\"320\":1}}],[\"创建实现了上述类的实体访问者\",{\"1\":{\"325\":1}}],[\"创建实现了上述接口的实体类\",{\"1\":{\"316\":1,\"329\":1}}],[\"创建实现了\",{\"1\":{\"307\":2,\"308\":1,\"310\":1,\"315\":1,\"317\":1}}],[\"创建实现接口的实体类\",{\"1\":{\"303\":1,\"304\":2,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"321\":1,\"323\":1}}],[\"创建中介类\",{\"1\":{\"318\":1}}],[\"创建接口\",{\"1\":{\"317\":1}}],[\"创建命令调用类\",{\"1\":{\"315\":1}}],[\"创建不同类型的记录器\",{\"1\":{\"314\":1}}],[\"创建抽象的记录器类\",{\"1\":{\"314\":1}}],[\"创建桥接实现接口\",{\"1\":{\"307\":1}}],[\"创建\",{\"1\":{\"305\":1,\"309\":1,\"318\":1,\"319\":3,\"320\":2,\"321\":1,\"322\":1,\"323\":1,\"327\":1,\"331\":1}}],[\"创建的一个对象需要消耗的资源过多\",{\"1\":{\"305\":1}}],[\"创建扩展了上述类的实体类\",{\"1\":{\"322\":1,\"324\":1,\"325\":1}}],[\"创建扩展了上面抽象类的实体类\",{\"1\":{\"306\":1}}],[\"创建扩展了该记录器类的实体类\",{\"1\":{\"314\":1}}],[\"创建扩展了\",{\"1\":{\"304\":1,\"310\":1}}],[\"创建一个名称为example的spider\",{\"1\":{\"554\":1}}],[\"创建一个spider\",{\"1\":{\"554\":1}}],[\"创建一个项目\",{\"1\":{\"554\":1}}],[\"创建一个视图\",{\"1\":{\"326\":1}}],[\"创建一个抽象类\",{\"1\":{\"322\":1,\"324\":1}}],[\"创建一个表达式接口\",{\"1\":{\"316\":1}}],[\"创建一个请求类\",{\"1\":{\"315\":1}}],[\"创建一个命令接口\",{\"1\":{\"315\":1}}],[\"创建一个外观类\",{\"1\":{\"311\":1}}],[\"创建一个类\",{\"1\":{\"306\":1,\"308\":1}}],[\"创建一个实现了\",{\"1\":{\"306\":1}}],[\"创建一个\",{\"1\":{\"305\":1}}],[\"创建一个工厂创造器\",{\"1\":{\"304\":1}}],[\"创建一个工厂\",{\"1\":{\"303\":1,\"312\":1}}],[\"创建一个接口\",{\"1\":{\"303\":1,\"308\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"321\":1,\"323\":1}}],[\"创建类\",{\"1\":{\"288\":1}}],[\"创建对象\",{\"1\":{\"288\":1}}],[\"创建对象的最佳方式\",{\"1\":{\"285\":1}}],[\"创建和提供实例\",{\"1\":{\"285\":1}}],[\"创建型模式creational\",{\"0\":{\"279\":1}}],[\"创作设计模式\",{\"0\":{\"279\":1}}],[\"创造了javascript\",{\"1\":{\"774\":1}}],[\"创造\",{\"1\":{\"22\":1}}],[\"知道基本怎么用就ok\",{\"1\":{\"448\":1}}],[\"知道使用它的目的\",{\"1\":{\"276\":1}}],[\"知识储备\",{\"1\":{\"21\":1}}],[\"巴科斯范式\",{\"1\":{\"272\":1}}],[\"巴黎奥运会\",{\"0\":{\"16\":1}}],[\"把使用transform的盒子宽高改为奇数\",{\"1\":{\"845\":1}}],[\"把请求发至网络进程\",{\"1\":{\"706\":1}}],[\"把鼠标聚焦后\",{\"1\":{\"462\":1}}],[\"把表头区域以及本次循环体内的数据区域进行合并\",{\"1\":{\"418\":1}}],[\"把学生详细信息输出到控制台\",{\"1\":{\"326\":1}}],[\"把它们一个个封装起来\",{\"1\":{\"323\":1}}],[\"把在元素之间游走的责任交给迭代器\",{\"1\":{\"317\":1}}],[\"把高翠兰的外貌抽象出来\",{\"1\":{\"313\":1}}],[\"把这种多角度分类分离出来\",{\"1\":{\"307\":1}}],[\"把一种高级语言程序等价地转换成另一种低级语言程序\",{\"1\":{\"272\":1}}],[\"把某一种语言程序\",{\"1\":{\"272\":1}}],[\"源语言程序\",{\"1\":{\"272\":1}}],[\"翻译程序\",{\"1\":{\"272\":1}}],[\"优秀的扩展性\",{\"1\":{\"325\":1}}],[\"优秀的扩展能力\",{\"1\":{\"307\":1}}],[\"优点是基本不会出错\",{\"1\":{\"418\":1}}],[\"优点是速度快\",{\"1\":{\"418\":1}}],[\"优点\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":3,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1,\"353\":1}}],[\"优先级已更改\",{\"1\":{\"867\":1}}],[\"优先使用对象组合而不是继承\",{\"1\":{\"277\":1}}],[\"优先替换\",{\"1\":{\"54\":1}}],[\"优化\",{\"1\":{\"271\":1}}],[\"课程内容主要是原理性质\",{\"1\":{\"271\":1}}],[\"函数的扩展\",{\"0\":{\"786\":1}}],[\"函数对象的length属性是其声明的参数的个数\",{\"1\":{\"761\":1}}],[\"函数类型接口\",{\"0\":{\"729\":1},\"1\":{\"726\":1}}],[\"函数中对传入的参数进行各种判断假设\",{\"1\":{\"720\":1}}],[\"函数和\",{\"1\":{\"647\":1}}],[\"函数注释生成\",{\"1\":{\"596\":1}}],[\"函数\",{\"0\":{\"269\":1,\"649\":1,\"736\":1,\"801\":1,\"930\":1},\"1\":{\"672\":1,\"723\":1}}],[\"函数式\",{\"1\":{\"260\":1}}],[\"传输对象\",{\"1\":{\"333\":1}}],[\"传输对象是只读的\",{\"1\":{\"333\":1}}],[\"传输对象是一个具有\",{\"1\":{\"333\":1}}],[\"传输对象也被称为数值对象\",{\"1\":{\"333\":1}}],[\"传输对象模式\",{\"0\":{\"333\":1},\"1\":{\"282\":1}}],[\"传输\",{\"0\":{\"268\":1}}],[\"循环次数合并起来存储文件\",{\"1\":{\"418\":1}}],[\"循环的控制结构进行连接\",{\"1\":{\"372\":1}}],[\"循环三种基本控制结构构造\",{\"1\":{\"372\":1}}],[\"循环队列\",{\"0\":{\"359\":1}}],[\"循环链表\",{\"1\":{\"354\":1}}],[\"循环\",{\"1\":{\"267\":1}}],[\"循环冗余校验码crc\",{\"0\":{\"73\":1}}],[\"非封闭类型标记\",{\"1\":{\"872\":1}}],[\"非静态局部变量存储在栈里\",{\"1\":{\"265\":1}}],[\"非对称加密技术\",{\"0\":{\"113\":1}}],[\"固定宽度布局\",{\"0\":{\"853\":1}}],[\"固定明确无二义\",{\"1\":{\"263\":1}}],[\"固定的输入产生确定的输出\",{\"1\":{\"239\":1}}],[\"话\",{\"1\":{\"263\":1}}],[\"与其它行内元素位于同一行\",{\"1\":{\"909\":1}}],[\"与value属性根本不同\",{\"1\":{\"895\":1}}],[\"与object的区别\",{\"1\":{\"760\":1}}],[\"与任何特定值类型没有任何关联\",{\"1\":{\"749\":1}}],[\"与过往的开发经验相结合\",{\"1\":{\"623\":1}}],[\"与实现操作的算法和编程语言都无关\",{\"1\":{\"366\":1}}],[\"与数据存储的物理结构无关\",{\"1\":{\"366\":1}}],[\"与数据库的连接等\",{\"1\":{\"305\":1}}],[\"与存放数据的机器无关\",{\"1\":{\"366\":1}}],[\"与备忘录管理类耦合\",{\"1\":{\"319\":1}}],[\"与通过对一个类进行实例化来构造新对象不同的是\",{\"1\":{\"306\":1}}],[\"与单一职责原则冲突\",{\"1\":{\"305\":1}}],[\"与工厂模式的区别是\",{\"1\":{\"285\":1}}],[\"与\",{\"1\":{\"263\":1,\"315\":1,\"445\":1,\"739\":1,\"920\":1}}],[\"与电梯不同\",{\"1\":{\"56\":1}}],[\"编码\",{\"0\":{\"661\":1}}],[\"编码中的问题\",{\"0\":{\"641\":1}}],[\"编辑\",{\"1\":{\"423\":1}}],[\"编程技巧\",{\"0\":{\"838\":1}}],[\"编程原则\",{\"0\":{\"335\":1}}],[\"编程语言创建应用程序的编程人员提供的实用指南\",{\"1\":{\"334\":1}}],[\"编程环境中非常常用的设计模式\",{\"1\":{\"317\":1}}],[\"编译后\",{\"1\":{\"923\":1,\"929\":1}}],[\"编译语言\",{\"1\":{\"749\":1}}],[\"编译时产生的问题与\",{\"1\":{\"736\":1}}],[\"编译时类型检查\",{\"1\":{\"720\":1}}],[\"编译时错误\",{\"1\":{\"305\":1}}],[\"编译build后生效\",{\"0\":{\"666\":1}}],[\"编译\",{\"0\":{\"534\":1},\"1\":{\"721\":1}}],[\"编译器\",{\"1\":{\"316\":1,\"749\":1}}],[\"编译程序\",{\"1\":{\"272\":1}}],[\"编译原理\",{\"0\":{\"270\":1}}],[\"编译型语言与解释型语言的区别\",{\"0\":{\"261\":1}}],[\"编写干净\",{\"1\":{\"28\":1}}],[\"编写文档的能力\",{\"1\":{\"27\":1}}],[\"名称取自list\",{\"1\":{\"260\":1}}],[\"名称取自formula\",{\"1\":{\"260\":1}}],[\"年\",{\"1\":{\"260\":2}}],[\"目前的chrome架构\",{\"1\":{\"693\":1}}],[\"目前选择5\",{\"1\":{\"595\":1}}],[\"目前最新版本应该是\",{\"1\":{\"431\":1}}],[\"目前还在\",{\"1\":{\"260\":1}}],[\"目标路径\",{\"1\":{\"477\":1}}],[\"目标对象\",{\"1\":{\"320\":1}}],[\"目标\",{\"1\":{\"276\":1}}],[\"目标程序\",{\"1\":{\"272\":1}}],[\"目标代码生成\",{\"1\":{\"271\":1}}],[\"目录内没有文档\",{\"1\":{\"445\":1}}],[\"目录名删除目录及子目录\",{\"1\":{\"445\":1}}],[\"目录名\",{\"1\":{\"445\":1}}],[\"目录下会生成备份文件\",{\"1\":{\"431\":1}}],[\"目录\",{\"1\":{\"121\":1}}],[\"抽象类\",{\"1\":{\"720\":1}}],[\"抽象类依赖实现类\",{\"1\":{\"307\":1}}],[\"抽象\",{\"1\":{\"366\":1}}],[\"抽象运算\",{\"1\":{\"366\":1}}],[\"抽象好了可大大提高开发效率\",{\"1\":{\"366\":1}}],[\"抽象数据类型\",{\"0\":{\"366\":1}}],[\"抽象数据结构\",{\"1\":{\"355\":1}}],[\"抽象不应该依赖细节\",{\"1\":{\"338\":1}}],[\"抽象约束\",{\"1\":{\"336\":1}}],[\"抽象出一个迭代器类来负责\",{\"1\":{\"317\":1}}],[\"抽象和实现的分离\",{\"1\":{\"307\":1}}],[\"抽象产品\",{\"1\":{\"304\":1}}],[\"抽象工厂\",{\"1\":{\"304\":1}}],[\"抽象工厂模式\",{\"0\":{\"287\":1,\"304\":1},\"1\":{\"279\":1}}],[\"抽象程度高\",{\"0\":{\"260\":1}}],[\"抽象问题\",{\"1\":{\"20\":1}}],[\"代表了对象的图解\",{\"1\":{\"328\":1}}],[\"代表\",{\"1\":{\"326\":1}}],[\"代替父选择器\",{\"1\":{\"928\":1}}],[\"代替js的\",{\"1\":{\"642\":1}}],[\"代替\",{\"1\":{\"316\":1}}],[\"代替指令或操作数的地址\",{\"1\":{\"259\":1}}],[\"代理\",{\"1\":{\"313\":5}}],[\"代理模式\",{\"0\":{\"313\":1,\"818\":1},\"1\":{\"280\":1}}],[\"代码检查\",{\"0\":{\"738\":1}}],[\"代码检查与格式化\",{\"0\":{\"663\":1}}],[\"代码检查和修复\",{\"1\":{\"596\":1}}],[\"代码管理等工具\",{\"1\":{\"657\":1}}],[\"代码压缩\",{\"1\":{\"657\":1}}],[\"代码性能和用户体验也更好\",{\"1\":{\"643\":1}}],[\"代码重构\",{\"1\":{\"596\":1}}],[\"代码查找\",{\"1\":{\"596\":1}}],[\"代码自动补全\",{\"1\":{\"596\":1}}],[\"代码引用查找\",{\"1\":{\"596\":1}}],[\"代码结构树\",{\"1\":{\"596\":1}}],[\"代码快速注释\",{\"1\":{\"596\":1}}],[\"代码折叠\",{\"1\":{\"596\":1}}],[\"代码格式化规则将与已配置的code\",{\"1\":{\"596\":1}}],[\"代码格式化\",{\"1\":{\"596\":1}}],[\"代码跳转\",{\"1\":{\"596\":1}}],[\"代码高亮设置\",{\"1\":{\"596\":1}}],[\"代码编辑器\",{\"0\":{\"596\":1}}],[\"代码简洁易懂\",{\"1\":{\"390\":1}}],[\"代码中包含大量与对象状态有关的条件语句\",{\"1\":{\"321\":1}}],[\"代码实例\",{\"1\":{\"305\":6}}],[\"代码设计经验的总结\",{\"1\":{\"276\":1}}],[\"代码\",{\"1\":{\"28\":1,\"327\":1,\"421\":1}}],[\"代码美学\",{\"0\":{\"28\":1}}],[\"改为偶数\",{\"1\":{\"845\":1}}],[\"改变时的行为变化\",{\"1\":{\"321\":1}}],[\"改进的模式匹配算法\",{\"0\":{\"257\":1}}],[\"改善人机界面向用户提供友好的工作环境\",{\"1\":{\"119\":1}}],[\"改善加工工艺和工艺结构\",{\"1\":{\"79\":1}}],[\"朴素的模式匹配算法\",{\"0\":{\"256\":1}}],[\"那么这个变量类型就不可改变\",{\"1\":{\"720\":1}}],[\"那么这个时候实例化\",{\"1\":{\"305\":1}}],[\"那么何时使用卫士\",{\"1\":{\"568\":1}}],[\"那么仓库就是临界资源\",{\"1\":{\"505\":1}}],[\"那么使用策略模式可以动态地让一个对象在许多行为中选择一种行为\",{\"1\":{\"323\":1}}],[\"那么可能就值得将该问题的各个实例表述为一个简单语言中的句子\",{\"1\":{\"316\":1}}],[\"那么它会把相同的请求传给下一个接收者\",{\"1\":{\"314\":1}}],[\"那么\",{\"1\":{\"305\":1,\"704\":1}}],[\"那么形式表示的规则\",{\"1\":{\"272\":1}}],[\"那么请一定不要画完架构图就算完成工作\",{\"1\":{\"4\":1}}],[\"那x就是我们要查找的排名第k位的元素了\",{\"1\":{\"254\":1}}],[\"归并排序\",{\"0\":{\"253\":1}}],[\"第三步\",{\"0\":{\"679\":1}}],[\"第几次分割输出\",{\"1\":{\"418\":1}}],[\"第二步\",{\"0\":{\"678\":1}}],[\"第二种\",{\"1\":{\"418\":1}}],[\"第二次软件危机\",{\"1\":{\"397\":1}}],[\"第二次轮n\",{\"1\":{\"252\":1}}],[\"第\",{\"1\":{\"305\":1,\"677\":1,\"678\":1,\"679\":1}}],[\"第一步\",{\"0\":{\"677\":1}}],[\"第一种\",{\"1\":{\"418\":1}}],[\"第一次接触鸿蒙应用开发是2024年\",{\"1\":{\"600\":1}}],[\"第一次软件危机\",{\"1\":{\"398\":1}}],[\"第一次调用才初始化\",{\"1\":{\"305\":1}}],[\"第一次轮n次\",{\"1\":{\"252\":1}}],[\"第一个高级语言\",{\"1\":{\"260\":1}}],[\"大于号\",{\"1\":{\"884\":1}}],[\"大于基准值放右边\",{\"1\":{\"252\":1}}],[\"大型字体标记\",{\"1\":{\"875\":1}}],[\"大部分内容放到了es6\",{\"1\":{\"775\":1}}],[\"大部分同ps\",{\"1\":{\"143\":1}}],[\"大大简化了多端的前端开发\",{\"1\":{\"623\":1}}],[\"大大减少对象的创建\",{\"1\":{\"312\":1}}],[\"大家可以随手拿来使用\",{\"1\":{\"306\":1}}],[\"<form\",{\"1\":{\"895\":1}}],[\"<font\",{\"1\":{\"875\":3}}],[\"<meter\",{\"1\":{\"894\":1}}],[\"<meta\",{\"1\":{\"880\":5}}],[\"<meta><\",{\"1\":{\"873\":1}}],[\"<output\",{\"1\":{\"894\":1}}],[\"<option>鱼香肉丝<\",{\"1\":{\"894\":1}}],[\"<option>京酱肉丝<\",{\"1\":{\"894\":1}}],[\"<ol\",{\"1\":{\"880\":5}}],[\"<input\",{\"1\":{\"893\":10,\"894\":1,\"895\":11}}],[\"<li><\",{\"1\":{\"880\":5}}],[\"<link\",{\"1\":{\"880\":1}}],[\"<datalist\",{\"1\":{\"894\":1}}],[\"<dd>用于选择软件的外观<\",{\"1\":{\"880\":1}}],[\"<dd>简单介绍软件的功能及基本应用<\",{\"1\":{\"880\":1}}],[\"<dt>软件界面<\",{\"1\":{\"880\":1}}],[\"<dt>软件说明\",{\"1\":{\"880\":1}}],[\"<dl>\",{\"1\":{\"880\":1}}],[\"<dl><dt><dd>\",{\"1\":{\"874\":1}}],[\"<div>\",{\"1\":{\"880\":1}}],[\"<div\",{\"1\":{\"880\":1}}],[\"<body>\",{\"1\":{\"880\":1}}],[\"<br>\",{\"1\":{\"872\":1}}],[\"<title>页面名称<\",{\"1\":{\"880\":1}}],[\"<template>\",{\"1\":{\"867\":2}}],[\"<hr>\",{\"1\":{\"880\":1}}],[\"<head>\",{\"1\":{\"880\":1}}],[\"<html\",{\"1\":{\"871\":1,\"880\":1}}],[\"<progress\",{\"1\":{\"894\":1}}],[\"<pre>\",{\"1\":{\"880\":1}}],[\"<p>这是一个段落<br>换行了<span>文本<\",{\"1\":{\"880\":1}}],[\"<p>段落中也可以包含<p>段落\",{\"1\":{\"874\":1}}],[\"<p><\",{\"1\":{\"872\":1}}],[\"<pkg>\",{\"1\":{\"413\":1}}],[\"<el\",{\"1\":{\"860\":3}}],[\"<style\",{\"1\":{\"858\":2,\"869\":2}}],[\"<style><\",{\"1\":{\"873\":1}}],[\"<style>插入<head>的顺序\",{\"1\":{\"858\":1}}],[\"<style>\",{\"1\":{\"858\":1,\"880\":1}}],[\"<\",{\"1\":{\"251\":1,\"252\":3,\"288\":2,\"312\":1,\"317\":1,\"322\":1,\"325\":1,\"328\":1,\"780\":3,\"860\":2,\"869\":2,\"871\":5,\"873\":1,\"880\":16,\"884\":1,\"893\":10,\"894\":6,\"895\":12}}],[\"<=\",{\"1\":{\"240\":1,\"249\":2,\"251\":1,\"314\":1}}],[\"960px\",{\"1\":{\"927\":2}}],[\"9pt\",{\"1\":{\"613\":2}}],[\"95\",{\"1\":{\"312\":1}}],[\"93\",{\"1\":{\"312\":1}}],[\"97\",{\"1\":{\"312\":1}}],[\"91\",{\"1\":{\"312\":1,\"843\":6}}],[\"98\",{\"1\":{\"312\":1}}],[\"94\",{\"1\":{\"312\":1}}],[\"99\",{\"1\":{\"305\":1}}],[\"9\",{\"0\":{\"788\":1,\"930\":1},\"1\":{\"251\":1,\"252\":1,\"302\":1,\"304\":1,\"724\":1,\"893\":2,\"895\":3}}],[\"90\",{\"1\":{\"54\":1,\"312\":1}}],[\"堆排序\",{\"0\":{\"250\":1},\"1\":{\"254\":1}}],[\"次关键字之间的比较\",{\"1\":{\"249\":1}}],[\"待整个序列中的记录基本有序时\",{\"1\":{\"248\":1}}],[\"希尔排序\",{\"0\":{\"248\":1}}],[\"才能理解并熟练使用\",{\"1\":{\"815\":1}}],[\"才能保证单例\",{\"1\":{\"305\":1}}],[\"才可升级到下一个大版本\",{\"1\":{\"431\":1}}],[\"才会使用第\",{\"1\":{\"305\":1}}],[\"才会显示装载\",{\"1\":{\"305\":1}}],[\"才插入\",{\"1\":{\"247\":1}}],[\"才崩溃\",{\"1\":{\"78\":1}}],[\"依旧分歧太大\",{\"1\":{\"775\":1}}],[\"依旧是多进程模型\",{\"1\":{\"693\":1}}],[\"依次对子组件执行步骤1\",{\"1\":{\"858\":1}}],[\"依次存储线性表中的数据元素\",{\"1\":{\"353\":1}}],[\"依次与前面的元素进行比较\",{\"1\":{\"247\":1}}],[\"依赖中一般也会慢\",{\"0\":{\"637\":1}}],[\"依赖包查找\",{\"1\":{\"628\":1}}],[\"依赖于抽象而不依赖于具体\",{\"1\":{\"338\":1}}],[\"依赖倒置原则\",{\"0\":{\"338\":1}}],[\"依赖对象是一个持续生命周期依赖于粗粒度对象的对象\",{\"1\":{\"328\":1}}],[\"依赖对象\",{\"1\":{\"328\":1}}],[\"依赖了具体类\",{\"1\":{\"325\":1}}],[\"依赖关系等处理好\",{\"1\":{\"311\":1}}],[\"依此类推\",{\"1\":{\"314\":1}}],[\"依据指令的不同阶段来区分二进制的指令和数据\",{\"1\":{\"37\":1}}],[\"而less用\",{\"0\":{\"922\":1}}],[\"而javascript算是ecmascript的一种实现\",{\"1\":{\"774\":1}}],[\"而无法结束\",{\"1\":{\"480\":1}}],[\"而无需指定它们具体的类\",{\"1\":{\"304\":1}}],[\"而基类与子类的继承关系就是抽象化的具体实现\",{\"1\":{\"337\":1}}],[\"而派生类也能够在基类的基础上增加新的行为\",{\"1\":{\"337\":1}}],[\"而将相同的可变因素封装在相同的具体实现类中\",{\"1\":{\"336\":1}}],[\"而将一些步骤延迟到子类中\",{\"1\":{\"324\":1}}],[\"而需要避免让这些操作\",{\"1\":{\"325\":2}}],[\"而区分它们的只是他们直接的行为\",{\"1\":{\"323\":1}}],[\"而状态模式的接口中有一个或者多个方法\",{\"1\":{\"321\":1}}],[\"而仅仅只是知道观察目标发生了变化\",{\"1\":{\"320\":1}}],[\"而又不想生成太多的子类\",{\"1\":{\"318\":1}}],[\"而又无须暴露该对象的内部表示\",{\"1\":{\"317\":1}}],[\"而模型层的类会随着不同的应用有不同的模型类\",{\"1\":{\"315\":1}}],[\"而代理模式是为了加以控制\",{\"1\":{\"313\":1}}],[\"而代理模式不能改变所代理类的接口\",{\"1\":{\"313\":1}}],[\"而这种方式是\",{\"1\":{\"305\":1}}],[\"而每一件成套的衣服又包括具体的上衣\",{\"1\":{\"304\":1}}],[\"而系统只消费其中某一族的产品\",{\"1\":{\"304\":1}}],[\"而且还有一些新的特性在里面\",{\"1\":{\"483\":1}}],[\"而且还自动支持序列化机制\",{\"1\":{\"305\":1}}],[\"而且状态不超过\",{\"1\":{\"321\":1}}],[\"而且修改某个状态类的行为也需修改对应类的源代码\",{\"1\":{\"321\":1}}],[\"而且\",{\"1\":{\"321\":1}}],[\"而且要考虑到易用和低耦合\",{\"1\":{\"320\":1}}],[\"而且每一次保存都会消耗一定的内存\",{\"1\":{\"319\":1}}],[\"而且可以独立地改变它们之间的交互\",{\"1\":{\"318\":1}}],[\"而且在进行代码调试时不太方便\",{\"1\":{\"314\":1}}],[\"而且外部状态具有固有化的性质\",{\"1\":{\"312\":1}}],[\"而且各个调用者可能都需要修改其值时\",{\"1\":{\"306\":1}}],[\"而且对其作了进一步的发展\",{\"1\":{\"302\":1}}],[\"而且目标类必须是抽象类\",{\"1\":{\"284\":1}}],[\"而简单对象\",{\"1\":{\"286\":1,\"303\":1}}],[\"而不关心外面怎么样来实例化\",{\"1\":{\"305\":1}}],[\"而不用去管这辆汽车是怎么做出来的\",{\"1\":{\"286\":1,\"303\":1}}],[\"而不是渲染其内部内容\",{\"1\":{\"867\":1}}],[\"而不是抛出一个错误\",{\"1\":{\"749\":1}}],[\"而不是定义\",{\"1\":{\"704\":1}}],[\"而不是某一个巨大的条件语句块\",{\"1\":{\"321\":1}}],[\"而不是聚合对象\",{\"1\":{\"317\":1}}],[\"而不是接口\",{\"1\":{\"309\":1}}],[\"而不是算法本身\",{\"1\":{\"239\":1}}],[\"而不是职位\",{\"1\":{\"4\":1}}],[\"而其组合是经常变化的\",{\"1\":{\"285\":1}}],[\"而其组合经常变化的时候\",{\"1\":{\"285\":1}}],[\"而是靠缩进来显示类及属性\",{\"1\":{\"920\":1}}],[\"而是反应一个不做任何动作的关系\",{\"1\":{\"322\":1}}],[\"而是解决正在服役的项目的问题\",{\"1\":{\"284\":1}}],[\"而是直接对系统进行重构\",{\"1\":{\"284\":1}}],[\"而在\",{\"1\":{\"284\":1}}],[\"而此类的接口不符合系统的需要\",{\"1\":{\"284\":1}}],[\"而新环境要求的接口是现对象不能满足的\",{\"1\":{\"284\":1}}],[\"而后从第二个元素起\",{\"1\":{\"247\":1}}],[\"排序\",{\"0\":{\"246\":1}}],[\"排序算法\",{\"1\":{\"242\":1}}],[\"窗口滑动\",{\"0\":{\"245\":1}}],[\"了解\",{\"0\":{\"243\":1}}],[\"了解整个过程\",{\"1\":{\"146\":1}}],[\"人工智能软件\",{\"1\":{\"405\":1}}],[\"人工智能相关算法\",{\"0\":{\"243\":1}}],[\"人员\",{\"0\":{\"401\":1}}],[\"人\",{\"1\":{\"263\":2}}],[\"人稍微看得懂一点\",{\"1\":{\"259\":1}}],[\"人机交互\",{\"1\":{\"121\":1}}],[\"智能引用\",{\"1\":{\"313\":1}}],[\"智能化\",{\"1\":{\"313\":1}}],[\"智能优化算法\",{\"1\":{\"242\":1}}],[\"智能对象\",{\"1\":{\"157\":1,\"184\":1}}],[\"近似算法\",{\"1\":{\"242\":1}}],[\"近期最少使用\",{\"1\":{\"54\":1}}],[\"贪心法\",{\"1\":{\"242\":1}}],[\"查阅api参考\",{\"1\":{\"596\":1}}],[\"查看父类\",{\"1\":{\"596\":1}}],[\"查看docker信息\",{\"1\":{\"583\":1}}],[\"查看当前安装的版本\",{\"1\":{\"571\":1}}],[\"查看当前的执行策略\",{\"1\":{\"481\":1}}],[\"查看已安装的版本\",{\"1\":{\"571\":1}}],[\"查看node所有版本\",{\"1\":{\"571\":1}}],[\"查看文件目录\",{\"1\":{\"477\":1}}],[\"查看文件内容\",{\"1\":{\"445\":1}}],[\"查看系统信息\",{\"1\":{\"477\":1}}],[\"查看容量\",{\"1\":{\"445\":1}}],[\"查看端口号\",{\"1\":{\"445\":1}}],[\"查看自己下过的命令\",{\"1\":{\"445\":1}}],[\"查看自己的帐号名称\",{\"1\":{\"445\":1}}],[\"查看某人的group\",{\"1\":{\"445\":1}}],[\"查看远程仓库的情况\",{\"1\":{\"425\":1}}],[\"查看远程仓库信息\",{\"1\":{\"421\":1}}],[\"查看配置\",{\"1\":{\"421\":1}}],[\"查看全局安装的包\",{\"1\":{\"411\":1}}],[\"查看详细信息\",{\"1\":{\"173\":1}}],[\"查询\",{\"1\":{\"487\":1}}],[\"查询目前上机者的详细资料\",{\"1\":{\"445\":1}}],[\"查询目前和你使用同一台机器的人以及login时间地点\",{\"1\":{\"445\":1}}],[\"查询当前所在的目录位置\",{\"1\":{\"445\":1}}],[\"查询创建\",{\"1\":{\"332\":1}}],[\"查询定位各种服务的时候\",{\"1\":{\"332\":1}}],[\"查询服务\",{\"1\":{\"327\":1}}],[\"查找缓存\",{\"1\":{\"706\":1}}],[\"查找buildscript配置块中的ext\",{\"1\":{\"639\":1}}],[\"查找对应的文字\",{\"1\":{\"487\":1}}],[\"查找和缓存服务来获取服务的单点接触\",{\"1\":{\"332\":1}}],[\"查找服务对象负责获取相关的业务实现\",{\"1\":{\"327\":1}}],[\"查找\",{\"0\":{\"244\":1}}],[\"查找算法\",{\"1\":{\"242\":1}}],[\"健壮性\",{\"1\":{\"242\":1}}],[\"长度可增长\",{\"1\":{\"352\":1}}],[\"长度为零的线性表叫空表\",{\"1\":{\"352\":1}}],[\"长度往往与输入数据的规模n有关\",{\"1\":{\"240\":2}}],[\"长方形表示实体\",{\"1\":{\"93\":1}}],[\"理论要与实践相结合\",{\"1\":{\"239\":1}}],[\"五\",{\"0\":{\"297\":1,\"340\":1}}],[\"五个特性\",{\"0\":{\"239\":1}}],[\"五大功能\",{\"0\":{\"121\":1,\"509\":1}}],[\"五大部件\",{\"1\":{\"34\":1}}],[\"描述功能的符号\",{\"0\":{\"872\":1}}],[\"描述\",{\"1\":{\"305\":6,\"884\":1}}],[\"描述应不依赖于任何一种计算机语言以及具体实现\",{\"1\":{\"238\":1}}],[\"描述概念数据模型\",{\"1\":{\"93\":1}}],[\"^1\",{\"1\":{\"895\":1}}],[\"^\",{\"1\":{\"218\":1,\"487\":1}}],[\"^i\",{\"1\":{\"218\":1}}],[\"^r\",{\"1\":{\"218\":2}}],[\"v8\",{\"1\":{\"776\":2}}],[\"vs\",{\"1\":{\"736\":3}}],[\"vscode中\",{\"1\":{\"721\":1}}],[\"vscode\",{\"0\":{\"435\":1,\"627\":1}}],[\"verbose\",{\"1\":{\"627\":1}}],[\"version的值改为你想要的版本\",{\"1\":{\"639\":1}}],[\"version属性\",{\"1\":{\"639\":1}}],[\"version检验\",{\"1\":{\"627\":1}}],[\"versions\",{\"1\":{\"411\":1}}],[\"version\",{\"1\":{\"411\":1,\"571\":3,\"639\":1,\"736\":1,\"929\":2}}],[\"v1\",{\"1\":{\"579\":1}}],[\"v操作\",{\"1\":{\"505\":1}}],[\"v+a+大括号\",{\"1\":{\"487\":1}}],[\"v+i+大括号\",{\"1\":{\"487\":1}}],[\"vbdefaultbutton1\",{\"1\":{\"418\":1}}],[\"vbok\",{\"1\":{\"418\":1}}],[\"vbokcancel\",{\"1\":{\"418\":1}}],[\"vba\",{\"0\":{\"418\":1}}],[\"v\",{\"1\":{\"318\":1,\"425\":1,\"465\":1,\"486\":1,\"727\":3,\"860\":1,\"867\":13,\"869\":2}}],[\"vote\",{\"1\":{\"610\":1,\"612\":1}}],[\"volatile\",{\"1\":{\"305\":1}}],[\"void\",{\"1\":{\"303\":5,\"304\":9,\"305\":3,\"306\":7,\"307\":6,\"308\":2,\"309\":3,\"310\":7,\"311\":8,\"312\":6,\"313\":5,\"314\":7,\"315\":8,\"316\":1,\"317\":1,\"318\":4,\"319\":4,\"320\":8,\"321\":5,\"322\":1,\"323\":1,\"324\":11,\"325\":14,\"326\":7,\"327\":7,\"328\":7,\"329\":7,\"330\":6,\"331\":12,\"332\":5,\"333\":5,\"722\":1,\"724\":2}}],[\"value=\",{\"1\":{\"893\":1,\"894\":2}}],[\"value2\",{\"1\":{\"880\":1}}],[\"value1\",{\"1\":{\"880\":1}}],[\"value\",{\"1\":{\"288\":6,\"329\":1,\"874\":1,\"895\":1}}],[\"val\",{\"1\":{\"288\":2}}],[\"variable\",{\"1\":{\"927\":1}}],[\"var\",{\"1\":{\"288\":12,\"293\":1,\"431\":1,\"453\":1,\"580\":3,\"724\":2,\"736\":2,\"780\":5}}],[\"vue3通常会更高效\",{\"1\":{\"864\":1}}],[\"vue3\",{\"0\":{\"862\":1,\"863\":1},\"1\":{\"867\":2}}],[\"vue2\",{\"0\":{\"857\":1},\"1\":{\"867\":1}}],[\"vue中有没有好的方式处理中英文转换后的样式问题\",{\"0\":{\"669\":1}}],[\"vue\",{\"0\":{\"716\":1},\"1\":{\"229\":2,\"864\":7,\"866\":1,\"867\":3}}],[\"vuepress\",{\"0\":{\"212\":1},\"1\":{\"208\":2,\"210\":2,\"211\":1,\"212\":2,\"213\":1,\"228\":1}}],[\"video\",{\"0\":{\"898\":1}}],[\"vite\",{\"0\":{\"813\":1}}],[\"virtual\",{\"0\":{\"717\":1}}],[\"vi\",{\"1\":{\"459\":1,\"485\":1}}],[\"vim学习视频\",{\"1\":{\"488\":1}}],[\"vim是vi的加强版\",{\"1\":{\"483\":1}}],[\"vim\",{\"0\":{\"482\":1},\"1\":{\"433\":1,\"458\":1,\"466\":1,\"485\":1,\"487\":1}}],[\"visit\",{\"1\":{\"325\":12}}],[\"visitorpatterndemo\",{\"1\":{\"325\":2}}],[\"visitor\",{\"0\":{\"325\":1},\"1\":{\"281\":2}}],[\"viewport\",{\"1\":{\"880\":1}}],[\"view\",{\"1\":{\"214\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"288\":1,\"326\":9,\"330\":1,\"411\":2}}],[\"via\",{\"1\":{\"211\":1}}],[\"乐理\",{\"0\":{\"192\":1}}],[\"兰亭序\",{\"0\":{\"191\":1}}],[\"兰花草\",{\"0\":{\"187\":1}}],[\"信息\",{\"1\":{\"185\":1}}],[\"信息泄露\",{\"1\":{\"110\":1}}],[\"饱和度\",{\"1\":{\"185\":1}}],[\"色彩平衡\",{\"1\":{\"185\":1}}],[\"色彩调整\",{\"0\":{\"185\":1},\"1\":{\"185\":1}}],[\"色相\",{\"1\":{\"185\":1}}],[\"色阶\",{\"1\":{\"185\":1}}],[\"曲线\",{\"1\":{\"185\":1}}],[\"四\",{\"0\":{\"185\":1,\"296\":1,\"339\":1,\"613\":1,\"640\":1}}],[\"四个特征\",{\"0\":{\"120\":1}}],[\"四个一组\",{\"1\":{\"64\":1}}],[\"画可以被蒙上玻璃\",{\"1\":{\"310\":1}}],[\"画笔\",{\"1\":{\"185\":1}}],[\"画笔工具\",{\"0\":{\"182\":1}}],[\"画布100\",{\"1\":{\"184\":1}}],[\"画布适合屏幕大小\",{\"1\":{\"184\":1}}],[\"常见\",{\"1\":{\"893\":1,\"895\":1}}],[\"常见微机操作系统\",{\"0\":{\"469\":1}}],[\"常常要将一些\",{\"1\":{\"284\":1}}],[\"常量和变量\",{\"1\":{\"265\":1}}],[\"常配合shift\",{\"1\":{\"184\":1}}],[\"常用来编排一大段的html段落\",{\"1\":{\"874\":1}}],[\"常用插件\",{\"0\":{\"629\":1}}],[\"常用库\",{\"0\":{\"550\":1}}],[\"常用命令\",{\"0\":{\"411\":1,\"585\":1}}],[\"常用快捷键\",{\"0\":{\"174\":1}}],[\"常用\",{\"0\":{\"143\":1},\"1\":{\"155\":1}}],[\"常用功能与技巧\",{\"0\":{\"131\":1}}],[\"常用方法\",{\"0\":{\"81\":1}}],[\"绘制图形\",{\"1\":{\"184\":1}}],[\"直到该运算符大于栈顶运算符优先级为止\",{\"1\":{\"356\":1}}],[\"直到遇到左括号\",{\"1\":{\"356\":1}}],[\"直到有对象处理它为止\",{\"1\":{\"314\":1}}],[\"直到找到一个小于他的值\",{\"1\":{\"247\":1}}],[\"直线\",{\"1\":{\"184\":1}}],[\"直接更新内容\",{\"1\":{\"864\":1}}],[\"直接在as中可以update\",{\"1\":{\"628\":1}}],[\"直接在\",{\"1\":{\"627\":1}}],[\"直接使用\",{\"1\":{\"613\":1}}],[\"直接输出\",{\"1\":{\"356\":1}}],[\"直接丢一个实体就可以保存\",{\"1\":{\"324\":1}}],[\"直接访问会给使用者或者系统结构带来很多麻烦\",{\"1\":{\"313\":1}}],[\"直接返回在内存中已有的对象\",{\"1\":{\"312\":1}}],[\"直接插入排序的改进\",{\"1\":{\"248\":1}}],[\"直接插入排序\",{\"0\":{\"247\":1}}],[\"直接选择工具\",{\"1\":{\"145\":1,\"180\":1}}],[\"直接主存存取\",{\"1\":{\"59\":1}}],[\"直接映射\",{\"1\":{\"54\":1}}],[\"直接与cpu交互\",{\"1\":{\"54\":1}}],[\"垂直\",{\"1\":{\"184\":1}}],[\"仿制图章工具\",{\"0\":{\"183\":1}}],[\"微软雅黑\",{\"1\":{\"875\":1}}],[\"微软的typescript\",{\"1\":{\"720\":1}}],[\"微前端\",{\"0\":{\"391\":1}}],[\"微调\",{\"1\":{\"180\":1}}],[\"微型化\",{\"1\":{\"130\":1}}],[\"微型计算机操作系统\",{\"0\":{\"129\":1}}],[\"橡皮擦e\",{\"0\":{\"179\":1}}],[\"贴入\",{\"1\":{\"178\":1}}],[\"贴图渲染\",{\"0\":{\"150\":1}}],[\"减少系统相互依赖\",{\"1\":{\"311\":1}}],[\"减少它们之间耦合\",{\"1\":{\"307\":1}}],[\"减少了内存的开销\",{\"1\":{\"305\":1}}],[\"减去选区\",{\"1\":{\"177\":1}}],[\"减选\",{\"1\":{\"174\":1,\"184\":1}}],[\"减选操作\",{\"1\":{\"174\":1}}],[\"添加镜像地址\",{\"0\":{\"582\":1}}],[\"添加\",{\"1\":{\"458\":1}}],[\"添加站点\",{\"1\":{\"451\":1}}],[\"添加选区\",{\"1\":{\"177\":1}}],[\"添加删除锚点\",{\"1\":{\"145\":1}}],[\"取操作的那一段操作\",{\"1\":{\"505\":1}}],[\"取药\",{\"1\":{\"311\":1}}],[\"取消继承\",{\"1\":{\"479\":1}}],[\"取消\",{\"1\":{\"418\":1}}],[\"取消原来的继承关系\",{\"1\":{\"337\":1}}],[\"取消手柄\",{\"1\":{\"180\":1}}],[\"取消选区\",{\"1\":{\"177\":1}}],[\"取指令\",{\"1\":{\"45\":1}}],[\"移除\",{\"1\":{\"867\":1}}],[\"移到单词最左边\",{\"1\":{\"487\":1}}],[\"移动文件\",{\"1\":{\"445\":1}}],[\"移动\",{\"1\":{\"184\":1}}],[\"移动工具v\",{\"0\":{\"176\":1}}],[\"移码\",{\"1\":{\"69\":2}}],[\"重绘和重排\",{\"0\":{\"691\":1}}],[\"重点在其原理\",{\"1\":{\"623\":1}}],[\"重命名\",{\"1\":{\"596\":1}}],[\"重启docker\",{\"1\":{\"579\":1}}],[\"重启电脑后\",{\"1\":{\"480\":1}}],[\"重复执行上一条命令\",{\"1\":{\"487\":1}}],[\"重复上一次滤镜\",{\"1\":{\"174\":1}}],[\"重新分配\",{\"1\":{\"749\":1}}],[\"重新进行请求过程\",{\"1\":{\"706\":1}}],[\"重新操作上一步\",{\"1\":{\"487\":1}}],[\"重新生成cache\",{\"1\":{\"453\":1}}],[\"重新设计它们之间的关系\",{\"1\":{\"337\":1}}],[\"重做\",{\"1\":{\"315\":1}}],[\"重写\",{\"1\":{\"306\":2}}],[\"重要的\",{\"1\":{\"320\":1,\"324\":1}}],[\"重要的是设计思维能力\",{\"1\":{\"132\":1,\"168\":1}}],[\"重要\",{\"1\":{\"239\":1}}],[\"加载阶段\",{\"1\":{\"697\":1}}],[\"加中杠\",{\"1\":{\"613\":1}}],[\"加入\",{\"1\":{\"418\":1,\"610\":1,\"612\":1}}],[\"加选图层\",{\"1\":{\"184\":1}}],[\"加选\",{\"1\":{\"174\":1,\"184\":1}}],[\"加\",{\"1\":{\"174\":2}}],[\"加密技术\",{\"0\":{\"111\":1}}],[\"盖印\",{\"1\":{\"174\":1}}],[\"合理使用链式调用\",{\"0\":{\"841\":1}}],[\"合理使用三元运算符\",{\"0\":{\"840\":1}}],[\"合理调度各作业\",{\"1\":{\"119\":1}}],[\"合作伙伴\",{\"1\":{\"610\":1,\"612\":1}}],[\"合成复用原则\",{\"0\":{\"342\":1}}],[\"合并图层\",{\"1\":{\"174\":2}}],[\"＋\",{\"1\":{\"174\":1}}],[\"然后开始解析页面和子资源加载\",{\"1\":{\"706\":1}}],[\"然后打开浏览器的任务管理器可以看到浏览器的相关进程\",{\"1\":{\"693\":1}}],[\"然后docker\",{\"1\":{\"581\":1}}],[\"然后用randomapi生成\",{\"1\":{\"556\":1}}],[\"然后在注册表中将相关信息删除掉\",{\"1\":{\"480\":1}}],[\"然后结束掉进程\",{\"1\":{\"480\":1}}],[\"然后结束掉\",{\"1\":{\"480\":1}}],[\"然后从它创建一个硬链接而不是复制\",{\"1\":{\"413\":1}}],[\"然后将该运算符压栈\",{\"1\":{\"356\":1}}],[\"然后将图层拖到组里面\",{\"1\":{\"174\":1}}],[\"然后填充\",{\"1\":{\"333\":1}}],[\"然后把请求传给相应的处理程序\",{\"1\":{\"330\":1,\"331\":1}}],[\"然后对朋友的描述做出一个判断\",{\"1\":{\"325\":1}}],[\"然后通知给其他竞价者竞价\",{\"1\":{\"320\":1}}],[\"然后由工厂方法提供给调用者\",{\"1\":{\"306\":1}}],[\"然后继续形成大根\",{\"1\":{\"250\":1}}],[\"然后进行图层链接\",{\"1\":{\"174\":1}}],[\"组建\",{\"1\":{\"867\":1}}],[\"组件的生命周期\",{\"1\":{\"867\":1}}],[\"组件\",{\"1\":{\"867\":2}}],[\"组件上\",{\"1\":{\"867\":1}}],[\"组件驱动式web设计\",{\"1\":{\"856\":1}}],[\"组件预览\",{\"1\":{\"597\":1}}],[\"组合实体\",{\"1\":{\"328\":1}}],[\"组合实体模式\",{\"0\":{\"328\":1},\"1\":{\"282\":1}}],[\"组合模式使得用户对单个对象和组合对象的使用具有一致性\",{\"1\":{\"309\":1}}],[\"组合模式依据树形结构来组合对象\",{\"1\":{\"309\":1}}],[\"组合模式\",{\"0\":{\"298\":1,\"309\":1,\"822\":1},\"1\":{\"280\":1}}],[\"组可以嵌套\",{\"1\":{\"174\":1}}],[\"组组相连映射\",{\"1\":{\"54\":1}}],[\"点击代码编辑区域左侧的gutter\",{\"1\":{\"596\":1}}],[\"点击ok\",{\"1\":{\"596\":1}}],[\"点击左侧列表application\",{\"1\":{\"468\":1}}],[\"点击\",{\"1\":{\"418\":2}}],[\"点击图层可以进行选择\",{\"1\":{\"177\":1}}],[\"点击图标进行选区的变化\",{\"1\":{\"177\":1}}],[\"点击新建组图标\",{\"1\":{\"174\":1}}],[\"点完锚点后鼠标滑动出现橡皮筋\",{\"1\":{\"145\":1}}],[\"扩展了js的语法\",{\"1\":{\"719\":1}}],[\"扩展的线性表\",{\"1\":{\"346\":1}}],[\"扩展可变部分\",{\"1\":{\"324\":1}}],[\"扩展性良好\",{\"1\":{\"323\":1}}],[\"扩展性高\",{\"1\":{\"286\":1,\"303\":1}}],[\"扩展一个类的功能\",{\"1\":{\"310\":1}}],[\"扩展起来不灵活\",{\"1\":{\"307\":1}}],[\"扩展\",{\"1\":{\"174\":1}}],[\"解答\",{\"1\":{\"845\":1}}],[\"解压zip文件\",{\"1\":{\"458\":1}}],[\"解压\",{\"1\":{\"450\":1,\"458\":1}}],[\"解析\",{\"1\":{\"316\":1}}],[\"解耦\",{\"1\":{\"315\":1}}],[\"解释\",{\"0\":{\"535\":1}}],[\"解释器模式采用递归调用方法\",{\"1\":{\"316\":1}}],[\"解释器模式会引起类膨胀\",{\"1\":{\"316\":1}}],[\"解释器模式\",{\"0\":{\"316\":1},\"1\":{\"281\":1}}],[\"解释型脚本语言\",{\"1\":{\"260\":1}}],[\"解释型\",{\"1\":{\"260\":1,\"749\":1}}],[\"解锁\",{\"1\":{\"174\":1}}],[\"解决办法\",{\"1\":{\"638\":1,\"639\":1}}],[\"解决方法二\",{\"1\":{\"637\":1}}],[\"解决方法一\",{\"1\":{\"637\":1}}],[\"解决冲突\",{\"1\":{\"423\":1}}],[\"解决策略类膨胀的问题\",{\"1\":{\"323\":1}}],[\"解决哪一类问题\",{\"1\":{\"279\":1,\"280\":1,\"281\":1}}],[\"解决固定的问题\",{\"1\":{\"276\":1}}],[\"解决大数据的排序问题\",{\"1\":{\"248\":1}}],[\"解决存储容量成本和速度之间的矛盾问题\",{\"1\":{\"52\":1}}],[\"解决问题方法的效率\",{\"1\":{\"363\":1}}],[\"解决问题\",{\"1\":{\"20\":1}}],[\"解决软件系统复杂度带来的问题\",{\"1\":{\"4\":1}}],[\"填充\",{\"1\":{\"174\":1}}],[\"填充前景色\",{\"1\":{\"174\":1}}],[\"填充背景色\",{\"1\":{\"174\":1}}],[\"切换假如有报错\",{\"1\":{\"571\":1}}],[\"切换版本\",{\"1\":{\"571\":1}}],[\"切换\",{\"1\":{\"175\":1}}],[\"切换颜色\",{\"1\":{\"174\":1}}],[\"切换最终状态\",{\"1\":{\"174\":1}}],[\"xhtml\",{\"1\":{\"871\":2,\"906\":1,\"907\":1}}],[\"x变化在哪里\",{\"0\":{\"863\":1}}],[\"x了\",{\"1\":{\"851\":1}}],[\"xpath\",{\"1\":{\"556\":4}}],[\"xpath去匹配元素\",{\"1\":{\"550\":1}}],[\"xcomponent组件\",{\"0\":{\"590\":1}}],[\"xcopy\",{\"1\":{\"477\":1}}],[\"xcode的时候可能会卡住\",{\"1\":{\"465\":1}}],[\"xzz\",{\"1\":{\"487\":1}}],[\"xz\",{\"1\":{\"458\":1}}],[\"xf\",{\"1\":{\"458\":1}}],[\"x和centos\",{\"1\":{\"431\":1}}],[\"x86\",{\"1\":{\"431\":2}}],[\"xxx\",{\"1\":{\"425\":12}}],[\"xlopenxmlworkbook\",{\"1\":{\"418\":1}}],[\"xlsx\",{\"1\":{\"418\":1}}],[\"xldown\",{\"1\":{\"418\":2}}],[\"xmlns=\",{\"1\":{\"871\":1}}],[\"xml\",{\"1\":{\"329\":1,\"906\":1}}],[\"x\",{\"0\":{\"857\":1,\"862\":1,\"863\":1},\"1\":{\"174\":1,\"307\":12,\"312\":26,\"431\":1,\"487\":1,\"724\":8,\"727\":1,\"867\":6,\"880\":1}}],[\"连续的存储单元\",{\"1\":{\"353\":1}}],[\"连续复制变换\",{\"1\":{\"174\":1}}],[\"连接真机\",{\"1\":{\"595\":1}}],[\"连接内存卡与电脑\",{\"1\":{\"284\":1}}],[\"连接前弹参数\",{\"1\":{\"143\":1}}],[\"连接两个锚点\",{\"1\":{\"143\":1}}],[\"反向映射\",{\"1\":{\"724\":1}}],[\"反之则选用\",{\"1\":{\"632\":1}}],[\"反选\",{\"1\":{\"174\":1}}],[\"反码\",{\"1\":{\"69\":2}}],[\"选项现在可简单地合并\",{\"1\":{\"867\":1}}],[\"选项和实例方法\",{\"1\":{\"867\":2}}],[\"选取拆分起始处\",{\"1\":{\"418\":1}}],[\"选取表头区域\",{\"1\":{\"418\":1}}],[\"选定基准值\",{\"1\":{\"252\":1}}],[\"选区交叉\",{\"1\":{\"177\":1}}],[\"选区m\",{\"0\":{\"177\":1}}],[\"选框工具中可以进行固定大小\",{\"1\":{\"177\":1}}],[\"选中code\",{\"1\":{\"596\":1}}],[\"选中接口名称单击右键\",{\"1\":{\"596\":1}}],[\"选中括号\",{\"1\":{\"487\":2}}],[\"选中多个连续图层\",{\"1\":{\"184\":1}}],[\"选中多个图层\",{\"1\":{\"174\":1}}],[\"选中图层后\",{\"1\":{\"174\":1}}],[\"选择器\",{\"0\":{\"843\":1,\"928\":1},\"1\":{\"848\":1,\"893\":1}}],[\"选择一个或多个需要生成构造函数的参数\",{\"1\":{\"596\":1}}],[\"选择一个模板创建\",{\"1\":{\"554\":1}}],[\"选择override\",{\"1\":{\"596\":1}}],[\"选择模板\",{\"1\":{\"595\":1}}],[\"选择文本\",{\"1\":{\"486\":1}}],[\"选择骑自行车\",{\"1\":{\"323\":1}}],[\"选择\",{\"1\":{\"267\":1,\"372\":2,\"418\":4}}],[\"选择性粘贴\",{\"1\":{\"178\":1}}],[\"选择多个图层ctrl+g快速编组\",{\"1\":{\"174\":1}}],[\"选择锚点\",{\"1\":{\"145\":1}}],[\"复杂情况下不要用\",{\"1\":{\"840\":1}}],[\"复杂\",{\"1\":{\"364\":1}}],[\"复杂的方法\",{\"1\":{\"320\":1,\"324\":1}}],[\"复杂度的渐进表示\",{\"1\":{\"240\":1}}],[\"复杂指令集计算机\",{\"1\":{\"48\":1}}],[\"复位颜色\",{\"1\":{\"174\":1}}],[\"复制整行\",{\"1\":{\"487\":1}}],[\"复制一行\",{\"1\":{\"487\":1}}],[\"复制选中的内容\",{\"1\":{\"487\":1}}],[\"复制文件\",{\"1\":{\"445\":1}}],[\"复制变换\",{\"1\":{\"174\":1}}],[\"复制图层\",{\"1\":{\"174\":1}}],[\"或单击鼠标右键选择generate\",{\"1\":{\"596\":1}}],[\"或右键单击generate\",{\"1\":{\"596\":1}}],[\"或使用快捷键ctrl+alt+b\",{\"1\":{\"596\":1}}],[\"或链\",{\"1\":{\"354\":1}}],[\"或操作从高级的业务服务中分离出来\",{\"1\":{\"329\":1}}],[\"或\",{\"0\":{\"329\":1},\"1\":{\"322\":1,\"327\":1,\"352\":1,\"739\":2,\"867\":1}}],[\"或标准模式\",{\"0\":{\"308\":1}}],[\"或标号\",{\"1\":{\"259\":1}}],[\"或是\",{\"1\":{\"263\":1}}],[\"或者编辑\",{\"1\":{\"736\":1}}],[\"或者多个页面共用一个渲染进程\",{\"1\":{\"706\":1}}],[\"或者\",{\"0\":{\"627\":1},\"1\":{\"627\":1}}],[\"或者使用快捷键alt+insert\",{\"1\":{\"596\":2}}],[\"或者删除对应版本后再install一遍\",{\"1\":{\"571\":1}}],[\"或者文件被某一进程占用\",{\"1\":{\"480\":1}}],[\"或者两者都具备\",{\"1\":{\"338\":1}}],[\"或者跟踪请求\",{\"1\":{\"330\":1,\"331\":1}}],[\"或者是其他的存储机制\",{\"1\":{\"329\":1}}],[\"或者是改变实例变量的值\",{\"1\":{\"321\":1}}],[\"或者可以包含一个粗粒度对象\",{\"1\":{\"328\":1}}],[\"或者需要进程外的访问\",{\"1\":{\"313\":1}}],[\"或者某些操作需要安全控制\",{\"1\":{\"313\":1}}],[\"或者引用含有循环结构的时候\",{\"1\":{\"306\":1}}],[\"或者其他的静态方法\",{\"1\":{\"305\":1}}],[\"或者从选区新建图层\",{\"1\":{\"174\":1}}],[\"或者点击面板中新建图层按钮\",{\"1\":{\"174\":1}}],[\"或域名\",{\"1\":{\"117\":1}}],[\"打包的时候报kotlin版本不对\",{\"0\":{\"639\":1}}],[\"打开chrome浏览器程序\",{\"1\":{\"693\":1}}],[\"打开android目录下build\",{\"1\":{\"639\":1}}],[\"打开资源监视器\",{\"1\":{\"480\":1}}],[\"打开任务管理器\",{\"1\":{\"480\":1}}],[\"打开终端\",{\"1\":{\"465\":1}}],[\"打开文件\",{\"1\":{\"174\":1,\"487\":1}}],[\"打篮球的时候运动员可以有正常状态\",{\"1\":{\"321\":1}}],[\"打游戏时的存档\",{\"1\":{\"319\":1}}],[\"打印机字体标记\",{\"1\":{\"875\":1}}],[\"打印出下标\",{\"1\":{\"724\":1}}],[\"打印该组织的所有员工\",{\"1\":{\"309\":1}}],[\"打印\",{\"1\":{\"155\":1,\"613\":1}}],[\"zh\",{\"1\":{\"880\":1}}],[\"zip\",{\"1\":{\"627\":2}}],[\"zepto\",{\"0\":{\"617\":1}}],[\"zero\",{\"1\":{\"582\":1}}],[\"zb\",{\"1\":{\"487\":1}}],[\"zt\",{\"1\":{\"487\":1}}],[\"zz\",{\"1\":{\"487\":1}}],[\"zshrc\",{\"1\":{\"466\":2}}],[\"zsh\",{\"1\":{\"465\":1}}],[\"z\",{\"1\":{\"174\":1,\"319\":1}}],[\"还创建一个未对该类做任何实现的空对象类\",{\"1\":{\"322\":1}}],[\"还要增加一个管理备忘录的类\",{\"1\":{\"319\":1}}],[\"还可直接使用\",{\"1\":{\"173\":1}}],[\"还有jscript\",{\"1\":{\"774\":1}}],[\"还有\",{\"1\":{\"145\":1}}],[\"忘记时可在ps上方菜单栏中查找或者鼠标放工具箱工具上查看\",{\"1\":{\"173\":1}}],[\"的属性值作为变量值\",{\"1\":{\"922\":1}}],[\"的修饰符\",{\"1\":{\"867\":1}}],[\"的概念\",{\"1\":{\"864\":1}}],[\"的优点\",{\"1\":{\"738\":2}}],[\"的作用\",{\"1\":{\"726\":1}}],[\"的地方\",{\"1\":{\"670\":1}}],[\"的最初定位也是一种运行在浏览器中的脚本语言\",{\"1\":{\"642\":1}}],[\"的设计思路完全一致\",{\"1\":{\"633\":1}}],[\"的方式命名\",{\"1\":{\"613\":1}}],[\"的方法创建一个对象\",{\"1\":{\"306\":1}}],[\"的开发\",{\"0\":{\"399\":1}}],[\"的官网\",{\"1\":{\"334\":1}}],[\"的代价很高\",{\"1\":{\"332\":1}}],[\"的应用程序\",{\"1\":{\"330\":1}}],[\"的参与者\",{\"1\":{\"328\":1}}],[\"的组成部分\",{\"1\":{\"325\":1}}],[\"的模板方法\",{\"1\":{\"324\":1}}],[\"的支持\",{\"1\":{\"324\":1}}],[\"的支持并不太好\",{\"1\":{\"321\":1}}],[\"的状态发生改变\",{\"1\":{\"320\":1}}],[\"的中介者\",{\"1\":{\"318\":1}}],[\"的拦截器\",{\"1\":{\"314\":1}}],[\"的处理\",{\"1\":{\"314\":1}}],[\"的三层开发模式\",{\"1\":{\"311\":1}}],[\"的层次结构\",{\"1\":{\"309\":1}}],[\"的用法\",{\"1\":{\"307\":1}}],[\"的性能对应用程序很关键\",{\"1\":{\"305\":1}}],[\"的性能对应用程序不是很关键\",{\"1\":{\"305\":1}}],[\"的效果\",{\"1\":{\"305\":1}}],[\"的一个对象\",{\"1\":{\"305\":1}}],[\"的工厂类\",{\"1\":{\"304\":1}}],[\"的思想去理解\",{\"1\":{\"304\":1}}],[\"的对象\",{\"1\":{\"303\":3,\"304\":6,\"647\":1}}],[\"的创建工作\",{\"1\":{\"285\":1}}],[\"的\",{\"1\":{\"284\":1,\"303\":3,\"304\":6,\"314\":1,\"352\":1,\"774\":1,\"867\":1}}],[\"的程序\",{\"1\":{\"272\":2}}],[\"的符号\",{\"1\":{\"263\":1}}],[\"的即可\",{\"1\":{\"173\":1}}],[\"的汇编指令和结构是不同的\",{\"1\":{\"43\":1}}],[\"颜色计算\",{\"1\":{\"927\":1}}],[\"颜色\",{\"1\":{\"185\":1,\"613\":1}}],[\"颜色反向\",{\"1\":{\"174\":1}}],[\"颜色名字\",{\"0\":{\"167\":1}}],[\"颜色模式\",{\"1\":{\"155\":1}}],[\"视图是为请求而创建的对象\",{\"1\":{\"330\":1}}],[\"视图代表模型包含的数据的可视化\",{\"1\":{\"326\":1}}],[\"视图\",{\"1\":{\"318\":1,\"326\":2,\"330\":1}}],[\"视图模式切换\",{\"1\":{\"174\":1}}],[\"视图模式\",{\"0\":{\"135\":1}}],[\"视口外的看不见\",{\"1\":{\"160\":1}}],[\"视口内的可以看见\",{\"1\":{\"160\":1}}],[\"剪切蒙版\",{\"0\":{\"160\":1}}],[\"面向服务的架构\",{\"1\":{\"693\":1}}],[\"面向结构\",{\"0\":{\"372\":1}}],[\"面向接口编程\",{\"1\":{\"338\":1}}],[\"面向对象脚本语言\",{\"1\":{\"624\":1}}],[\"面向对象开发方法\",{\"0\":{\"397\":1}}],[\"面向对象时\",{\"1\":{\"366\":1}}],[\"面向对象的分析与设计\",{\"1\":{\"302\":1}}],[\"面向对象是一种思想\",{\"1\":{\"273\":1}}],[\"面向对象技术\",{\"0\":{\"273\":1}}],[\"面向对象模型\",{\"1\":{\"91\":1}}],[\"面向对象数据库系统\",{\"0\":{\"88\":1}}],[\"面向对象\",{\"1\":{\"20\":1,\"260\":1},\"2\":{\"344\":1}}],[\"面板快捷键\",{\"0\":{\"185\":1}}],[\"面板中可以进行图层筛选\",{\"1\":{\"158\":1}}],[\"面板\",{\"0\":{\"158\":1},\"1\":{\"185\":1,\"596\":1}}],[\"图片\",{\"1\":{\"874\":1}}],[\"图标\",{\"1\":{\"612\":1}}],[\"图标等等\",{\"1\":{\"132\":1}}],[\"图形结构\",{\"1\":{\"364\":1}}],[\"图像标记\",{\"0\":{\"876\":1}}],[\"图像将无法从磁盘加载\",{\"1\":{\"313\":1}}],[\"图像将从磁盘加载\",{\"1\":{\"313\":1}}],[\"图像大小和画布大小\",{\"1\":{\"155\":1}}],[\"图层快速编组\",{\"1\":{\"174\":1}}],[\"图层混合模式\",{\"0\":{\"164\":1}}],[\"图层叠加模式\",{\"0\":{\"163\":1}}],[\"图层蒙版\",{\"0\":{\"161\":1}}],[\"图层与组之间都可以形成\",{\"1\":{\"160\":1}}],[\"图层与图层\",{\"1\":{\"160\":1}}],[\"图层\",{\"0\":{\"156\":1},\"1\":{\"176\":1,\"185\":1}}],[\"矢量图层\",{\"1\":{\"157\":1}}],[\"矢量图\",{\"1\":{\"154\":1}}],[\"矢量图位图\",{\"0\":{\"154\":1}}],[\"矢量图图形处理工具\",{\"1\":{\"132\":1}}],[\"练习实战\",{\"0\":{\"523\":1}}],[\"练习巩固\",{\"1\":{\"168\":1}}],[\"练习\",{\"0\":{\"152\":1,\"302\":1},\"1\":{\"302\":1}}],[\"动一动键盘就会好\",{\"1\":{\"462\":1}}],[\"动态\",{\"1\":{\"749\":1}}],[\"动态弱类型语言让人模糊的场景\",{\"1\":{\"720\":1}}],[\"动态类型\",{\"1\":{\"720\":1}}],[\"动态预览\",{\"1\":{\"597\":1}}],[\"动态生成ua\",{\"0\":{\"556\":1}}],[\"动态撤销\",{\"1\":{\"310\":1}}],[\"动态增加功能\",{\"1\":{\"310\":1}}],[\"动态地给一个对象添加一些额外的职责\",{\"1\":{\"310\":1}}],[\"动态规划法\",{\"1\":{\"242\":1}}],[\"动态随机存取存储器\",{\"1\":{\"53\":1}}],[\"动作\",{\"1\":{\"185\":1}}],[\"动画\",{\"0\":{\"151\":1},\"1\":{\"848\":1}}],[\"材质灯光\",{\"0\":{\"149\":1}}],[\"建议最好都用form\",{\"1\":{\"892\":1}}],[\"建议使用第\",{\"1\":{\"305\":1}}],[\"建造者独立\",{\"1\":{\"285\":1}}],[\"建造者\",{\"1\":{\"285\":1}}],[\"建造者模式更加关注与零件装配的顺序\",{\"1\":{\"285\":1}}],[\"建造者模式\",{\"0\":{\"285\":1},\"1\":{\"279\":1}}],[\"建立起属于自己的知识体系抽象层次\",{\"1\":{\"623\":1}}],[\"建立目录\",{\"1\":{\"445\":1}}],[\"建立一套触发机制\",{\"1\":{\"320\":1}}],[\"建立相应数目的原型并克隆它们可能比每次用合适的状态手工实例化该类更方便一些\",{\"1\":{\"306\":1}}],[\"建立剪切蒙版\",{\"1\":{\"184\":1}}],[\"建立自身知识体系\",{\"1\":{\"1\":1}}],[\"建模\",{\"0\":{\"148\":1}}],[\"游戏等等\",{\"1\":{\"146\":1}}],[\"电影特技\",{\"1\":{\"146\":1}}],[\"电梯算法\",{\"1\":{\"56\":1}}],[\"路径的分支数目\",{\"1\":{\"369\":1}}],[\"路径\",{\"1\":{\"145\":1,\"154\":1,\"369\":1,\"418\":1,\"477\":1}}],[\"锚点\",{\"1\":{\"145\":1,\"154\":1}}],[\"钢笔工具p\",{\"0\":{\"145\":1,\"180\":1}}],[\"justify\",{\"1\":{\"912\":1}}],[\"julie\",{\"1\":{\"316\":7,\"317\":2,\"322\":3}}],[\"jit\",{\"1\":{\"643\":2}}],[\"jmod\",{\"1\":{\"638\":1}}],[\"jms\",{\"1\":{\"327\":3}}],[\"jmsservice\",{\"1\":{\"327\":3}}],[\"jlink\",{\"1\":{\"638\":1}}],[\"jcenter\",{\"1\":{\"637\":1}}],[\"jquery\",{\"0\":{\"616\":1}}],[\"jwt登录鉴权\",{\"1\":{\"576\":1}}],[\"jwt就能实现身份验证的功能\",{\"1\":{\"568\":1}}],[\"jjj\",{\"1\":{\"487\":1}}],[\"jndiname\",{\"1\":{\"332\":6}}],[\"jndi\",{\"1\":{\"332\":7}}],[\"js引擎\",{\"1\":{\"749\":1}}],[\"js是自由的流浪剑客\",{\"1\":{\"719\":1}}],[\"js执行机制\",{\"0\":{\"702\":1}}],[\"js概述\",{\"0\":{\"670\":1}}],[\"js中\",{\"0\":{\"666\":1}}],[\"js中单例提供一个公共的资源空间\",{\"1\":{\"288\":1}}],[\"js框架\",{\"1\":{\"657\":1}}],[\"jsdelivr\",{\"1\":{\"582\":3}}],[\"json中添加tslint脚本\",{\"1\":{\"739\":1}}],[\"jsonp\",{\"1\":{\"739\":1}}],[\"json5文件中相关规则保持一致\",{\"1\":{\"596\":1}}],[\"json5文件右键选择apply\",{\"1\":{\"596\":1}}],[\"json5文件\",{\"1\":{\"596\":1}}],[\"json文件中添加可用镜像地址\",{\"1\":{\"583\":1}}],[\"json\",{\"0\":{\"764\":1},\"1\":{\"558\":6,\"583\":1,\"721\":2,\"736\":1,\"738\":1}}],[\"jsp\",{\"1\":{\"314\":1,\"327\":1}}],[\"js\",{\"1\":{\"314\":1,\"396\":1,\"412\":1,\"478\":1,\"580\":1,\"678\":1},\"2\":{\"683\":1,\"766\":1}}],[\"joinus\",{\"1\":{\"610\":1,\"612\":1}}],[\"jobcher\",{\"1\":{\"582\":1}}],[\"johyc\",{\"1\":{\"475\":1}}],[\"john\",{\"1\":{\"308\":2,\"309\":2,\"316\":7,\"317\":2,\"318\":6,\"326\":2,\"329\":2,\"333\":2}}],[\"joe\",{\"1\":{\"322\":1}}],[\"josh\",{\"1\":{\"305\":1}}],[\"jdbc\",{\"1\":{\"284\":1}}],[\"jdk中的jlink\",{\"1\":{\"638\":1}}],[\"jdkimage\",{\"1\":{\"638\":1}}],[\"jdkimagetransform\",{\"1\":{\"638\":1}}],[\"jdk1\",{\"1\":{\"305\":3}}],[\"jdk\",{\"1\":{\"284\":2,\"305\":2,\"627\":2,\"638\":2}}],[\"j2ee设计模式\",{\"0\":{\"282\":1}}],[\"jar\",{\"1\":{\"638\":2}}],[\"jan\",{\"1\":{\"318\":2}}],[\"january\",{\"1\":{\"227\":1}}],[\"java中方法的重载\",{\"1\":{\"736\":1}}],[\"javatm\",{\"1\":{\"334\":3}}],[\"javascript命名空间模式\",{\"0\":{\"291\":1}}],[\"javascript设计模式与开发实践\",{\"1\":{\"677\":1}}],[\"javascript设计模式\",{\"0\":{\"288\":1}}],[\"javascript\",{\"0\":{\"289\":1,\"542\":1,\"607\":1},\"1\":{\"260\":1,\"670\":4,\"677\":1,\"678\":1,\"679\":2,\"704\":1,\"720\":2,\"749\":2}}],[\"java\",{\"0\":{\"540\":1},\"1\":{\"260\":1,\"284\":3,\"285\":1,\"303\":6,\"304\":13,\"305\":4,\"306\":10,\"307\":6,\"308\":19,\"309\":5,\"310\":6,\"311\":7,\"312\":6,\"313\":4,\"314\":7,\"315\":8,\"316\":6,\"317\":6,\"318\":4,\"319\":6,\"320\":9,\"321\":5,\"322\":5,\"323\":7,\"324\":4,\"325\":8,\"326\":5,\"327\":8,\"328\":6,\"329\":7,\"330\":5,\"331\":10,\"332\":9,\"333\":5,\"334\":9,\"627\":2,\"638\":1,\"720\":2}}],[\"jproxypatterndemo\",{\"1\":{\"313\":1}}],[\"jpeg\",{\"1\":{\"155\":1}}],[\"jpg\",{\"1\":{\"134\":1,\"155\":1,\"313\":4}}],[\"j\",{\"1\":{\"143\":2,\"174\":1,\"325\":1,\"366\":1,\"418\":3,\"487\":1}}],[\"调试方式颠覆常规\",{\"1\":{\"643\":1}}],[\"调大\",{\"1\":{\"561\":1}}],[\"调度器\",{\"1\":{\"330\":1}}],[\"调度算法\",{\"1\":{\"56\":1}}],[\"调用未注释说明的函数时\",{\"1\":{\"720\":1}}],[\"调用原生底层能力需要原生或者三方插件来做\",{\"1\":{\"623\":1}}],[\"调用服务的对象\",{\"1\":{\"332\":1}}],[\"调用者→接受者→命令\",{\"1\":{\"315\":1}}],[\"调用者只关心产品的接口\",{\"1\":{\"286\":1,\"303\":1}}],[\"调用对象寻找可以处理该命令的合适的对象\",{\"1\":{\"315\":1}}],[\"调用肉体对象的功能\",{\"1\":{\"307\":1}}],[\"调用\",{\"1\":{\"303\":3,\"304\":6,\"556\":1}}],[\"调整\",{\"1\":{\"627\":1,\"637\":1}}],[\"调整基本配置\",{\"1\":{\"576\":1}}],[\"调整对应权限\",{\"1\":{\"479\":1}}],[\"调整不透明度\",{\"1\":{\"174\":1}}],[\"调整功能\",{\"0\":{\"165\":1}}],[\"调整图层顺序\",{\"1\":{\"184\":1}}],[\"调整图层\",{\"1\":{\"157\":1}}],[\"调整键盘增量等\",{\"1\":{\"143\":1}}],[\"首选项\",{\"1\":{\"143\":1,\"174\":1}}],[\"技巧\",{\"0\":{\"140\":1}}],[\"技术和工具\",{\"1\":{\"400\":1}}],[\"技术发展\",{\"0\":{\"389\":1}}],[\"技术短板\",{\"0\":{\"388\":1}}],[\"技术复杂度\",{\"1\":{\"21\":1}}],[\"技术上\",{\"1\":{\"1\":1}}],[\"其后的版本完全继承\",{\"1\":{\"775\":1}}],[\"其核心设计思想就是将视图和数据分离\",{\"1\":{\"633\":1}}],[\"其次才考虑使用继承关系来实现\",{\"1\":{\"342\":1}}],[\"其叶子和树枝的声明都是实现类\",{\"1\":{\"309\":1}}],[\"其中最后的渲染流程很重要\",{\"1\":{\"694\":1}}],[\"其中已经嵌入harmonyos\",{\"1\":{\"592\":1}}],[\"其中el\",{\"1\":{\"431\":1}}],[\"其中c\",{\"1\":{\"318\":1}}],[\"其中\",{\"1\":{\"307\":1,\"309\":1,\"310\":1}}],[\"其通常由各个部分的子对象用一定的算法构成\",{\"1\":{\"285\":1}}],[\"其实差异不太大\",{\"1\":{\"444\":1}}],[\"其实现过程也是不同的\",{\"1\":{\"363\":1}}],[\"其实内部被适配成了\",{\"1\":{\"284\":1}}],[\"其实就是一堆编码套路\",{\"1\":{\"276\":1}}],[\"其他小改变\",{\"1\":{\"867\":1}}],[\"其他ui组件库\",{\"0\":{\"635\":1}}],[\"其他步骤在子类实现\",{\"1\":{\"324\":1}}],[\"其他\",{\"1\":{\"184\":1}}],[\"其他工具与功能\",{\"0\":{\"139\":1}}],[\"其它趣味算法\",{\"1\":{\"254\":1}}],[\"其它\",{\"0\":{\"3\":1}}],[\"叠印预览\",{\"1\":{\"135\":1}}],[\"yellow\",{\"1\":{\"926\":1}}],[\"yen\",{\"1\":{\"884\":1}}],[\"years\",{\"1\":{\"724\":1}}],[\"year\",{\"1\":{\"288\":3}}],[\"yaml\",{\"1\":{\"628\":1}}],[\"yaozh01data\",{\"1\":{\"558\":1}}],[\"yarn\",{\"0\":{\"414\":1},\"1\":{\"580\":1},\"2\":{\"416\":1}}],[\"yield\",{\"1\":{\"556\":3}}],[\"y的功能可类比到dvgugu\",{\"1\":{\"487\":1}}],[\"yy\",{\"1\":{\"487\":1}}],[\"yml\",{\"1\":{\"434\":1}}],[\"yum安装升级到13\",{\"1\":{\"431\":1}}],[\"yum\",{\"1\":{\"431\":3,\"447\":6,\"449\":1,\"453\":4,\"456\":1,\"459\":1,\"463\":1}}],[\"y^\",{\"1\":{\"218\":2}}],[\"y\",{\"1\":{\"135\":3,\"218\":2,\"307\":10,\"312\":26,\"431\":1,\"449\":1,\"477\":1,\"487\":1}}],[\"yourself\",{\"1\":{\"487\":1}}],[\"your\",{\"1\":{\"17\":1,\"228\":2,\"229\":1,\"627\":1}}],[\"you\",{\"1\":{\"17\":2,\"19\":1,\"199\":1,\"205\":1,\"208\":2,\"209\":1,\"210\":2,\"226\":1,\"227\":1,\"228\":2,\"229\":2,\"627\":2}}],[\"轮廓形式\",{\"1\":{\"135\":1}}],[\"轮流为各个终端的用户服务\",{\"1\":{\"124\":1}}],[\"印刷格式\",{\"1\":{\"134\":1}}],[\"熟练使用每一个设计模式\",{\"1\":{\"276\":1}}],[\"熟练掌握\",{\"1\":{\"168\":1,\"173\":1}}],[\"熟练掌握工具与操作\",{\"1\":{\"146\":1}}],[\"熟练掌握各种工具\",{\"1\":{\"132\":1}}],[\"熟悉\",{\"1\":{\"168\":2}}],[\"熟悉各种常用功能\",{\"1\":{\"132\":1}}],[\"熟悉界面\",{\"1\":{\"132\":1}}],[\"步骤4\",{\"1\":{\"304\":1,\"308\":1}}],[\"步骤\",{\"1\":{\"132\":1,\"146\":1,\"168\":1,\"303\":5,\"304\":8,\"305\":3,\"306\":5,\"307\":6,\"308\":4,\"309\":3,\"310\":6,\"311\":5,\"312\":5,\"313\":4,\"314\":4,\"315\":6,\"316\":4,\"317\":4,\"318\":4,\"319\":5,\"320\":5,\"321\":5,\"322\":5,\"323\":5,\"324\":4,\"325\":6,\"326\":5,\"327\":7,\"328\":6,\"329\":5,\"330\":5,\"331\":8,\"332\":7,\"333\":4}}],[\"杂志\",{\"1\":{\"132\":1}}],[\"杂而不精\",{\"1\":{\"1\":1}}],[\"板级\",{\"1\":{\"130\":1}}],[\"级\",{\"1\":{\"130\":1}}],[\"芯片\",{\"1\":{\"130\":1}}],[\"片\",{\"1\":{\"130\":1}}],[\"可设置左右margin\",{\"1\":{\"909\":1}}],[\"可取值on\",{\"1\":{\"895\":1}}],[\"可索引类型接口\",{\"0\":{\"728\":1}}],[\"可索引接口\",{\"1\":{\"726\":1}}],[\"可选参数必须配置到参数的最后面\",{\"1\":{\"736\":1}}],[\"可选参数\",{\"0\":{\"651\":1}}],[\"可选择incremental\",{\"1\":{\"596\":1}}],[\"可分可合\",{\"1\":{\"601\":1}}],[\"可快速定位解决环境问题\",{\"1\":{\"593\":1}}],[\"可快速选中图层\",{\"1\":{\"176\":1}}],[\"可看到是否成功添加\",{\"1\":{\"583\":1}}],[\"可有可没有\",{\"1\":{\"583\":1}}],[\"可信镜像仓库平台\",{\"1\":{\"582\":1}}],[\"可视模式下\",{\"1\":{\"487\":1}}],[\"可视模式\",{\"1\":{\"486\":1}}],[\"可执行一些输入并执行一些vim或插件提供的指令\",{\"1\":{\"486\":1}}],[\"可考虑更换\",{\"1\":{\"447\":1}}],[\"可自行下载之后再安装\",{\"1\":{\"431\":1}}],[\"可使用原型模式+备忘录模式\",{\"1\":{\"319\":1}}],[\"可吃\",{\"1\":{\"319\":1}}],[\"可利用场景比较少\",{\"1\":{\"316\":2}}],[\"可扩展性比较好\",{\"1\":{\"316\":1}}],[\"可动态指定一组对象处理请求\",{\"1\":{\"314\":1}}],[\"可代替继承\",{\"1\":{\"310\":1}}],[\"可乐\",{\"1\":{\"285\":1}}],[\"可读性\",{\"1\":{\"242\":1}}],[\"可能有时候也要删除掉重新下载依赖\",{\"1\":{\"628\":1}}],[\"可能有商务女装\",{\"1\":{\"304\":1}}],[\"可能导致系统崩溃\",{\"1\":{\"320\":1}}],[\"可能不容易观察运行时的特征\",{\"1\":{\"314\":1}}],[\"可能会造成循环调用\",{\"1\":{\"314\":1}}],[\"可能要去挂号\",{\"1\":{\"311\":1}}],[\"可能没有\",{\"1\":{\"239\":1}}],[\"可能需要调到300\",{\"1\":{\"155\":1}}],[\"可行性\",{\"1\":{\"239\":1}}],[\"可用来删除\",{\"1\":{\"184\":1}}],[\"可进行复制\",{\"1\":{\"183\":1}}],[\"可调整性能等等\",{\"1\":{\"174\":1}}],[\"可单独拖出\",{\"1\":{\"169\":2}}],[\"可以深层次嵌套\",{\"1\":{\"928\":1}}],[\"可以更高效地处理这种情况\",{\"1\":{\"864\":1}}],[\"可以点击选择\",{\"1\":{\"736\":1}}],[\"可以加\",{\"1\":{\"727\":1}}],[\"可以自动生成代码\",{\"1\":{\"721\":1}}],[\"可以编译成标准的js\",{\"1\":{\"720\":1}}],[\"可以改变变量的数据类型\",{\"1\":{\"720\":1}}],[\"可以说是js的超集\",{\"1\":{\"719\":1}}],[\"可以跳转到对应的父\",{\"1\":{\"596\":1}}],[\"可以在file\",{\"1\":{\"596\":1}}],[\"可以在首选项中把它取消掉\",{\"1\":{\"181\":1}}],[\"可以先点进去看是否有效\",{\"1\":{\"582\":1}}],[\"可以利用xshell或是vscode进行练习\",{\"1\":{\"483\":1}}],[\"可以通过使用\",{\"1\":{\"568\":1}}],[\"可以通过实现canactivate接口来创建自定义的卫士\",{\"1\":{\"568\":1}}],[\"可以通过\",{\"1\":{\"480\":1,\"928\":1}}],[\"可以通过基本运算有限次执行来实现\",{\"1\":{\"239\":1}}],[\"可以从application中对应的应用子文件夹中找到卸载文件进行卸载即可\",{\"1\":{\"468\":1}}],[\"可以输出到一个文件中查看\",{\"0\":{\"463\":1}}],[\"可以手动先备份\",{\"1\":{\"431\":1}}],[\"可以看到\",{\"1\":{\"425\":1}}],[\"可以看到的开关是抽象的\",{\"1\":{\"307\":1}}],[\"可以用作sass的变量值\",{\"1\":{\"922\":1}}],[\"可以用这种方法\",{\"1\":{\"421\":1}}],[\"可以用两种办法获取到数据区域的尾部行号\",{\"1\":{\"418\":1}}],[\"可以用数组来实现堆栈\",{\"1\":{\"355\":1}}],[\"可以用partition\",{\"1\":{\"254\":1}}],[\"可以随机存取表中的元素\",{\"1\":{\"353\":1}}],[\"可以扩展模块的功能\",{\"1\":{\"336\":1}}],[\"可以做报表\",{\"1\":{\"325\":1}}],[\"可以让多个节点复用同一个\",{\"1\":{\"864\":1}}],[\"可以让多个环境对象共享一个状态对象\",{\"1\":{\"321\":1}}],[\"可以让任何两个没有关联的类一起运行\",{\"1\":{\"284\":1}}],[\"可以考虑作为模板方法\",{\"1\":{\"320\":1,\"324\":1}}],[\"可以考虑使用原型模式拷贝多个对象供调用者使用\",{\"1\":{\"306\":1}}],[\"可以考虑使用第\",{\"1\":{\"305\":1}}],[\"可以将声明了form的输入框放到表单元素的外面\",{\"1\":{\"895\":1}}],[\"可以将这种依赖关系弱化\",{\"1\":{\"320\":1}}],[\"可以将一个需要解释执行的语言中的句子表示为一个抽象语法树\",{\"1\":{\"316\":1}}],[\"可以实现二者之间的松耦合\",{\"1\":{\"315\":1}}],[\"可以这样理解\",{\"1\":{\"313\":1}}],[\"可以使用户能够比较方便地回到某个历史的状态\",{\"1\":{\"319\":1}}],[\"可以使用外观模式定义系统中每一层的入口\",{\"1\":{\"311\":1}}],[\"可以使用相同的抽象类方法但是不同的桥接实现类\",{\"1\":{\"307\":1}}],[\"可以尝试使用第\",{\"1\":{\"305\":1}}],[\"可以直接访问\",{\"1\":{\"305\":1}}],[\"可以直接从工厂里面提货\",{\"1\":{\"286\":1,\"303\":1}}],[\"可以把这三个作为产品类\",{\"1\":{\"286\":1,\"303\":1}}],[\"可以不使用适配器\",{\"1\":{\"284\":1}}],[\"可以填充图案\",{\"1\":{\"184\":1}}],[\"可以本张照片也可以跨图片\",{\"1\":{\"183\":1}}],[\"可以想象成视口\",{\"1\":{\"160\":1}}],[\"可以进行图层锁定\",{\"1\":{\"158\":1}}],[\"可在首选项中设置\",{\"1\":{\"145\":1}}],[\"可定制\",{\"1\":{\"130\":1}}],[\"可靠性指标\",{\"0\":{\"77\":1}}],[\"可靠性\",{\"0\":{\"76\":1},\"1\":{\"130\":1}}],[\"可靠性与性能\",{\"0\":{\"75\":1}}],[\"lt\",{\"1\":{\"884\":1}}],[\"luckysheet\",{\"0\":{\"667\":1}}],[\"lrzsz\",{\"0\":{\"456\":1},\"1\":{\"456\":1}}],[\"ll\",{\"1\":{\"445\":1,\"724\":1}}],[\"lllll\",{\"1\":{\"421\":1}}],[\"llll\",{\"1\":{\"421\":1}}],[\"ls\",{\"1\":{\"445\":1,\"571\":1}}],[\"lsp\",{\"1\":{\"337\":1}}],[\"lf\",{\"1\":{\"437\":1}}],[\"low=\",{\"1\":{\"894\":1}}],[\"lowcode\",{\"0\":{\"395\":1}}],[\"lodash\",{\"0\":{\"618\":1}}],[\"long\",{\"1\":{\"418\":1,\"929\":2}}],[\"lookin\",{\"1\":{\"418\":1}}],[\"looking\",{\"1\":{\"332\":4}}],[\"lookupservice\",{\"1\":{\"327\":2}}],[\"lookup\",{\"1\":{\"327\":1,\"332\":2}}],[\"lora\",{\"1\":{\"317\":2}}],[\"loads\",{\"1\":{\"466\":2}}],[\"loadfromdisk\",{\"1\":{\"313\":2}}],[\"loadcache\",{\"1\":{\"306\":2}}],[\"loading\",{\"1\":{\"305\":5,\"313\":2,\"629\":1}}],[\"localstorage\",{\"0\":{\"904\":1}}],[\"local\",{\"1\":{\"628\":1}}],[\"locator\",{\"0\":{\"332\":1},\"1\":{\"282\":1,\"332\":1}}],[\"lock\",{\"1\":{\"628\":1}}],[\"locking\",{\"1\":{\"305\":1}}],[\"login\",{\"1\":{\"612\":1}}],[\"loginbar\",{\"1\":{\"610\":1,\"612\":1}}],[\"loggerchain\",{\"1\":{\"314\":4}}],[\"logger\",{\"1\":{\"314\":9}}],[\"logmessage\",{\"1\":{\"314\":5}}],[\"log\",{\"1\":{\"218\":2,\"252\":1,\"288\":5,\"331\":2,\"463\":1,\"724\":3,\"727\":1,\"780\":6}}],[\"logo\",{\"1\":{\"132\":1,\"610\":1,\"612\":1}}],[\"living\",{\"1\":{\"905\":1}}],[\"live\",{\"1\":{\"582\":1}}],[\"li>\",{\"1\":{\"880\":5}}],[\"li\",{\"1\":{\"843\":1,\"874\":1,\"923\":1}}],[\"lib\",{\"1\":{\"736\":1}}],[\"libraryelements=jar\",{\"1\":{\"638\":1}}],[\"lipeng\",{\"1\":{\"736\":2}}],[\"limit\",{\"1\":{\"441\":1}}],[\"lifo\",{\"1\":{\"355\":1}}],[\"liskov\",{\"0\":{\"337\":1}}],[\"list=\",{\"1\":{\"894\":1}}],[\"list<studentvo>\",{\"1\":{\"333\":2}}],[\"list<student>\",{\"1\":{\"329\":3}}],[\"list<service>\",{\"1\":{\"332\":1}}],[\"list<filter>\",{\"1\":{\"331\":1}}],[\"list<observer>\",{\"1\":{\"320\":1}}],[\"list<order>\",{\"1\":{\"315\":1}}],[\"list<memento>\",{\"1\":{\"319\":1}}],[\"list<employee>\",{\"1\":{\"309\":2}}],[\"list<person>\",{\"1\":{\"308\":20}}],[\"list\",{\"1\":{\"308\":7,\"309\":2,\"315\":1,\"319\":1,\"320\":1,\"329\":2,\"331\":1,\"332\":1,\"333\":1,\"411\":1,\"421\":1,\"463\":2,\"556\":1,\"571\":1,\"610\":1,\"612\":1,\"627\":1,\"648\":1,\"724\":1,\"727\":2,\"843\":1,\"923\":1}}],[\"lisp\",{\"1\":{\"260\":1}}],[\"literal\",{\"1\":{\"288\":1}}],[\"linteroptions\",{\"1\":{\"739\":1}}],[\"linter执行\",{\"1\":{\"596\":1}}],[\"linter执行代码全量检查\",{\"1\":{\"596\":1}}],[\"linter\",{\"1\":{\"596\":5}}],[\"lines\",{\"1\":{\"929\":1}}],[\"line\",{\"1\":{\"437\":1,\"465\":1,\"929\":2}}],[\"links\",{\"1\":{\"228\":2}}],[\"link\",{\"1\":{\"199\":2,\"556\":5,\"612\":1,\"873\":1}}],[\"linux中打开文件\",{\"0\":{\"485\":1}}],[\"linux上传下载工具\",{\"0\":{\"454\":1}}],[\"linux操作\",{\"0\":{\"445\":1}}],[\"linux\",{\"0\":{\"442\":1,\"458\":1,\"471\":1},\"1\":{\"129\":1,\"284\":1,\"431\":1,\"776\":1},\"2\":{\"490\":1}}],[\"language\",{\"1\":{\"905\":1}}],[\"lang=\",{\"1\":{\"880\":1}}],[\"latest\",{\"1\":{\"580\":1}}],[\"last\",{\"1\":{\"355\":1}}],[\"laura\",{\"1\":{\"308\":3,\"309\":2,\"322\":1}}],[\"lazy\",{\"1\":{\"305\":11}}],[\"label\",{\"1\":{\"259\":1}}],[\"layoutmanager\",{\"1\":{\"323\":1}}],[\"layout\",{\"0\":{\"199\":1,\"205\":1,\"715\":1},\"1\":{\"17\":2,\"19\":1,\"199\":1,\"205\":1,\"613\":1},\"2\":{\"207\":1}}],[\"less文件命名没有如此要求\",{\"1\":{\"924\":1}}],[\"less\",{\"0\":{\"918\":1}}],[\"leave\",{\"1\":{\"867\":2}}],[\"learner\",{\"1\":{\"209\":1}}],[\"level\",{\"1\":{\"314\":17}}],[\"len\",{\"1\":{\"251\":2,\"252\":2}}],[\"length>\",{\"1\":{\"288\":1}}],[\"length\",{\"1\":{\"251\":2,\"252\":2,\"288\":2,\"312\":1,\"317\":1,\"322\":1,\"325\":1,\"328\":1,\"780\":1}}],[\"let\",{\"0\":{\"780\":1},\"1\":{\"251\":4,\"252\":5,\"288\":3,\"704\":1,\"724\":18,\"727\":1,\"753\":1,\"780\":6}}],[\"leftsidebar\",{\"1\":{\"612\":1}}],[\"left\",{\"1\":{\"218\":3,\"252\":3,\"610\":1,\"612\":1,\"613\":2,\"843\":3,\"927\":2}}],[\"l\",{\"1\":{\"185\":1,\"421\":1,\"487\":2,\"554\":1,\"596\":1}}],[\"由字符构成的有限序列\",{\"1\":{\"360\":1}}],[\"由于多个空格和回车在html中会被等效为一个空格\",{\"1\":{\"874\":1}}],[\"由于图层渲染的时候也处理了周围的文字\",{\"1\":{\"845\":1}}],[\"由于迭代器模式将存储数据和遍历数据的职责分离\",{\"1\":{\"317\":1}}],[\"由于在客户端和真实主题之间增加了代理对象\",{\"1\":{\"313\":1}}],[\"由于只有\",{\"1\":{\"312\":1}}],[\"由于继承为类引入静态特征\",{\"1\":{\"310\":1}}],[\"由于聚合关联关系建立在抽象层\",{\"1\":{\"307\":1}}],[\"由于需求的变化\",{\"1\":{\"285\":1}}],[\"由于\",{\"1\":{\"284\":1,\"305\":1}}],[\"由多个分散的计算机连接而成的计算机系统\",{\"1\":{\"128\":1}}],[\"由数据库\",{\"1\":{\"98\":1}}],[\"www\",{\"1\":{\"871\":1}}],[\"wwww\",{\"1\":{\"871\":1}}],[\"w3\",{\"1\":{\"871\":2}}],[\"w3c\",{\"1\":{\"871\":1}}],[\"warning\",{\"1\":{\"926\":1}}],[\"watch\",{\"1\":{\"867\":2}}],[\"want\",{\"1\":{\"627\":2}}],[\"way\",{\"1\":{\"288\":5}}],[\"wrap\",{\"1\":{\"912\":1}}],[\"wrapper\",{\"1\":{\"610\":1,\"612\":1,\"627\":1}}],[\"written\",{\"1\":{\"670\":2}}],[\"writable\",{\"1\":{\"288\":4}}],[\"writing\",{\"1\":{\"212\":1,\"213\":1,\"227\":1}}],[\"writerow\",{\"1\":{\"558\":2}}],[\"writer\",{\"1\":{\"558\":4}}],[\"write\",{\"1\":{\"208\":1,\"209\":1,\"228\":1,\"313\":1,\"314\":5,\"556\":1}}],[\"wb+\",{\"1\":{\"556\":1}}],[\"wq\",{\"1\":{\"487\":1}}],[\"wget\",{\"1\":{\"431\":1,\"447\":1,\"449\":2,\"458\":1}}],[\"wto\",{\"1\":{\"318\":2}}],[\"won\",{\"1\":{\"929\":1}}],[\"word\",{\"1\":{\"487\":2}}],[\"workdir\",{\"1\":{\"580\":1}}],[\"workspace\",{\"1\":{\"420\":1,\"736\":1}}],[\"worksheetfunction\",{\"1\":{\"418\":1}}],[\"workbooks\",{\"1\":{\"418\":1}}],[\"workbook\",{\"1\":{\"334\":1}}],[\"world\",{\"1\":{\"288\":1,\"305\":2,\"724\":2}}],[\"women\",{\"1\":{\"316\":2}}],[\"whoami\",{\"1\":{\"445\":1}}],[\"who\",{\"1\":{\"445\":1}}],[\"whatevermethod\",{\"1\":{\"305\":1}}],[\"white\",{\"1\":{\"312\":5}}],[\"while\",{\"1\":{\"288\":1,\"638\":1}}],[\"which\",{\"1\":{\"211\":1,\"229\":1}}],[\"weight\",{\"1\":{\"923\":4,\"928\":3}}],[\"week\",{\"1\":{\"893\":2}}],[\"wepapp\",{\"0\":{\"399\":1}}],[\"webkit\",{\"1\":{\"925\":1}}],[\"webstorage\",{\"0\":{\"902\":1}}],[\"websocket\",{\"0\":{\"689\":1}}],[\"webworker\",{\"0\":{\"899\":1}}],[\"webpack\",{\"0\":{\"812\":1}}],[\"webpack5\",{\"1\":{\"391\":1}}],[\"webapp\",{\"1\":{\"405\":1}}],[\"web容器技术\",{\"1\":{\"396\":1}}],[\"web\",{\"1\":{\"305\":1,\"314\":2,\"330\":1,\"902\":1}}],[\"we\",{\"1\":{\"288\":1,\"525\":1,\"529\":1}}],[\"well\",{\"1\":{\"1\":1}}],[\"width=device\",{\"1\":{\"880\":1}}],[\"width\",{\"1\":{\"843\":5,\"880\":1,\"922\":1,\"927\":5,\"930\":7}}],[\"widget\",{\"0\":{\"630\":1,\"631\":1},\"1\":{\"630\":1,\"635\":1}}],[\"wiki\",{\"1\":{\"334\":1}}],[\"with\",{\"1\":{\"228\":1,\"310\":2,\"418\":2,\"558\":1,\"638\":1}}],[\"will\",{\"1\":{\"211\":1,\"226\":1,\"670\":1,\"929\":1}}],[\"windows下调整\",{\"1\":{\"627\":1}}],[\"windows\",{\"0\":{\"470\":1,\"476\":1,\"627\":1},\"1\":{\"127\":1,\"129\":1,\"284\":1,\"305\":1,\"313\":1,\"319\":1,\"627\":1,\"635\":1,\"776\":1}}],[\"w\",{\"1\":{\"174\":1,\"445\":1,\"487\":5,\"558\":2}}],[\"集合\",{\"1\":{\"364\":1}}],[\"集中模式\",{\"1\":{\"127\":1}}],[\"集成部署\",{\"0\":{\"30\":1,\"374\":1}}],[\"实例方法\",{\"1\":{\"867\":2}}],[\"实例演示了一个组织中员工的层次结构\",{\"1\":{\"309\":1}}],[\"实质上就是对一个求解问题的形式化描述\",{\"1\":{\"366\":1}}],[\"实际处理请求的服务\",{\"1\":{\"332\":1}}],[\"实现原理\",{\"1\":{\"724\":1}}],[\"实现\",{\"0\":{\"653\":1}}],[\"实现跨语言跳转\",{\"1\":{\"596\":1}}],[\"实现开闭原则的关键步骤就是抽象化\",{\"1\":{\"337\":1}}],[\"实现一个热插拔的效果\",{\"1\":{\"336\":1}}],[\"实现了各种身份验证机制\",{\"1\":{\"568\":1}}],[\"实现了该业务服务的实体类\",{\"1\":{\"327\":1}}],[\"实现了信息的封装\",{\"1\":{\"319\":1}}],[\"实现同一个接口\",{\"1\":{\"323\":1}}],[\"实现类的方法有不同的功能\",{\"1\":{\"321\":1}}],[\"实现代理模式需要额外的工作\",{\"1\":{\"313\":1}}],[\"实现与被代理类组合\",{\"1\":{\"313\":1}}],[\"实现细节对客户透明\",{\"1\":{\"307\":1}}],[\"实现系统可能有多个角度分类\",{\"1\":{\"307\":1}}],[\"实现克隆操作\",{\"1\":{\"306\":1}}],[\"实现难度\",{\"1\":{\"305\":6}}],[\"实现想要的目标接口\",{\"1\":{\"284\":1}}],[\"实现飞的接口\",{\"1\":{\"284\":1}}],[\"实时预览\",{\"1\":{\"597\":1}}],[\"实时性\",{\"1\":{\"130\":1}}],[\"实时操作系统\",{\"0\":{\"125\":1}}],[\"实体编号\",{\"1\":{\"884\":1}}],[\"实体名称\",{\"1\":{\"884\":1}}],[\"实体与数据库表进行关联\",{\"1\":{\"576\":1}}],[\"实体集\",{\"1\":{\"94\":1}}],[\"实体\",{\"1\":{\"94\":1,\"328\":2}}],[\"实体之间的联系\",{\"1\":{\"93\":1}}],[\"实体内部\",{\"1\":{\"93\":1}}],[\"语义化标签\",{\"0\":{\"891\":1}}],[\"语义分析与中间代码产生\",{\"1\":{\"271\":1}}],[\"语句\",{\"0\":{\"747\":1}}],[\"语法\",{\"0\":{\"872\":1},\"1\":{\"672\":1,\"723\":1}}],[\"语法分析\",{\"1\":{\"271\":1}}],[\"语音控制\",{\"1\":{\"121\":1}}],[\"语言扩展\",{\"1\":{\"720\":1}}],[\"语言精髓与编程实践\",{\"1\":{\"679\":1}}],[\"语言处理程序\",{\"0\":{\"532\":1}}],[\"语言\",{\"1\":{\"20\":1}}],[\"界面美观流畅\",{\"1\":{\"390\":1}}],[\"界面\",{\"0\":{\"133\":1,\"147\":1,\"169\":1,\"548\":1},\"1\":{\"121\":1,\"168\":1}}],[\"任意类型\",{\"1\":{\"724\":1}}],[\"任意地替换\",{\"1\":{\"323\":1}}],[\"任意两台计算机可以通过通信交换信息\",{\"1\":{\"128\":1}}],[\"任务间的先后顺序\",{\"1\":{\"503\":1}}],[\"任务管理器\",{\"1\":{\"480\":1}}],[\"任务\",{\"1\":{\"121\":1,\"721\":1}}],[\"任何可以用作css属性值的赋值都\",{\"1\":{\"922\":1}}],[\"任何可以用‌javascript来写的应用\",{\"1\":{\"675\":1}}],[\"任何js代码片段在执行前都要进行编译\",{\"1\":{\"749\":1}}],[\"任何人都可以向tc39委员会提交提案\",{\"1\":{\"671\":1}}],[\"任何程序都可由顺序\",{\"1\":{\"372\":1}}],[\"任何类都不应该从具体类派生\",{\"1\":{\"338\":1}}],[\"任何基类可以出现的地方\",{\"1\":{\"337\":1}}],[\"任何时候\",{\"1\":{\"21\":1}}],[\"任何不区分上下文和情景的教条都有可能在实施过程中遭遇惨败\",{\"1\":{\"21\":1}}],[\"作用\",{\"1\":{\"723\":1}}],[\"作用域\",{\"0\":{\"806\":1},\"1\":{\"673\":1,\"749\":1,\"815\":1}}],[\"作者\",{\"1\":{\"305\":1}}],[\"作为函数暴露\",{\"1\":{\"867\":1}}],[\"作为名称\",{\"1\":{\"613\":1}}],[\"作为一种创建类模式\",{\"1\":{\"286\":1,\"303\":1}}],[\"作为一个属性\",{\"1\":{\"95\":1}}],[\"作为两个不兼容接口之间的桥梁\",{\"1\":{\"284\":1}}],[\"作业管理\",{\"0\":{\"514\":1}}],[\"作业\",{\"1\":{\"121\":1}}],[\"设定档案或目录的存取权限\",{\"1\":{\"445\":1}}],[\"设置宽高不起作用\",{\"1\":{\"909\":1}}],[\"设置元素的内外部显示类型\",{\"1\":{\"908\":1}}],[\"设置字体的格式\",{\"1\":{\"875\":1}}],[\"设置镜像\",{\"0\":{\"583\":1}}],[\"设置延迟\",{\"0\":{\"557\":1}}],[\"设置项目的数据库\",{\"1\":{\"452\":1}}],[\"设置全局账号密码\",{\"1\":{\"421\":1}}],[\"设置每次循环体内的分割数据主体\",{\"1\":{\"418\":1}}],[\"设备管理\",{\"0\":{\"491\":1,\"512\":1}}],[\"设备\",{\"1\":{\"121\":1}}],[\"设计原则\",{\"0\":{\"830\":1}}],[\"设计理念\",{\"0\":{\"565\":1}}],[\"设计出求解问题的高效算法\",{\"1\":{\"363\":1}}],[\"设计实现运算的算法\",{\"1\":{\"363\":1}}],[\"设计一个连接服务器的框架\",{\"1\":{\"286\":1,\"303\":1}}],[\"设计模式有用的书籍\",{\"1\":{\"334\":1}}],[\"设计模式相关的网站\",{\"0\":{\"334\":1}}],[\"设计模式的用法\",{\"1\":{\"326\":1}}],[\"设计模式\",{\"0\":{\"275\":1,\"815\":1},\"1\":{\"674\":1}}],[\"设计算法时正确性\",{\"1\":{\"242\":1}}],[\"设计e\",{\"1\":{\"104\":1}}],[\"设计编码\",{\"0\":{\"26\":1}}],[\"设计思路和通用理念\",{\"1\":{\"1\":1,\"623\":1}}],[\"提交的是颜色值\",{\"1\":{\"893\":1}}],[\"提交时会进行格式验证\",{\"1\":{\"893\":2}}],[\"提案变成正式标准\",{\"1\":{\"671\":1}}],[\"提取公共代码\",{\"1\":{\"324\":1}}],[\"提倡的方式\",{\"1\":{\"305\":1}}],[\"提供一个可回滚的操作\",{\"1\":{\"319\":1}}],[\"提供一个创建一系列相关或相互依赖对象的接口\",{\"1\":{\"304\":1}}],[\"提供一种方法顺序访问一个聚合对象中各个元素\",{\"1\":{\"317\":1}}],[\"提供了实际的业务实现逻辑\",{\"1\":{\"327\":1}}],[\"提供了评估语言的语法或表达式的方式\",{\"1\":{\"316\":1}}],[\"提供了额外的功能\",{\"1\":{\"310\":1}}],[\"提供了\",{\"1\":{\"284\":1}}],[\"提示性文字\",{\"1\":{\"895\":1}}],[\"提示的问题不一致\",{\"1\":{\"736\":1}}],[\"提示信息\",{\"1\":{\"610\":1,\"612\":1}}],[\"提示\",{\"0\":{\"560\":1},\"1\":{\"120\":1,\"418\":1,\"904\":1}}],[\"提高了系统的复杂度\",{\"1\":{\"312\":1}}],[\"提高了安全性\",{\"1\":{\"311\":1}}],[\"提高了类的复用\",{\"1\":{\"284\":1}}],[\"提高灵活性\",{\"1\":{\"311\":1}}],[\"提高元器件的质量\",{\"1\":{\"79\":1}}],[\"提高可靠性的措施\",{\"0\":{\"79\":1}}],[\"结束explorer黑屏时\",{\"1\":{\"480\":1}}],[\"结束游戏\",{\"1\":{\"324\":1}}],[\"结点空间只在需要的时候才申请\",{\"1\":{\"354\":1}}],[\"结构\",{\"1\":{\"568\":1}}],[\"结构化开发方法\",{\"0\":{\"398\":1}}],[\"结构化程序设计\",{\"1\":{\"20\":1}}],[\"结构复杂\",{\"1\":{\"318\":1}}],[\"结构型模式structural\",{\"0\":{\"280\":1}}],[\"结构设计模式\",{\"0\":{\"280\":1}}],[\"结果可能不一样\",{\"1\":{\"120\":1}}],[\"虚拟环境\",{\"0\":{\"546\":1}}],[\"虚拟存储管理\",{\"0\":{\"522\":1}}],[\"虚拟机vmware\",{\"0\":{\"461\":1}}],[\"虚拟代理\",{\"1\":{\"313\":1}}],[\"虚拟现实等\",{\"1\":{\"121\":1}}],[\"虚拟处理器\",{\"1\":{\"120\":1}}],[\"虚拟性\",{\"1\":{\"120\":1}}],[\"方便找到这些变量\",{\"1\":{\"806\":1}}],[\"方便用户使用的程序集合\",{\"1\":{\"119\":1}}],[\"方舟编译器\",{\"0\":{\"588\":1}}],[\"方法名\",{\"1\":{\"596\":1}}],[\"方法的重载\",{\"1\":{\"736\":1}}],[\"方法的剩余参数\",{\"1\":{\"736\":1}}],[\"方法的默认参数\",{\"1\":{\"736\":1}}],[\"方法的可选参数\",{\"1\":{\"736\":1}}],[\"方法的简单的\",{\"1\":{\"333\":1}}],[\"方法的发展在80年代末至90年代中出现了一个高潮\",{\"1\":{\"302\":1}}],[\"方法来创建\",{\"1\":{\"867\":1}}],[\"方法来存储通过使用\",{\"1\":{\"329\":1}}],[\"方法来演示\",{\"1\":{\"326\":1}}],[\"方法来实现对象的浅拷贝或通过序列化的方式来实现深拷贝\",{\"1\":{\"306\":1}}],[\"方法时\",{\"1\":{\"305\":1}}],[\"方法中需要使用同步锁\",{\"1\":{\"305\":1}}],[\"方法\",{\"1\":{\"303\":6,\"304\":6,\"305\":1,\"306\":1,\"336\":1,\"480\":1,\"596\":1}}],[\"方法获取形状类型的对象\",{\"1\":{\"303\":1}}],[\"方向与目标\",{\"1\":{\"32\":1}}],[\"定案\",{\"1\":{\"671\":1}}],[\"定律\",{\"1\":{\"670\":1}}],[\"定义型列表\",{\"1\":{\"874\":1}}],[\"定义过滤器\",{\"1\":{\"331\":1}}],[\"定义一个生成随机ua的方法\",{\"1\":{\"556\":1}}],[\"定义一个表示访问者的接口\",{\"1\":{\"325\":1}}],[\"定义一个表示元素的接口\",{\"1\":{\"325\":1}}],[\"定义一个操作中的算法的骨架\",{\"1\":{\"324\":1}}],[\"定义一个创建对象的接口\",{\"1\":{\"286\":1,\"303\":1}}],[\"定义一系列的算法\",{\"1\":{\"323\":1}}],[\"定义对象间的一种一对多的依赖关系\",{\"1\":{\"320\":1}}],[\"定义接口\",{\"1\":{\"317\":1}}],[\"定义终结符与非终结符\",{\"1\":{\"316\":1}}],[\"定义它的文法表示\",{\"1\":{\"316\":1}}],[\"定义三个角色\",{\"1\":{\"315\":1}}],[\"定义系统的入口\",{\"1\":{\"311\":1}}],[\"定义时为具体类\",{\"1\":{\"309\":1}}],[\"定义多个产品\",{\"1\":{\"304\":1}}],[\"定义了用例图\",{\"1\":{\"302\":1}}],[\"定义\",{\"0\":{\"119\":1,\"238\":1,\"363\":1},\"1\":{\"363\":1}}],[\"定点整数\",{\"1\":{\"67\":1,\"69\":1}}],[\"定点小数\",{\"1\":{\"67\":1,\"69\":1}}],[\"定点表示法\",{\"1\":{\"67\":1}}],[\"定点数\",{\"0\":{\"67\":1}}],[\"同步信号量\",{\"1\":{\"505\":1}}],[\"同步\",{\"1\":{\"505\":1}}],[\"同步化\",{\"1\":{\"313\":1}}],[\"同一时间内只能由一个任务单独使用\",{\"1\":{\"505\":1}}],[\"同一逻辑结构可以对应多种存储结构\",{\"1\":{\"363\":1}}],[\"同win2k\",{\"1\":{\"445\":2}}],[\"同理也有工具可以用\",{\"1\":{\"380\":1}}],[\"同样的运算\",{\"1\":{\"363\":1}}],[\"同时支持即时编译\",{\"1\":{\"643\":1}}],[\"同时做出相应的处理\",{\"1\":{\"318\":1}}],[\"同时若一个对象发生改变\",{\"1\":{\"318\":1}}],[\"同时继承装饰者模式\",{\"1\":{\"310\":1}}],[\"同时又不改变形状类\",{\"1\":{\"310\":1}}],[\"同时又不改变其结构\",{\"1\":{\"310\":1}}],[\"同时又能保证性能\",{\"1\":{\"306\":1}}],[\"同时确保只有单个对象被创建\",{\"1\":{\"305\":1}}],[\"同时也增加了系统具体类的依赖\",{\"1\":{\"286\":1,\"303\":1}}],[\"同时也可以设置域名的子域名\",{\"1\":{\"117\":1}}],[\"同ps\",{\"1\":{\"133\":1}}],[\"同心圆\",{\"1\":{\"56\":1}}],[\"密钥管理\",{\"0\":{\"114\":1}}],[\"窃听\",{\"1\":{\"110\":1}}],[\"拒绝服务\",{\"1\":{\"110\":1}}],[\"典型安全威胁\",{\"0\":{\"110\":1}}],[\"网页中常用的命名\",{\"0\":{\"609\":1}}],[\"网站\",{\"1\":{\"451\":1}}],[\"网络进程发起url请求\",{\"1\":{\"706\":1}}],[\"网络进程\",{\"1\":{\"693\":1,\"706\":1}}],[\"网络资源\",{\"1\":{\"405\":1}}],[\"网络操作系统\",{\"0\":{\"127\":1}}],[\"网络安全\",{\"0\":{\"108\":1}}],[\"网状模型\",{\"1\":{\"91\":1}}],[\"物理设计\",{\"0\":{\"106\":1}}],[\"物理上远距离而且松耦合的多计算机系统\",{\"1\":{\"41\":1}}],[\"逻辑性和完备性\",{\"1\":{\"385\":1}}],[\"逻辑结构\",{\"0\":{\"364\":1},\"1\":{\"366\":1}}],[\"逻辑结构设计\",{\"0\":{\"105\":1}}],[\"逻辑上相邻的两个元素在物理位置上也相邻\",{\"1\":{\"353\":1}}],[\"逻辑型\",{\"1\":{\"260\":1}}],[\"逻辑运算\",{\"1\":{\"37\":1,\"266\":1}}],[\"逻辑运算及逻辑测试\",{\"1\":{\"37\":1}}],[\"逻辑运算等方式\",{\"1\":{\"36\":1}}],[\"差不多的\",{\"1\":{\"363\":1}}],[\"差\",{\"1\":{\"96\":1}}],[\"交互阶段\",{\"1\":{\"697\":1}}],[\"交流\",{\"1\":{\"263\":1}}],[\"交\",{\"1\":{\"96\":1}}],[\"主体部分\",{\"1\":{\"873\":1}}],[\"主题\",{\"1\":{\"613\":1}}],[\"主导航\",{\"1\":{\"612\":1}}],[\"主机空间最好干净一些些\",{\"1\":{\"449\":1}}],[\"主要应用在文本的多列布局方面\",{\"1\":{\"843\":1}}],[\"主要是一个ui框架\",{\"1\":{\"623\":1}}],[\"主要的\",{\"1\":{\"613\":1}}],[\"主要使用步骤\",{\"0\":{\"576\":1}}],[\"主要处理数据在services\",{\"1\":{\"566\":1}}],[\"主要将数据结构与数据操作分离\",{\"1\":{\"325\":1}}],[\"主要用于减少创建对象的数量\",{\"1\":{\"312\":1}}],[\"主要解决接口选择的问题\",{\"1\":{\"286\":1,\"303\":1,\"304\":1}}],[\"主要解决在软件系统中\",{\"1\":{\"284\":1,\"285\":1}}],[\"主要解决\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1}}],[\"主键是两端的联合主键\",{\"1\":{\"95\":1}}],[\"主存\",{\"1\":{\"53\":2}}],[\"主存储器空间\",{\"1\":{\"121\":1}}],[\"主存储器\",{\"1\":{\"52\":1}}],[\"都会自动触发window\",{\"1\":{\"904\":1}}],[\"都有\",{\"1\":{\"724\":1}}],[\"都继承自顶层类型\",{\"1\":{\"647\":1}}],[\"都将得到通知\",{\"1\":{\"320\":1}}],[\"都是衣柜类的\",{\"1\":{\"304\":1}}],[\"都可以使用工厂方法模式\",{\"1\":{\"286\":1,\"303\":1}}],[\"都需要增加一个具体类和对象实现工厂\",{\"1\":{\"286\":1,\"303\":1}}],[\"都对应一个关系模式\",{\"1\":{\"95\":1}}],[\"都崩溃\",{\"1\":{\"78\":1}}],[\"用下划线表示\",{\"1\":{\"924\":1}}],[\"用$符\",{\"0\":{\"922\":1}}],[\"用小写\",{\"1\":{\"906\":1}}],[\"用逗号分隔\",{\"1\":{\"895\":1}}],[\"用什么文档类型规范来解析\",{\"1\":{\"871\":1}}],[\"用法已更改\",{\"1\":{\"867\":1}}],[\"用可选参数的方式代替\",{\"1\":{\"651\":1}}],[\"用梯子\",{\"1\":{\"637\":1}}],[\"用英文\",{\"1\":{\"613\":1}}],[\"用编程的思想看待前端\",{\"1\":{\"604\":1}}],[\"用shell的方式\",{\"1\":{\"434\":1}}],[\"用ssh方式\",{\"1\":{\"424\":1}}],[\"用在多根轴线的情况下\",{\"1\":{\"912\":1}}],[\"用在我们想使用\",{\"1\":{\"332\":1}}],[\"用在\",{\"1\":{\"328\":1}}],[\"用于css中的计算\",{\"1\":{\"927\":1}}],[\"用于css前缀的使用\",{\"1\":{\"925\":1}}],[\"用于email和file输入框\",{\"1\":{\"895\":1}}],[\"用于表示数据的计算结果\",{\"1\":{\"894\":1}}],[\"用于标识分割文件次数\",{\"1\":{\"418\":1}}],[\"用于从客户端向服务器一次性传递带有多个属性的数据\",{\"1\":{\"333\":1}}],[\"用于对应用程序的请求或响应做一些预处理\",{\"1\":{\"331\":1}}],[\"用于对表示层和业务层解耦\",{\"1\":{\"327\":1}}],[\"用于把低级的数据访问\",{\"1\":{\"329\":1}}],[\"用于持续生命周期\",{\"1\":{\"328\":1}}],[\"用于与一些彼此之间没有太大关联的一些类\",{\"1\":{\"284\":1}}],[\"用一个中介对象来封装一系列的对象交互\",{\"1\":{\"318\":1}}],[\"用唯一标识码判断\",{\"1\":{\"312\":1}}],[\"用来包含文件的基本信息\",{\"1\":{\"873\":1}}],[\"用来包装原有的类\",{\"1\":{\"310\":1}}],[\"用来表示哪些任务可以并行执行\",{\"1\":{\"503\":1}}],[\"用来表示部分以及整体层次\",{\"1\":{\"309\":1}}],[\"用来提供一个集中的请求处理机制\",{\"1\":{\"330\":1}}],[\"用户不应再手动管理单个vue\",{\"1\":{\"867\":1}}],[\"用户名\",{\"1\":{\"628\":1}}],[\"用户将统一地使用组合结构中的所有对象\",{\"1\":{\"309\":1}}],[\"用户可以选择记录日志到什么地方\",{\"1\":{\"286\":1,\"303\":1}}],[\"用户可以将该域名下的网站服务器指向到自己的web\",{\"1\":{\"117\":1}}],[\"用户可同时访问和使用系统资源\",{\"1\":{\"120\":1}}],[\"用继承会造成类爆炸问题\",{\"1\":{\"307\":1}}],[\"用原型实例指定创建对象的种类\",{\"1\":{\"306\":1}}],[\"用这种方式写不免让人感觉生疏\",{\"1\":{\"305\":1}}],[\"用单例先缓存起来\",{\"1\":{\"305\":1}}],[\"用\",{\"1\":{\"304\":1,\"312\":1}}],[\"用的\",{\"1\":{\"263\":1}}],[\"用地址符号\",{\"1\":{\"259\":1}}],[\"用助记符代替机器指令的操作码\",{\"1\":{\"259\":1}}],[\"用符号表示指令的语言\",{\"1\":{\"259\":1}}],[\"用钢笔工具进行抠图\",{\"1\":{\"180\":1}}],[\"用外键标识实体间的联系\",{\"1\":{\"95\":1}}],[\"用途广泛\",{\"1\":{\"37\":1}}],[\"二叉树\",{\"0\":{\"368\":1}}],[\"二段构建模式\",{\"0\":{\"294\":1}}],[\"二\",{\"0\":{\"175\":1,\"283\":1,\"294\":1,\"337\":1,\"388\":1,\"611\":1,\"638\":1,\"931\":1}}],[\"二维表的形式表示的实体\",{\"1\":{\"95\":1}}],[\"二进制数组\",{\"0\":{\"790\":1}}],[\"二进制\",{\"1\":{\"63\":2}}],[\"表格\",{\"0\":{\"878\":1}}],[\"表格等等\",{\"1\":{\"874\":1}}],[\"表格结构表达实体集\",{\"1\":{\"95\":1}}],[\"表单增强\",{\"0\":{\"892\":1}}],[\"表单\",{\"0\":{\"879\":1},\"1\":{\"613\":1,\"895\":1}}],[\"表尾指针纸箱链表第一个结点\",{\"1\":{\"354\":1}}],[\"表示强调\",{\"1\":{\"875\":2}}],[\"表示方法没有返回值\",{\"1\":{\"724\":1}}],[\"表示进程和资源之间的分配和请求关系\",{\"1\":{\"504\":1}}],[\"表示层代码可以是\",{\"1\":{\"327\":1}}],[\"表示正数\",{\"1\":{\"65\":1}}],[\"表征程序性知识的最小单位\",{\"1\":{\"272\":1}}],[\"表达能力强\",{\"1\":{\"260\":1}}],[\"表\",{\"0\":{\"95\":1}}],[\"码\",{\"1\":{\"94\":1}}],[\"码距越大\",{\"1\":{\"71\":1}}],[\"码距为2\",{\"1\":{\"71\":1}}],[\"码距\",{\"0\":{\"71\":1}}],[\"域名\",{\"1\":{\"450\":1}}],[\"域名绑定a记录就是告诉dns\",{\"1\":{\"117\":1}}],[\"域\",{\"1\":{\"94\":1}}],[\"属性必须带引号\",{\"1\":{\"906\":1}}],[\"属性不用带引号\",{\"1\":{\"906\":2}}],[\"属性和值\",{\"0\":{\"883\":1}}],[\"属性在单文件组件\",{\"1\":{\"867\":1}}],[\"属性类接口\",{\"1\":{\"726\":1}}],[\"属性被用来检查现有的\",{\"1\":{\"312\":1}}],[\"属性栏中勾选\",{\"1\":{\"176\":1}}],[\"属性栏\",{\"1\":{\"133\":1,\"169\":1}}],[\"属性分类\",{\"1\":{\"94\":1}}],[\"属性\",{\"1\":{\"94\":1,\"302\":1,\"321\":1,\"479\":1}}],[\"强类型\",{\"1\":{\"720\":1}}],[\"强缓存与协商缓存的区别\",{\"0\":{\"687\":1}}],[\"强制换行标记\",{\"1\":{\"874\":1}}],[\"强制策略已更改\",{\"1\":{\"867\":1}}],[\"强制类型转换\",{\"0\":{\"681\":1},\"1\":{\"672\":1}}],[\"强制分配\",{\"1\":{\"506\":1}}],[\"强制退出\",{\"1\":{\"487\":1}}],[\"强实体\",{\"1\":{\"94\":1,\"95\":1}}],[\"强化软技能的同时\",{\"1\":{\"1\":1}}],[\"菱形表示联系\",{\"1\":{\"93\":1}}],[\"椭圆表示属性\",{\"1\":{\"93\":1}}],[\"联想到二叉树\",{\"1\":{\"252\":1}}],[\"联合类型\",{\"1\":{\"724\":1}}],[\"联合\",{\"1\":{\"180\":1}}],[\"联系必须转换为单独的一个关系模式\",{\"1\":{\"95\":1}}],[\"联系单独转换为一个关系模式\",{\"1\":{\"95\":1}}],[\"联系可以放到任意两端的实体中\",{\"1\":{\"95\":1}}],[\"联系类型\",{\"1\":{\"94\":1}}],[\"联系\",{\"1\":{\"94\":1}}],[\"联系的两端要写联系类型\",{\"1\":{\"93\":1}}],[\"联系模型\",{\"1\":{\"93\":1,\"95\":1}}],[\"联机磁盘存储器\",{\"1\":{\"52\":1}}],[\"概况\",{\"0\":{\"574\":1}}],[\"概率算法\",{\"1\":{\"242\":1}}],[\"概述\",{\"0\":{\"237\":1,\"492\":1,\"623\":1,\"692\":1}}],[\"概念结构设计\",{\"0\":{\"104\":1}}],[\"概念\",{\"0\":{\"94\":1}}],[\"概念模型\",{\"1\":{\"91\":1}}],[\"概设\",{\"0\":{\"24\":1}}],[\"关联的句柄里面进行搜索删不掉的文件的文件名\",{\"1\":{\"480\":1}}],[\"关于网页中的一些命名\",{\"1\":{\"608\":1}}],[\"关于编程\",{\"0\":{\"604\":1}}],[\"关于yum\",{\"0\":{\"446\":1}}],[\"关于换行格式lf和crlf\",{\"0\":{\"437\":1}}],[\"关于eslint和prettier\",{\"0\":{\"436\":1}}],[\"关于oss政策\",{\"0\":{\"377\":1}}],[\"关于设计模式的短文\",{\"1\":{\"334\":1}}],[\"关于学习\",{\"0\":{\"2\":1}}],[\"关键字\",{\"1\":{\"873\":1}}],[\"关键字搜索\",{\"1\":{\"860\":1}}],[\"关键字与保留字\",{\"0\":{\"743\":1}}],[\"关键技术\",{\"0\":{\"624\":1}}],[\"关键词\",{\"1\":{\"324\":1}}],[\"关键代码\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1}}],[\"关闭\",{\"1\":{\"324\":1}}],[\"关闭文件\",{\"1\":{\"174\":1}}],[\"关系运算\",{\"1\":{\"266\":1}}],[\"关系代数\",{\"0\":{\"96\":1,\"439\":1}}],[\"关系模型\",{\"0\":{\"95\":1},\"1\":{\"91\":1}}],[\"关系数据库系统\",{\"0\":{\"87\":1,\"438\":1}}],[\"浮点测试程序\",{\"1\":{\"82\":1}}],[\"浮点数运算\",{\"1\":{\"68\":1}}],[\"浮点数转二进制\",{\"1\":{\"64\":1}}],[\"整个过程需要以下三个进程的配合\",{\"1\":{\"706\":1}}],[\"整个系统只需提供一个\",{\"1\":{\"311\":1}}],[\"整体性\",{\"1\":{\"881\":1}}],[\"整体流程\",{\"0\":{\"694\":1}}],[\"整体场景\",{\"1\":{\"309\":1}}],[\"整体层次结构\",{\"1\":{\"309\":1}}],[\"整体\",{\"1\":{\"309\":1}}],[\"整体是一个工程\",{\"1\":{\"21\":1}}],[\"整数测试程序\",{\"1\":{\"82\":1}}],[\"基础标记\",{\"0\":{\"872\":1}}],[\"基础概念\",{\"0\":{\"741\":1}}],[\"基础规则比\",{\"1\":{\"738\":1}}],[\"基础数据类型\",{\"0\":{\"724\":1}}],[\"基础\",{\"0\":{\"672\":1}}],[\"基础决定上层建筑\",{\"1\":{\"657\":1}}],[\"基础命名\",{\"0\":{\"610\":1}}],[\"基础操作\",{\"0\":{\"579\":1}}],[\"基础语法\",{\"0\":{\"547\":1}}],[\"基础知识\",{\"0\":{\"387\":1,\"842\":1,\"870\":1}}],[\"基础工具使用\",{\"0\":{\"144\":1}}],[\"基类才能真正被复用\",{\"1\":{\"337\":1}}],[\"基于html4\",{\"1\":{\"906\":1}}],[\"基于数组的动态规划的\",{\"1\":{\"864\":1}}],[\"基于arkts的声明式编程范式和基于js扩展的类web开发范式\",{\"1\":{\"589\":1}}],[\"基于express框架\",{\"1\":{\"574\":1}}],[\"基于客户传递的名字\",{\"1\":{\"322\":1}}],[\"基于给定的信息生成实体类的对象\",{\"1\":{\"304\":1}}],[\"基本结构标记\",{\"0\":{\"873\":1}}],[\"基本数据类型\",{\"0\":{\"751\":1}}],[\"基本共用\",{\"1\":{\"613\":1}}],[\"基本命令\",{\"0\":{\"445\":1}}],[\"基本操作\",{\"0\":{\"421\":1}}],[\"基本的数据组织和数据处理方法\",{\"1\":{\"363\":1}}],[\"基本组成\",{\"0\":{\"264\":1}}],[\"基本概念三\",{\"0\":{\"634\":1}}],[\"基本概念二\",{\"0\":{\"633\":1}}],[\"基本概念一\",{\"0\":{\"630\":1}}],[\"基本概念\",{\"0\":{\"258\":1,\"420\":1,\"516\":1,\"566\":1}}],[\"基准程序法\",{\"0\":{\"82\":1}}],[\"基数排序\",{\"0\":{\"254\":1}}],[\"基数\",{\"1\":{\"68\":1}}],[\"等等都是脚本\",{\"1\":{\"932\":1}}],[\"等价物\",{\"1\":{\"880\":1}}],[\"等价地转换成另一种语言程序\",{\"1\":{\"272\":1}}],[\"等待输入命令\",{\"1\":{\"478\":1}}],[\"等待安装完成即可\",{\"1\":{\"449\":1}}],[\"等待时间\",{\"1\":{\"56\":1}}],[\"等\",{\"1\":{\"324\":1}}],[\"等是具体状态\",{\"1\":{\"321\":1}}],[\"等条件选择语句\",{\"1\":{\"321\":1}}],[\"等处理\",{\"1\":{\"315\":1}}],[\"等符号\",{\"1\":{\"259\":1}}],[\"等比例缩放\",{\"1\":{\"184\":1}}],[\"等效指令速度法\",{\"1\":{\"81\":1}}],[\"时的值\",{\"1\":{\"704\":1}}],[\"时的行为变化\",{\"1\":{\"323\":1}}],[\"时\",{\"1\":{\"504\":1}}],[\"时只有一个线程\",{\"1\":{\"305\":1}}],[\"时尚男装\",{\"1\":{\"304\":1}}],[\"时尚女装\",{\"1\":{\"304\":1}}],[\"时尚装\",{\"1\":{\"304\":1}}],[\"时序图\",{\"1\":{\"302\":1}}],[\"时钟频率\",{\"1\":{\"81\":1}}],[\"时间\",{\"1\":{\"445\":1}}],[\"时间复杂度\",{\"1\":{\"363\":1}}],[\"时间局部性\",{\"1\":{\"53\":1}}],[\"时间换空间\",{\"1\":{\"49\":1}}],[\"时间控制\",{\"1\":{\"36\":1}}],[\"发布\",{\"0\":{\"820\":1}}],[\"发布期使用\",{\"1\":{\"643\":1}}],[\"发行版\",{\"0\":{\"444\":1}}],[\"发展容错技术\",{\"1\":{\"79\":1}}],[\"发挥多核性能也需要操作系统和软件的合理分配\",{\"1\":{\"38\":1}}],[\"串\",{\"0\":{\"360\":1}}],[\"串联\",{\"1\":{\"78\":1}}],[\"串并联系统可靠性\",{\"0\":{\"78\":1}}],[\"失效率\",{\"1\":{\"77\":1}}],[\"总是不允许某些隐式类型转换\",{\"1\":{\"749\":1}}],[\"总共的位数是数据位+校验位\",{\"1\":{\"74\":1}}],[\"总线分类\",{\"1\":{\"60\":1}}],[\"总线\",{\"1\":{\"60\":1}}],[\"总线结构\",{\"0\":{\"60\":1}}],[\"校验位是k位\",{\"1\":{\"74\":1}}],[\"校验码\",{\"0\":{\"70\":1}}],[\"通配选择器\",{\"1\":{\"843\":1}}],[\"通俗定义\",{\"0\":{\"720\":1}}],[\"通俗的来讲a记录就是服务器的ip\",{\"1\":{\"117\":1}}],[\"通常用法\",{\"0\":{\"921\":1}}],[\"通常显示为粗体字\",{\"1\":{\"875\":1}}],[\"通常显示为斜体字\",{\"1\":{\"875\":1}}],[\"通常是斜体\",{\"1\":{\"875\":1}}],[\"通常把基于存储结构的运算实现的步骤或过程称为算法\",{\"1\":{\"366\":1}}],[\"通常由一个一维数组和一个记录栈顶元素位置的变量组成\",{\"1\":{\"355\":1}}],[\"通常可以表示为k0\",{\"1\":{\"352\":1}}],[\"通常命令模式的接口中只有一个方法\",{\"1\":{\"321\":1}}],[\"通常每个接收者都包含对另一个接收者的引用\",{\"1\":{\"314\":1}}],[\"通常有以下使用场景\",{\"1\":{\"313\":1}}],[\"通过为同一个函数提供多个函数类型定义来试下多种功能的目的\",{\"1\":{\"736\":1}}],[\"通过ipc\",{\"1\":{\"706\":1}}],[\"通过dockerfile创建镜像\",{\"1\":{\"579\":1}}],[\"通过脚手架创建项目\",{\"1\":{\"576\":1}}],[\"通过四个method区分\",{\"1\":{\"572\":1}}],[\"通过xshell等工具\",{\"1\":{\"449\":1}}],[\"通过指针链接起来的结点\",{\"1\":{\"354\":1}}],[\"通过这种方式\",{\"1\":{\"325\":1}}],[\"通过一个备忘录类专门存储对象状态\",{\"1\":{\"319\":1}}],[\"通过调用者调用接受者执行命令\",{\"1\":{\"315\":1}}],[\"通过改变链内的成员或者调动它们的次序\",{\"1\":{\"314\":1}}],[\"通过逻辑运算以解耦的方式把它们连接起来\",{\"1\":{\"308\":1}}],[\"通过桥接模式可以使它们在抽象层建立一个关联关系\",{\"1\":{\"307\":1}}],[\"通过\",{\"1\":{\"306\":2,\"457\":1}}],[\"通过动态装载\",{\"1\":{\"306\":1}}],[\"通过传递颜色信息来获取实体类的对象\",{\"1\":{\"312\":1}}],[\"通过传递形状或颜色信息来获取工厂\",{\"1\":{\"304\":1}}],[\"通过传递类型信息来获取实体类的对象\",{\"1\":{\"303\":1,\"304\":1}}],[\"通过接口转换\",{\"1\":{\"284\":1}}],[\"通过n\",{\"1\":{\"249\":1}}],[\"通过资源管理提高计算机系统的效率\",{\"1\":{\"119\":1}}],[\"通过扩大码距实现检错和纠错数据位是n位\",{\"1\":{\"74\":1}}],[\"通用寄存器\",{\"1\":{\"37\":1}}],[\"上下padding不会影响其它元素\",{\"1\":{\"909\":1}}],[\"上下选择按n\",{\"1\":{\"487\":1}}],[\"上一页\",{\"1\":{\"487\":1}}],[\"上移\",{\"1\":{\"487\":1}}],[\"上传\",{\"1\":{\"456\":1,\"457\":1}}],[\"上传代码包\",{\"1\":{\"450\":1}}],[\"上传代码\",{\"0\":{\"450\":1}}],[\"上按照定义的顺序执行这些过滤器\",{\"1\":{\"331\":1}}],[\"上运行\",{\"1\":{\"284\":1}}],[\"上插入k个校验位\",{\"1\":{\"74\":1}}],[\"上课有电话进来的例子\",{\"1\":{\"59\":1}}],[\"海明码\",{\"0\":{\"74\":1}}],[\"前提安装了sass\",{\"1\":{\"920\":1}}],[\"前后至少一个字符\",{\"1\":{\"893\":1}}],[\"前后端联调时出现不一致的情况\",{\"1\":{\"720\":1}}],[\"前后端各自也算是独立工程\",{\"1\":{\"21\":1}}],[\"前者释放v\",{\"1\":{\"505\":1}}],[\"前者相当于抽象化\",{\"1\":{\"307\":1}}],[\"前趋图中每个箭头代表一个信号量\",{\"1\":{\"505\":1}}],[\"前趋图\",{\"0\":{\"503\":1}}],[\"前端规范\",{\"0\":{\"658\":1,\"659\":1,\"941\":1}}],[\"前端工程化\",{\"0\":{\"657\":1},\"1\":{\"657\":1}}],[\"前端常用库\",{\"0\":{\"615\":1}}],[\"前端基础\",{\"0\":{\"603\":1}}],[\"前端性能监控sentry\",{\"0\":{\"392\":1}}],[\"前端目标\",{\"0\":{\"390\":1}}],[\"前端目前现状与问题\",{\"0\":{\"386\":1}}],[\"前端学习方法\",{\"0\":{\"385\":1}}],[\"前端开发\",{\"0\":{\"384\":1}}],[\"前端控制器可能使用一个调度器对象来调度请求到相应的具体处理程序\",{\"1\":{\"330\":1}}],[\"前端控制器\",{\"1\":{\"330\":1}}],[\"前端控制器模式\",{\"0\":{\"330\":1},\"1\":{\"282\":1}}],[\"前面加0补足最高次幂个\",{\"1\":{\"73\":1}}],[\"得到余数\",{\"1\":{\"73\":1}}],[\"做模2除法\",{\"1\":{\"73\":1}}],[\"将替换为根组件模板\",{\"1\":{\"867\":2}}],[\"将我们的模板移动到\",{\"1\":{\"866\":1}}],[\"将部分功能改善的一小部分发布为es\",{\"1\":{\"775\":1}}],[\"将该语言称为ecmascript\",{\"1\":{\"774\":1}}],[\"将该语言提交给了ecma\",{\"1\":{\"774\":1}}],[\"将location给浏览器进程\",{\"1\":{\"706\":1}}],[\"将22\",{\"1\":{\"638\":1}}],[\"将\",{\"1\":{\"561\":1}}],[\"将数据库user表中的对应的用户的host值从localhost改称\",{\"1\":{\"560\":1}}],[\"将settings\",{\"1\":{\"557\":1}}],[\"将其拖入废纸篓中清空即可\",{\"1\":{\"468\":1}}],[\"将之前的remove掉\",{\"1\":{\"422\":1}}],[\"将会被分割成\",{\"1\":{\"418\":1}}],[\"将两个最小值\",{\"1\":{\"369\":1}}],[\"将栈顶运算符弹出并输出\",{\"1\":{\"356\":1}}],[\"将栈顶的运算符弹出并输出\",{\"1\":{\"356\":1}}],[\"将自身引用传入访问者\",{\"1\":{\"325\":1}}],[\"将这些不同的步骤抽象为一个标准模式\",{\"1\":{\"568\":1}}],[\"将这些通用算法抽象出来\",{\"1\":{\"324\":1}}],[\"将这些算法封装成一个一个的类\",{\"1\":{\"323\":1}}],[\"将这些对象连接成一条链\",{\"1\":{\"314\":1}}],[\"将所有与某个状态有关的行为放到一个类中\",{\"1\":{\"321\":1}}],[\"将所有的观察者都通知到会花费很多时间\",{\"1\":{\"320\":1}}],[\"将各种具体的状态类抽象出来\",{\"1\":{\"321\":1}}],[\"将上述网状结构分离为星型结构\",{\"1\":{\"318\":1}}],[\"将一些已经定好的方法封装起来\",{\"1\":{\"324\":1}}],[\"将一对多转化成了一对一\",{\"1\":{\"318\":1}}],[\"将一组行为抽象为对象\",{\"1\":{\"315\":1}}],[\"将一个请求封装成一个对象\",{\"1\":{\"315\":1}}],[\"将一个复杂的构建与其表示相分离\",{\"1\":{\"285\":1}}],[\"将一个类插入另一个类系中\",{\"1\":{\"284\":1}}],[\"将一个类的接口转换成客户希望的另外一个接口\",{\"1\":{\"284\":1}}],[\"将具体功能职责划分\",{\"1\":{\"310\":1}}],[\"将对象组合成树形结构以表示\",{\"1\":{\"309\":1}}],[\"将抽象部分与实现部分分离\",{\"1\":{\"307\":1}}],[\"将变与不变分离开\",{\"1\":{\"285\":1}}],[\"将寄存器bx的内容送到ax中\",{\"1\":{\"259\":1}}],[\"将最根处与最后叶子结点交换\",{\"1\":{\"250\":1}}],[\"将整个待排记录序列分割成若干子序列\",{\"1\":{\"248\":1}}],[\"将第一个元素看做是一个有序的队列\",{\"1\":{\"247\":1}}],[\"将cpu工作时间划分为许多很短的时间片\",{\"1\":{\"124\":1}}],[\"将e\",{\"1\":{\"105\":1}}],[\"将原始信息与余数连接起来得到编码\",{\"1\":{\"73\":1}}],[\"将补0后的信息与多项式\",{\"1\":{\"73\":1}}],[\"将指令分成不同段\",{\"1\":{\"49\":1}}],[\"3578\",{\"1\":{\"895\":1}}],[\"39\",{\"1\":{\"884\":1}}],[\"34\",{\"1\":{\"884\":1}}],[\"3仍然允许在同一个元素上同时绑定v\",{\"1\":{\"867\":1}}],[\"300px\",{\"1\":{\"927\":1}}],[\"3000\",{\"1\":{\"580\":1}}],[\"30000\",{\"1\":{\"309\":2}}],[\"30em\",{\"1\":{\"923\":2}}],[\"30\",{\"1\":{\"894\":1}}],[\"30px\",{\"1\":{\"843\":2,\"927\":1}}],[\"37\",{\"1\":{\"724\":1}}],[\"3p\",{\"1\":{\"487\":1}}],[\"31\",{\"1\":{\"318\":2,\"425\":2}}],[\"32\",{\"1\":{\"312\":1}}],[\"36\",{\"1\":{\"312\":1}}],[\"333\",{\"1\":{\"880\":1,\"920\":1,\"926\":1}}],[\"33\",{\"1\":{\"251\":2,\"252\":2,\"638\":1}}],[\"3d动画软件\",{\"1\":{\"146\":1}}],[\"3\",{\"0\":{\"73\":1,\"89\":1,\"114\":1,\"125\":1,\"129\":1,\"162\":1,\"281\":1,\"286\":1,\"290\":1,\"451\":1,\"457\":1,\"668\":1,\"782\":1,\"875\":1,\"895\":1,\"924\":1},\"1\":{\"251\":1,\"252\":1,\"284\":3,\"286\":2,\"303\":3,\"304\":1,\"305\":8,\"306\":6,\"307\":3,\"308\":1,\"309\":1,\"310\":1,\"311\":3,\"312\":4,\"313\":4,\"314\":6,\"315\":2,\"316\":4,\"317\":3,\"318\":3,\"319\":4,\"320\":3,\"321\":3,\"322\":1,\"323\":4,\"324\":3,\"325\":3,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1,\"478\":1,\"487\":1,\"612\":1,\"613\":1,\"671\":1,\"679\":1,\"724\":5,\"775\":2,\"843\":1,\"845\":1,\"864\":5,\"867\":2,\"893\":1,\"894\":1,\"895\":1,\"927\":1,\"929\":2}}],[\"38\",{\"1\":{\"64\":1,\"312\":1,\"884\":1}}],[\"无序列表标记\",{\"1\":{\"874\":1}}],[\"无需额外标签\",{\"1\":{\"864\":1}}],[\"无需单独的声明式布局语言\",{\"0\":{\"646\":1}}],[\"无需使用工厂模式\",{\"1\":{\"286\":1,\"303\":1}}],[\"无法导入图片问题\",{\"0\":{\"667\":1}}],[\"无法上下移动查看信息\",{\"0\":{\"463\":1}}],[\"无法纠错\",{\"1\":{\"72\":1}}],[\"无须事先分配\",{\"1\":{\"354\":1}}],[\"无须修改原有代码\",{\"1\":{\"317\":1}}],[\"无须关心请求的处理细节和请求的传递\",{\"1\":{\"314\":1}}],[\"无异于一场灾难\",{\"1\":{\"284\":1}}],[\"无主次之分\",{\"1\":{\"128\":1}}],[\"无符号数\",{\"1\":{\"65\":1}}],[\"偶数个1只能检一位错\",{\"1\":{\"72\":1}}],[\"奇数像素可能导致浏览器渲染失真\",{\"1\":{\"845\":1}}],[\"奇数个1偶校验\",{\"1\":{\"72\":1}}],[\"奇校验\",{\"1\":{\"72\":1}}],[\"奇偶校验码\",{\"0\":{\"72\":1}}],[\"从babel\",{\"1\":{\"777\":1}}],[\"从来都不会出现的值\",{\"1\":{\"724\":1}}],[\"从主进程中独立出来的进程\",{\"1\":{\"693\":1}}],[\"从其他机器连接mysql\",{\"0\":{\"560\":1}}],[\"从finder访达\",{\"1\":{\"468\":1}}],[\"从开始分割的行往下计数\",{\"1\":{\"418\":1}}],[\"从头到尾读取中缀表达式的每个对象\",{\"1\":{\"356\":1}}],[\"从数据库中检索学生名单\",{\"1\":{\"329\":1,\"333\":1}}],[\"从数据库获取实体类\",{\"1\":{\"306\":1}}],[\"从数据可获取学生记录\",{\"1\":{\"326\":1}}],[\"从\",{\"1\":{\"305\":1}}],[\"从目标系统的不同角度出发\",{\"1\":{\"302\":1}}],[\"从n\",{\"1\":{\"249\":1}}],[\"从中心开始绘制\",{\"1\":{\"184\":1}}],[\"从用户角度进行建模\",{\"1\":{\"93\":1}}],[\"从而节省内存占用\",{\"1\":{\"693\":1}}],[\"从而减少系统中对象的个数\",{\"1\":{\"321\":1}}],[\"从而使其耦合松散\",{\"1\":{\"318\":1}}],[\"从而使您可以用不同的请求对客户进行参数化\",{\"1\":{\"315\":1}}],[\"从而使得客户程序与复杂元素的内部结构解耦\",{\"1\":{\"309\":1}}],[\"从而使码距变为2\",{\"1\":{\"72\":1}}],[\"从而实例化\",{\"1\":{\"305\":1}}],[\"从而得到海明码2的k次方\",{\"1\":{\"74\":1}}],[\"从a码到b码转换所需要改变的位数\",{\"1\":{\"71\":1}}],[\"从cache存储器中读写信息\",{\"1\":{\"54\":1}}],[\"~\",{\"1\":{\"69\":4,\"466\":2}}],[\"负数的补码为反码末位加1并有进位则进位\",{\"1\":{\"69\":1}}],[\"负数的反码是除符号位外其它各位按位取反\",{\"1\":{\"69\":1}}],[\"原因\",{\"1\":{\"845\":1}}],[\"原因是javascript是被网景公司注册了的\",{\"1\":{\"774\":1}}],[\"原型链\",{\"0\":{\"805\":1}}],[\"原型\",{\"0\":{\"804\":1},\"1\":{\"673\":1,\"815\":1}}],[\"原型模式是通过拷贝一个现有对象生成新对象的\",{\"1\":{\"306\":1}}],[\"原型模式已经与\",{\"1\":{\"306\":1}}],[\"原型模式很少单独出现\",{\"1\":{\"306\":1}}],[\"原型模式同样用于隔离类对象的使用者和具体类型\",{\"1\":{\"306\":1}}],[\"原型模式\",{\"0\":{\"306\":1},\"1\":{\"279\":1}}],[\"原生智能\",{\"1\":{\"601\":1}}],[\"原路径\",{\"1\":{\"477\":1}}],[\"原\",{\"1\":{\"69\":1}}],[\"原码的补码的符号位取反\",{\"1\":{\"69\":1}}],[\"原码\",{\"1\":{\"69\":2}}],[\"原理\",{\"1\":{\"49\":1}}],[\"小节\",{\"1\":{\"884\":1}}],[\"小于号\",{\"1\":{\"884\":1}}],[\"小于基准值放左边\",{\"1\":{\"252\":1}}],[\"小型字体标记\",{\"1\":{\"875\":1}}],[\"小技巧\",{\"1\":{\"610\":1,\"612\":1}}],[\"小程序\",{\"1\":{\"396\":1}}],[\"小根\",{\"1\":{\"250\":1}}],[\"小根数\",{\"1\":{\"250\":1}}],[\"小对大\",{\"1\":{\"68\":1}}],[\"小数点固定在最低\",{\"1\":{\"67\":1}}],[\"小数点固定在最高\",{\"1\":{\"67\":1}}],[\"小数点隐含不占位置\",{\"1\":{\"65\":1}}],[\"计算步骤\",{\"1\":{\"68\":1}}],[\"计算机\",{\"1\":{\"263\":2}}],[\"计算机网络\",{\"0\":{\"107\":1}}],[\"计算机中浮点数的表示\",{\"1\":{\"68\":1}}],[\"计算机与外设间的数据交互方式\",{\"0\":{\"59\":1}}],[\"计算机执行过程\",{\"0\":{\"45\":1}}],[\"计算机指令的组成\",{\"0\":{\"44\":1}}],[\"计算机组成与结构\",{\"0\":{\"33\":1}}],[\"计算机基础\",{\"0\":{\"9\":1}}],[\"所请求的资源已经全部分配完毕\",{\"1\":{\"504\":1}}],[\"所带来的复杂和难以维护\",{\"1\":{\"323\":1}}],[\"所谓备忘录模式就是在不破坏封装的前提下\",{\"1\":{\"319\":1}}],[\"所有已打开的当前网站的浏览器窗口\",{\"1\":{\"904\":1}}],[\"所有插槽都通过\",{\"1\":{\"867\":1}}],[\"所有类型的值\",{\"1\":{\"749\":1}}],[\"所有版本\",{\"1\":{\"411\":1}}],[\"所有策略类都需要对外暴露\",{\"1\":{\"323\":1}}],[\"所有的请求都将由一个单一的处理程序处理\",{\"1\":{\"330\":1}}],[\"所有的依赖对象\",{\"1\":{\"320\":1}}],[\"所有的衣柜\",{\"1\":{\"304\":1}}],[\"所有依赖于它的对象都得到通知并被自动更新\",{\"1\":{\"320\":1}}],[\"所有设备不可靠\",{\"1\":{\"78\":1}}],[\"所表示的数值精度由尾数确定\",{\"1\":{\"68\":1}}],[\"所能表示的数值范围由阶码确定\",{\"1\":{\"68\":1}}],[\"所以html中要换段落就要用<p>\",{\"1\":{\"874\":1}}],[\"所以边缘会出现模糊的情况\",{\"1\":{\"845\":1}}],[\"所以ecmascript是javascript的规格\",{\"1\":{\"774\":1}}],[\"所以实际上也是一门\",{\"1\":{\"749\":1}}],[\"所以不要这样使用\",{\"1\":{\"724\":1}}],[\"所以下下来之后好一些\",{\"1\":{\"627\":1}}],[\"所以需要构建\",{\"1\":{\"777\":1}}],[\"所以需要手动换方式\",{\"1\":{\"581\":1}}],[\"所以需要将主存单元地址转换为cache存储器地址\",{\"1\":{\"54\":1}}],[\"所以合并的时候强制关掉这个可以保留合并信息\",{\"1\":{\"423\":1}}],[\"所以里氏代换原则是对实现抽象化的具体步骤的规范\",{\"1\":{\"337\":1}}],[\"所以它可以通过网络传输\",{\"1\":{\"333\":1}}],[\"所以职责链将请求的发送者和请求的处理者解耦了\",{\"1\":{\"314\":1}}],[\"所以说孙悟空是高翠兰代理类\",{\"1\":{\"313\":1}}],[\"所以\",{\"1\":{\"312\":1}}],[\"所以想让它延迟加载\",{\"1\":{\"305\":1}}],[\"所以严格意义上它并不算单例模式\",{\"1\":{\"305\":1}}],[\"所以所有文件的处理必须通过唯一的实例来进行\",{\"1\":{\"305\":1}}],[\"所以至多只能适配一个适配者类\",{\"1\":{\"284\":1}}],[\"所以一般就分析最坏情况复杂度\",{\"1\":{\"240\":1}}],[\"所以结果为\",{\"1\":{\"64\":1}}],[\"所以结果是\",{\"1\":{\"64\":1}}],[\"数字类型\",{\"1\":{\"724\":1}}],[\"数字键\",{\"1\":{\"174\":1}}],[\"数组的扩展\",{\"0\":{\"785\":1}}],[\"数组类型\",{\"1\":{\"724\":1}}],[\"数组结构中讨论的元素关系主要是指相邻关系或邻接关系\",{\"1\":{\"363\":1}}],[\"数组\",{\"0\":{\"345\":1,\"346\":1},\"1\":{\"867\":1}}],[\"数值的扩展\",{\"0\":{\"784\":1}}],[\"数值对象\",{\"1\":{\"329\":1}}],[\"数值表示范围\",{\"1\":{\"69\":1}}],[\"数符\",{\"1\":{\"68\":1}}],[\"数据列表\",{\"1\":{\"894\":1}}],[\"数据持久化\",{\"1\":{\"629\":1}}],[\"数据之类的\",{\"1\":{\"452\":1}}],[\"数据流图\",{\"0\":{\"371\":1}}],[\"数据对象集\",{\"1\":{\"366\":1}}],[\"数据对象在计算机中的组织方式\",{\"1\":{\"363\":1}}],[\"数据集合相关联的操作集\",{\"1\":{\"366\":1}}],[\"数据运算高效实现\",{\"1\":{\"363\":1}}],[\"数据元素仍然是一个表\",{\"1\":{\"346\":1}}],[\"数据源可以是数据库\",{\"1\":{\"329\":1}}],[\"数据访问对象实体类\",{\"1\":{\"329\":1}}],[\"数据访问对象接口\",{\"1\":{\"329\":1}}],[\"数据访问对象模式\",{\"0\":{\"329\":1},\"1\":{\"282\":1}}],[\"数据输入输出\",{\"1\":{\"268\":1}}],[\"数据类型\",{\"0\":{\"745\":1,\"749\":1},\"1\":{\"265\":1,\"366\":1,\"672\":1}}],[\"数据\",{\"0\":{\"265\":1},\"1\":{\"501\":1}}],[\"数据挖掘算法\",{\"1\":{\"242\":1}}],[\"数据字典\",{\"1\":{\"103\":1}}],[\"数据信息的集合\",{\"1\":{\"100\":1}}],[\"数据库的事务管理\",{\"1\":{\"319\":1}}],[\"数据库的数据池\",{\"1\":{\"312\":1}}],[\"数据库访问\",{\"1\":{\"286\":1,\"303\":1}}],[\"数据库分析与设计\",{\"0\":{\"102\":1}}],[\"数据库\",{\"0\":{\"100\":1},\"1\":{\"451\":1}}],[\"数据库系统\",{\"0\":{\"98\":1}}],[\"数据库技术\",{\"0\":{\"97\":1}}],[\"数据库管理系统\",{\"0\":{\"83\":1,\"99\":1}}],[\"数据约束条件\",{\"1\":{\"92\":1}}],[\"数据操作\",{\"1\":{\"92\":1}}],[\"数据模型\",{\"0\":{\"90\":1}}],[\"数据表示\",{\"0\":{\"61\":1}}],[\"数据总线\",{\"1\":{\"60\":1}}],[\"数据处理速率\",{\"1\":{\"81\":1}}],[\"数据处理\",{\"1\":{\"36\":1}}],[\"数据结构与算法javascript描述\",{\"1\":{\"677\":1}}],[\"数据结构\",{\"0\":{\"362\":1,\"748\":1},\"1\":{\"20\":1,\"92\":1,\"672\":1}}],[\"阶码\",{\"1\":{\"68\":1}}],[\"阶符\",{\"1\":{\"68\":1}}],[\"euro\",{\"1\":{\"884\":1}}],[\"equiv\",{\"1\":{\"880\":1}}],[\"equiv=\",{\"1\":{\"880\":1}}],[\"equiv属性\",{\"1\":{\"873\":1}}],[\"equals\",{\"1\":{\"739\":1}}],[\"equalsignorecase\",{\"1\":{\"303\":3,\"304\":8,\"308\":3,\"322\":1,\"327\":1,\"330\":1,\"332\":4}}],[\"eich\",{\"1\":{\"774\":1}}],[\"events\",{\"1\":{\"864\":1}}],[\"eventsource和长轮询的差别\",{\"0\":{\"688\":1}}],[\"eventloop\",{\"0\":{\"686\":1}}],[\"eventually\",{\"1\":{\"670\":1}}],[\"ee76b1ff\",{\"1\":{\"638\":2}}],[\"ets文件中批量生成相应的声明信息\",{\"1\":{\"596\":1}}],[\"ets为源码文件后缀\",{\"1\":{\"587\":1}}],[\"etc\",{\"1\":{\"433\":2,\"447\":5,\"458\":4,\"459\":1,\"466\":2,\"583\":1}}],[\"es8\",{\"0\":{\"800\":1}}],[\"es7\",{\"0\":{\"799\":1}}],[\"es2015\",{\"1\":{\"775\":1}}],[\"esharmony分出来的可行的构想es6草案冻结\",{\"1\":{\"775\":1}}],[\"es5\",{\"1\":{\"775\":1}}],[\"es5正式发布\",{\"1\":{\"775\":1}}],[\"es5中没法设置默认参数\",{\"1\":{\"736\":1}}],[\"es5中方法的实参和形参可以不一样\",{\"1\":{\"736\":1}}],[\"es\",{\"1\":{\"775\":4,\"776\":2}}],[\"estree\",{\"1\":{\"738\":1}}],[\"eslint\",{\"1\":{\"738\":4}}],[\"es6新特性有哪些\",{\"0\":{\"779\":1}}],[\"es6支持度应该还是蛮好的\",{\"1\":{\"776\":1}}],[\"es6正式成为国际标准\",{\"1\":{\"775\":1}}],[\"es6发布\",{\"1\":{\"775\":1}}],[\"es6\",{\"0\":{\"773\":1},\"1\":{\"759\":1}}],[\"es6和ts中可以设置默认参数\",{\"1\":{\"736\":1}}],[\"es6中的小撇号\",{\"1\":{\"724\":1}}],[\"esc\",{\"1\":{\"487\":1}}],[\"esc键按两下都会进入正常模式\",{\"1\":{\"486\":1}}],[\"essentials\",{\"1\":{\"334\":1}}],[\"ecma发布了ecma\",{\"1\":{\"774\":1}}],[\"ecmascript\",{\"1\":{\"288\":1,\"290\":1}}],[\"echarts\",{\"0\":{\"621\":1}}],[\"echo\",{\"1\":{\"478\":8}}],[\"edu\",{\"1\":{\"431\":1,\"545\":4,\"583\":2}}],[\"editor\",{\"1\":{\"596\":1}}],[\"edition\",{\"1\":{\"334\":2}}],[\"edit\",{\"1\":{\"199\":1}}],[\"eof\",{\"0\":{\"424\":1}}],[\"em\",{\"1\":{\"875\":1}}],[\"email\",{\"1\":{\"421\":1,\"893\":2,\"895\":1}}],[\"employee\",{\"1\":{\"309\":34}}],[\"eg\",{\"1\":{\"366\":1,\"920\":1}}],[\"ejb\",{\"1\":{\"327\":4,\"328\":3}}],[\"ejbservice\",{\"1\":{\"327\":3}}],[\"errorlogger\",{\"1\":{\"314\":7}}],[\"error\",{\"1\":{\"314\":9,\"638\":1,\"724\":4,\"926\":1}}],[\"effective\",{\"1\":{\"305\":1}}],[\"el\",{\"1\":{\"431\":1,\"860\":2}}],[\"el7\",{\"1\":{\"431\":4}}],[\"element\",{\"0\":{\"631\":1},\"1\":{\"881\":1}}],[\"elementtype\",{\"1\":{\"366\":1}}],[\"elements\",{\"1\":{\"205\":1,\"334\":1}}],[\"else\",{\"1\":{\"288\":1,\"303\":2,\"304\":5,\"321\":1,\"323\":1,\"327\":1,\"330\":1,\"332\":1,\"556\":1,\"558\":1,\"736\":3,\"864\":2,\"867\":2}}],[\"exclude\",{\"1\":{\"739\":1}}],[\"exception\",{\"1\":{\"566\":1}}],[\"excel大文件\",{\"0\":{\"418\":1}}],[\"excel\",{\"0\":{\"417\":1}}],[\"excerpt\",{\"1\":{\"225\":1}}],[\"ext\",{\"1\":{\"639\":1}}],[\"extract\",{\"1\":{\"556\":4}}],[\"extend\",{\"0\":{\"926\":1},\"1\":{\"926\":3}}],[\"extends\",{\"1\":{\"213\":1,\"304\":2,\"306\":3,\"307\":1,\"310\":1,\"314\":3,\"320\":3,\"322\":2,\"324\":2,\"861\":2}}],[\"extended\",{\"1\":{\"212\":1}}],[\"extensions\",{\"1\":{\"211\":1,\"212\":2}}],[\"extension\",{\"0\":{\"211\":1}}],[\"exzample\",{\"1\":{\"556\":1}}],[\"exe报错\",{\"1\":{\"638\":1}}],[\"exec\",{\"1\":{\"579\":2}}],[\"execution\",{\"1\":{\"638\":2}}],[\"executionpolicy\",{\"1\":{\"481\":3}}],[\"executing\",{\"1\":{\"331\":2,\"332\":6,\"638\":1}}],[\"executestrategy\",{\"1\":{\"323\":4}}],[\"execute\",{\"1\":{\"315\":4,\"331\":8,\"332\":7}}],[\"exe\",{\"1\":{\"480\":1,\"638\":1}}],[\"expected\",{\"1\":{\"861\":1}}],[\"expose\",{\"1\":{\"580\":1}}],[\"export\",{\"1\":{\"458\":2,\"466\":3}}],[\"expr2\",{\"1\":{\"316\":10}}],[\"expr1\",{\"1\":{\"316\":10}}],[\"expression\",{\"1\":{\"316\":22}}],[\"expression4j\",{\"1\":{\"316\":1}}],[\"exist\",{\"1\":{\"724\":2}}],[\"exists\",{\"1\":{\"332\":3,\"724\":1}}],[\"exit\",{\"1\":{\"418\":1,\"579\":1}}],[\"examplepipeline\",{\"1\":{\"558\":1}}],[\"examplespider\",{\"1\":{\"556\":1}}],[\"example\",{\"1\":{\"17\":1,\"554\":4,\"556\":3}}],[\"easyloading\",{\"1\":{\"629\":1}}],[\"easily\",{\"1\":{\"208\":1}}],[\"early\",{\"0\":{\"424\":1}}],[\"each\",{\"1\":{\"205\":1,\"210\":1,\"229\":1,\"929\":1}}],[\"en\",{\"1\":{\"871\":1}}],[\"env\",{\"0\":{\"868\":1},\"1\":{\"868\":2}}],[\"environment\",{\"1\":{\"593\":1}}],[\"ensure\",{\"1\":{\"558\":1}}],[\"end\",{\"1\":{\"418\":5,\"611\":1}}],[\"endplay\",{\"1\":{\"324\":4}}],[\"engine\",{\"0\":{\"395\":1}}],[\"enjoy\",{\"1\":{\"324\":4}}],[\"encoding=\",{\"1\":{\"558\":1}}],[\"encoding\",{\"1\":{\"314\":1}}],[\"encryption\",{\"0\":{\"202\":1},\"2\":{\"204\":1}}],[\"enum\",{\"1\":{\"305\":2,\"722\":1,\"724\":3,\"736\":2}}],[\"enumerable\",{\"1\":{\"288\":4}}],[\"enumeration\",{\"1\":{\"284\":2}}],[\"entity\",{\"0\":{\"328\":1},\"1\":{\"282\":1,\"328\":1,\"575\":1}}],[\"enter=\",{\"1\":{\"860\":1}}],[\"enterprise\",{\"1\":{\"431\":1}}],[\"enter\",{\"1\":{\"174\":1,\"867\":2}}],[\"enrich\",{\"1\":{\"212\":1}}],[\"enhancement\",{\"0\":{\"212\":1,\"213\":1,\"220\":1}}],[\"enhance\",{\"0\":{\"208\":1},\"1\":{\"213\":1}}],[\"eps\",{\"1\":{\"134\":1}}],[\"e\",{\"0\":{\"93\":1},\"1\":{\"95\":1,\"174\":2,\"228\":1,\"306\":2,\"309\":4,\"477\":1,\"478\":3,\"487\":3}}],[\"e为阶码\",{\"1\":{\"68\":1}}],[\"nbsp\",{\"1\":{\"884\":1}}],[\"n的范围\",{\"1\":{\"875\":1}}],[\"nju\",{\"1\":{\"583\":1}}],[\"nginx\",{\"0\":{\"584\":1,\"586\":1},\"1\":{\"585\":1}}],[\"ng\",{\"1\":{\"487\":1}}],[\"nvm\",{\"1\":{\"466\":15,\"571\":8}}],[\"npx\",{\"0\":{\"412\":1},\"1\":{\"412\":1}}],[\"npm全局安装脚手架\",{\"1\":{\"576\":1}}],[\"npmmirror\",{\"1\":{\"466\":2}}],[\"npm\",{\"0\":{\"409\":1},\"1\":{\"411\":3,\"412\":1,\"413\":1,\"576\":1,\"721\":1,\"739\":2,\"776\":1},\"2\":{\"416\":1}}],[\"n是表的长度\",{\"1\":{\"352\":1}}],[\"n>=1\",{\"1\":{\"352\":1}}],[\"number\",{\"0\":{\"756\":1},\"1\":{\"722\":1,\"724\":10,\"727\":1,\"736\":13,\"751\":1,\"861\":1,\"893\":2,\"895\":2}}],[\"num\",{\"1\":{\"648\":1,\"724\":4,\"736\":3}}],[\"num2\",{\"1\":{\"323\":9}}],[\"num1\",{\"1\":{\"323\":9}}],[\"nullpatterndemo\",{\"1\":{\"322\":2}}],[\"nullcustomer\",{\"1\":{\"322\":4}}],[\"null\",{\"0\":{\"322\":1,\"753\":1},\"1\":{\"281\":1,\"288\":1,\"303\":3,\"304\":9,\"305\":4,\"306\":1,\"312\":1,\"313\":1,\"316\":4,\"317\":1,\"321\":1,\"322\":3,\"332\":3,\"647\":1,\"722\":1,\"724\":1,\"739\":2,\"751\":1,\"753\":3}}],[\"nrectangle\",{\"1\":{\"310\":1}}],[\"ncircle\",{\"1\":{\"310\":1}}],[\"none\",{\"0\":{\"917\":1},\"1\":{\"596\":1,\"843\":1,\"923\":2,\"928\":1}}],[\"nodejs对es6的支持度\",{\"0\":{\"776\":1}}],[\"nodejs版本切换工具\",{\"0\":{\"571\":1}}],[\"nodejs\",{\"1\":{\"466\":1,\"674\":1,\"776\":1}}],[\"node\",{\"0\":{\"410\":1},\"1\":{\"412\":1,\"466\":1,\"580\":2,\"736\":1,\"739\":1,\"776\":2}}],[\"no\",{\"1\":{\"326\":3,\"329\":3,\"333\":3,\"423\":1,\"431\":1,\"927\":1}}],[\"notsure\",{\"1\":{\"724\":5}}],[\"note\",{\"1\":{\"612\":1}}],[\"not\",{\"0\":{\"560\":1},\"1\":{\"322\":3,\"556\":1,\"638\":1,\"943\":1}}],[\"notifyallobservers\",{\"1\":{\"320\":2}}],[\"notation\",{\"1\":{\"288\":1}}],[\"normal\",{\"1\":{\"310\":2,\"928\":1}}],[\"nsingle\",{\"1\":{\"308\":2}}],[\"nfemales\",{\"1\":{\"308\":1}}],[\"nav\",{\"1\":{\"610\":1,\"612\":2,\"923\":1}}],[\"navbar\",{\"1\":{\"199\":1,\"205\":1}}],[\"nap\",{\"1\":{\"445\":1}}],[\"name=\",{\"1\":{\"880\":3}}],[\"namesrepository\",{\"1\":{\"317\":2}}],[\"names\",{\"1\":{\"317\":3,\"322\":3,\"556\":5,\"558\":1}}],[\"namerepository\",{\"1\":{\"317\":5}}],[\"nameiterator\",{\"1\":{\"317\":3}}],[\"name\",{\"1\":{\"293\":1,\"308\":20,\"309\":13,\"315\":5,\"317\":7,\"318\":8,\"322\":8,\"326\":10,\"329\":13,\"333\":13,\"421\":2,\"458\":2,\"556\":1,\"567\":4,\"576\":1,\"724\":4,\"727\":4,\"736\":9,\"895\":1}}],[\"n时所有记录有序排列\",{\"1\":{\"249\":1}}],[\"nd\",{\"1\":{\"228\":1}}],[\"n\",{\"1\":{\"174\":3,\"240\":6,\"249\":1,\"366\":1,\"418\":5,\"437\":2,\"487\":2,\"556\":3,\"861\":2}}],[\"never\",{\"1\":{\"722\":1,\"724\":2}}],[\"nexus\",{\"1\":{\"637\":2}}],[\"nextlogger\",{\"1\":{\"314\":6}}],[\"next\",{\"1\":{\"199\":1,\"317\":4,\"418\":1,\"487\":1,\"724\":1}}],[\"nestjs中何时使用卫士以及何时使用中间件\",{\"1\":{\"568\":1}}],[\"nestjs\",{\"0\":{\"573\":1},\"1\":{\"568\":2,\"576\":1}}],[\"nestjs概述\",{\"0\":{\"564\":1}}],[\"nest\",{\"1\":{\"567\":4,\"568\":1,\"576\":1}}],[\"netscape\",{\"1\":{\"774\":1}}],[\"netstat\",{\"1\":{\"445\":1}}],[\"net\",{\"1\":{\"306\":1,\"317\":1}}],[\"netware\",{\"1\":{\"127\":1}}],[\"newnode\",{\"1\":{\"864\":3}}],[\"newtree\",{\"1\":{\"864\":1}}],[\"news\",{\"1\":{\"610\":1,\"612\":1,\"613\":1}}],[\"newservice\",{\"1\":{\"332\":3}}],[\"newline=\",{\"1\":{\"558\":1}}],[\"newo\",{\"1\":{\"288\":9}}],[\"new\",{\"1\":{\"209\":1,\"286\":1,\"288\":6,\"303\":5,\"304\":8,\"305\":7,\"306\":5,\"307\":4,\"308\":15,\"309\":8,\"310\":5,\"311\":4,\"312\":2,\"313\":2,\"314\":3,\"315\":5,\"316\":6,\"317\":2,\"318\":3,\"319\":4,\"320\":5,\"321\":3,\"322\":2,\"323\":6,\"324\":2,\"325\":6,\"326\":3,\"327\":5,\"328\":6,\"329\":4,\"330\":4,\"331\":7,\"332\":9,\"333\":4,\"576\":1,\"673\":1,\"724\":1}}],[\"need\",{\"1\":{\"17\":1,\"210\":1}}],[\"nt\",{\"1\":{\"127\":1}}],[\"n中\",{\"1\":{\"95\":1}}],[\"n联系中\",{\"1\":{\"95\":1}}],[\"n模冗余系统\",{\"1\":{\"78\":1}}],[\"n=f\",{\"1\":{\"68\":1}}],[\"只需对比新旧节点的\",{\"1\":{\"864\":1}}],[\"只需将ext\",{\"1\":{\"639\":1}}],[\"只需要改变对象状态即可改变对象的行为\",{\"1\":{\"321\":1}}],[\"只包含基础镜像\",{\"1\":{\"582\":1}}],[\"只描述数据对象集\",{\"1\":{\"366\":1}}],[\"只与你的直接朋友交谈\",{\"1\":{\"341\":1}}],[\"只让接待人员来处理\",{\"1\":{\"311\":1}}],[\"只有isolate\",{\"1\":{\"645\":1}}],[\"只有当派生类可以替换掉基类\",{\"1\":{\"337\":1}}],[\"只有设置\",{\"1\":{\"333\":1}}],[\"只有在建筑的后期才有加壁橱加栅栏等差异\",{\"1\":{\"324\":1}}],[\"只有在要明确实现\",{\"1\":{\"305\":1}}],[\"只有一个input时按enter键会触发submit\",{\"0\":{\"860\":1}}],[\"只有一个\",{\"1\":{\"315\":1}}],[\"只有显示通过调用\",{\"1\":{\"305\":1}}],[\"只能嵌套内联元素\",{\"1\":{\"909\":1}}],[\"只能使用普通函数创建功能组件\",{\"1\":{\"867\":1}}],[\"只能去函数体中看\",{\"1\":{\"720\":1}}],[\"只能存放某一种这样的衣服\",{\"1\":{\"304\":1}}],[\"只能检错\",{\"1\":{\"73\":1}}],[\"只要扩展一个工厂类就可以\",{\"1\":{\"286\":1,\"303\":1}}],[\"只要知道其名称就可以了\",{\"1\":{\"286\":1,\"303\":1}}],[\"只是想找排名第k个的元素\",{\"1\":{\"254\":1}}],[\"只不过十进制变为2进制\",{\"1\":{\"68\":1}}],[\"只做单向移动\",{\"1\":{\"56\":1}}],[\"纯整数\",{\"1\":{\"67\":1}}],[\"纯小数\",{\"1\":{\"67\":1}}],[\"位于文档中最前面的位置\",{\"1\":{\"871\":1}}],[\"位于用户和操作系统之间的数据管理软件\",{\"1\":{\"83\":1}}],[\"位运算\",{\"1\":{\"266\":1}}],[\"位图\",{\"1\":{\"154\":1}}],[\"位之后\",{\"1\":{\"67\":1}}],[\"位之前\",{\"1\":{\"67\":1}}],[\"位权展开法\",{\"1\":{\"64\":1}}],[\"真机\",{\"0\":{\"598\":1}}],[\"真机运行\",{\"1\":{\"595\":1}}],[\"真正的命令执行对象\",{\"1\":{\"315\":1}}],[\"真正的实体\",{\"1\":{\"93\":1}}],[\"真正目的是为了\",{\"1\":{\"4\":1}}],[\"真值\",{\"0\":{\"66\":1}}],[\"正则表达式样式\",{\"1\":{\"895\":1}}],[\"正则的扩展\",{\"0\":{\"783\":1}}],[\"正视js这门语言\",{\"1\":{\"670\":1}}],[\"正常模式下按下v\",{\"1\":{\"486\":1}}],[\"正常模式下\",{\"1\":{\"486\":2,\"487\":1}}],[\"正常模式\",{\"1\":{\"486\":1}}],[\"正方形等\",{\"1\":{\"184\":1}}],[\"正圆\",{\"1\":{\"184\":1}}],[\"正数的补码为原码\",{\"1\":{\"69\":1}}],[\"正数的反码为原码\",{\"1\":{\"69\":1}}],[\"正0负1\",{\"1\":{\"65\":1}}],[\"正反两面\",{\"1\":{\"56\":1}}],[\"三点运算符\",{\"1\":{\"736\":1}}],[\"三卷\",{\"1\":{\"678\":1}}],[\"三个常用属性\",{\"1\":{\"875\":1}}],[\"三个引号\",{\"1\":{\"655\":1}}],[\"三个一组\",{\"1\":{\"64\":1}}],[\"三态图之间的转换\",{\"1\":{\"502\":1}}],[\"三态图\",{\"0\":{\"502\":1}}],[\"三\",{\"0\":{\"184\":1,\"295\":1,\"338\":1,\"389\":1,\"414\":1,\"612\":1,\"639\":1,\"935\":1}}],[\"三大功能键\",{\"0\":{\"184\":1}}],[\"三大功能键配合\",{\"1\":{\"173\":1}}],[\"三大蒙版\",{\"0\":{\"159\":1}}],[\"三大球就没那么好看了\",{\"1\":{\"16\":1}}],[\"三键\",{\"1\":{\"135\":1}}],[\"三种模式\",{\"1\":{\"127\":1}}],[\"三级模式\",{\"0\":{\"101\":1}}],[\"三要素\",{\"0\":{\"92\":1}}],[\"8px\",{\"1\":{\"927\":3}}],[\"8482\",{\"1\":{\"884\":1}}],[\"8364\",{\"1\":{\"884\":1}}],[\"8a4e847a1ead\",{\"1\":{\"638\":2}}],[\"802f\",{\"1\":{\"638\":2}}],[\"8888\",{\"1\":{\"450\":1}}],[\"81\",{\"1\":{\"324\":1}}],[\"82\",{\"1\":{\"312\":3}}],[\"89\",{\"1\":{\"312\":1}}],[\"86\",{\"1\":{\"312\":2}}],[\"8\",{\"0\":{\"787\":1,\"880\":1,\"929\":1},\"1\":{\"64\":1,\"251\":1,\"252\":1,\"304\":1,\"313\":1,\"331\":1,\"558\":1,\"627\":4,\"638\":4,\"736\":1,\"880\":1,\"893\":1,\"895\":1}}],[\"8提供服务支持\",{\"1\":{\"15\":1}}],[\"转世投胎的机制将尘世划分为两个等级\",{\"1\":{\"307\":1}}],[\"转化为\",{\"1\":{\"284\":1}}],[\"转换为\",{\"1\":{\"184\":1}}],[\"转换为实际的表和表中的列属性\",{\"1\":{\"105\":1}}],[\"转换时间短\",{\"1\":{\"38\":1}}],[\"转为\",{\"1\":{\"71\":1}}],[\"转\",{\"1\":{\"64\":2}}],[\"快排优化\",{\"1\":{\"254\":1}}],[\"快速生成声明信息到index文件\",{\"1\":{\"596\":1}}],[\"快速生成get\",{\"1\":{\"596\":1}}],[\"快速生成构造器\",{\"1\":{\"596\":1}}],[\"快速覆写父类\",{\"1\":{\"596\":1}}],[\"快速地生成和原型对象一样的实例\",{\"1\":{\"306\":1}}],[\"快速选择算法\",{\"1\":{\"254\":1}}],[\"快速排序\",{\"0\":{\"252\":1},\"1\":{\"252\":1}}],[\"快速找出最大\",{\"1\":{\"250\":1}}],[\"快速蒙版\",{\"0\":{\"162\":1}}],[\"快速转换\",{\"1\":{\"64\":1}}],[\"快捷键alt\",{\"1\":{\"596\":1}}],[\"快捷键ctrl+o\",{\"1\":{\"596\":1}}],[\"快捷键ctrl\",{\"1\":{\"596\":1}}],[\"快捷键\",{\"0\":{\"142\":1,\"173\":1},\"1\":{\"168\":1}}],[\"快捷方式\",{\"1\":{\"64\":1}}],[\"再添加到自己的docker配置中\",{\"1\":{\"582\":1}}],[\"再将文件即可删除\",{\"1\":{\"480\":1}}],[\"再重新添加新的\",{\"1\":{\"422\":1}}],[\"再高一层就是通用算法设计\",{\"1\":{\"363\":1}}],[\"再比较新的栈顶运算符\",{\"1\":{\"356\":1}}],[\"再对全体记录进行一次直接插入排序\",{\"1\":{\"248\":1}}],[\"再加shift置于顶层或底层\",{\"1\":{\"184\":1}}],[\"再转n进制\",{\"1\":{\"64\":1}}],[\"再找扇区\",{\"1\":{\"56\":1}}],[\"短除法\",{\"1\":{\"64\":1}}],[\"2px\",{\"1\":{\"927\":1}}],[\"262标准文件\",{\"1\":{\"774\":1}}],[\"266240\",{\"1\":{\"64\":1}}],[\"2b0b454e888697ca218318e4ac8fecc6\",{\"1\":{\"638\":2}}],[\"2dd\",{\"1\":{\"487\":1}}],[\"2的及以前的插件版本即可\",{\"1\":{\"436\":1}}],[\"27\",{\"1\":{\"312\":2}}],[\"20px\",{\"1\":{\"923\":2}}],[\"204\",{\"1\":{\"843\":3}}],[\"2015年6月\",{\"1\":{\"775\":1}}],[\"2011年6月\",{\"1\":{\"775\":1}}],[\"2013年12月\",{\"1\":{\"775\":1}}],[\"2013年3月\",{\"1\":{\"775\":1}}],[\"2013\",{\"1\":{\"318\":2}}],[\"2010\",{\"1\":{\"288\":1}}],[\"20\",{\"1\":{\"312\":2,\"736\":1}}],[\"2008年\",{\"1\":{\"775\":1}}],[\"2007年\",{\"1\":{\"775\":1}}],[\"2000年\",{\"1\":{\"775\":1}}],[\"20000\",{\"1\":{\"288\":1,\"309\":4}}],[\"2009年12月\",{\"1\":{\"775\":1}}],[\"2009\",{\"1\":{\"288\":1}}],[\"20世纪50年代\",{\"0\":{\"260\":1}}],[\"20世纪40年代\",{\"1\":{\"259\":1}}],[\"2024\",{\"1\":{\"431\":1}}],[\"2024年\",{\"0\":{\"14\":1},\"1\":{\"776\":1}}],[\"2020\",{\"1\":{\"227\":1}}],[\"2022年1月1日起centos官方已经不再对centos\",{\"1\":{\"15\":1}}],[\"2023年\",{\"0\":{\"10\":1}}],[\"230816\",{\"0\":{\"668\":1,\"669\":1}}],[\"23种设计模式\",{\"1\":{\"283\":1}}],[\"23\",{\"1\":{\"251\":1,\"252\":1}}],[\"2^n\",{\"1\":{\"74\":1}}],[\"2\",{\"0\":{\"72\":1,\"88\":1,\"113\":1,\"124\":1,\"128\":1,\"161\":1,\"280\":1,\"285\":1,\"289\":1,\"349\":1,\"354\":1,\"359\":1,\"450\":1,\"456\":1,\"463\":1,\"583\":1,\"667\":1,\"694\":1,\"740\":1,\"781\":1,\"846\":1,\"874\":1,\"883\":1,\"894\":1,\"904\":1,\"923\":1,\"934\":1,\"937\":1},\"1\":{\"202\":14,\"252\":3,\"284\":6,\"285\":4,\"286\":3,\"303\":4,\"304\":2,\"305\":6,\"306\":9,\"307\":4,\"308\":1,\"309\":4,\"310\":4,\"311\":5,\"312\":5,\"313\":6,\"314\":6,\"315\":4,\"316\":4,\"317\":3,\"318\":4,\"319\":7,\"320\":6,\"321\":5,\"322\":1,\"323\":5,\"324\":4,\"325\":4,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1,\"334\":2,\"431\":1,\"447\":1,\"612\":1,\"613\":1,\"638\":1,\"671\":1,\"678\":1,\"724\":7,\"727\":1,\"736\":1,\"738\":1,\"775\":1,\"780\":3,\"845\":1,\"864\":2,\"867\":4,\"893\":2,\"894\":1,\"895\":1,\"922\":1,\"927\":3,\"929\":2}}],[\"2n\",{\"1\":{\"69\":8}}],[\"2e\",{\"1\":{\"68\":1}}],[\"240px\",{\"1\":{\"930\":1}}],[\"24px\",{\"1\":{\"923\":2}}],[\"247\",{\"1\":{\"884\":1}}],[\"24\",{\"1\":{\"64\":1,\"251\":1,\"252\":1}}],[\"2转16\",{\"1\":{\"64\":1}}],[\"2转8\",{\"1\":{\"64\":1}}],[\"215\",{\"1\":{\"884\":1}}],[\"21\",{\"1\":{\"64\":2,\"312\":2}}],[\"222\",{\"1\":{\"880\":1}}],[\"220v\",{\"1\":{\"284\":2}}],[\"22\",{\"1\":{\"64\":1,\"251\":1,\"252\":1,\"638\":1}}],[\"255\",{\"1\":{\"893\":1,\"927\":5}}],[\"25\",{\"1\":{\"64\":1,\"927\":1}}],[\"404\",{\"1\":{\"943\":1}}],[\"40px\",{\"1\":{\"930\":1}}],[\"4017\",{\"1\":{\"638\":2}}],[\"4导致\",{\"1\":{\"436\":1}}],[\"46\",{\"1\":{\"318\":2}}],[\"41\",{\"1\":{\"251\":1,\"252\":1}}],[\"41000h\",{\"1\":{\"64\":1}}],[\"450px\",{\"1\":{\"843\":1}}],[\"45\",{\"1\":{\"251\":1,\"252\":1}}],[\"45deg\",{\"1\":{\"145\":1}}],[\"444\",{\"1\":{\"880\":1}}],[\"44\",{\"1\":{\"64\":1,\"312\":1,\"736\":1}}],[\"4\",{\"0\":{\"74\":1,\"130\":1,\"282\":1,\"287\":1,\"291\":1,\"452\":1,\"669\":1,\"696\":1,\"783\":1,\"876\":1,\"925\":1},\"1\":{\"64\":3,\"251\":1,\"252\":1,\"284\":2,\"303\":1,\"305\":2,\"306\":3,\"307\":1,\"310\":1,\"311\":1,\"312\":3,\"313\":3,\"314\":2,\"315\":1,\"316\":2,\"317\":2,\"318\":1,\"319\":5,\"320\":1,\"321\":2,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1,\"436\":2,\"478\":1,\"613\":1,\"671\":1,\"677\":1,\"724\":1,\"775\":1,\"867\":1,\"893\":1,\"894\":1,\"895\":1,\"906\":1}}],[\"4×164+1×163+0×162+0×161+0×160\",{\"1\":{\"64\":1}}],[\"4ffffh\",{\"1\":{\"63\":1}}],[\"others\",{\"0\":{\"944\":1}}],[\"othercriteriaitems\",{\"1\":{\"308\":2}}],[\"othercriteria\",{\"1\":{\"308\":10}}],[\"ol>\",{\"1\":{\"880\":5}}],[\"ol\",{\"1\":{\"843\":1,\"874\":1}}],[\"older\",{\"1\":{\"920\":1}}],[\"oldnode\",{\"1\":{\"864\":2}}],[\"oldtree\",{\"1\":{\"864\":1}}],[\"old\",{\"1\":{\"724\":1}}],[\"okay\",{\"1\":{\"724\":2}}],[\"ok\",{\"1\":{\"724\":2}}],[\"o软件\",{\"0\":{\"493\":1}}],[\"oo\",{\"1\":{\"304\":1}}],[\"ooad\",{\"1\":{\"302\":1}}],[\"ooa\",{\"1\":{\"302\":1}}],[\"override\",{\"1\":{\"303\":3,\"304\":10,\"306\":3,\"307\":2,\"308\":5,\"310\":3,\"311\":3,\"312\":1,\"313\":2,\"314\":3,\"316\":3,\"317\":3,\"320\":3,\"322\":4,\"323\":3,\"324\":6,\"325\":8,\"327\":2,\"329\":4,\"332\":2}}],[\"outerhtml\",{\"1\":{\"867\":2}}],[\"out\",{\"1\":{\"303\":3,\"304\":6,\"305\":1,\"306\":6,\"307\":2,\"308\":5,\"309\":3,\"310\":6,\"311\":3,\"312\":2,\"313\":3,\"314\":3,\"315\":2,\"316\":2,\"317\":1,\"318\":1,\"319\":3,\"320\":5,\"321\":4,\"322\":5,\"323\":3,\"324\":7,\"325\":4,\"326\":3,\"327\":2,\"328\":1,\"329\":4,\"330\":4,\"331\":3,\"332\":5,\"333\":4,\"355\":1,\"357\":1}}],[\"output>\",{\"1\":{\"894\":1}}],[\"output\",{\"1\":{\"288\":1,\"638\":3,\"894\":1,\"929\":2}}],[\"our\",{\"1\":{\"288\":1}}],[\"opacify\",{\"1\":{\"927\":1}}],[\"opacify和transparentize方法\",{\"1\":{\"927\":1}}],[\"opacity\",{\"1\":{\"843\":1}}],[\"optimum=\",{\"1\":{\"894\":1}}],[\"optimizelegibility\",{\"1\":{\"845\":1}}],[\"optimize\",{\"1\":{\"596\":1}}],[\"option>\",{\"1\":{\"894\":2}}],[\"option\",{\"1\":{\"627\":2}}],[\"options\",{\"1\":{\"205\":1,\"776\":2}}],[\"opt\",{\"1\":{\"431\":1,\"466\":8}}],[\"operation\",{\"1\":{\"418\":1}}],[\"operationmultiply\",{\"1\":{\"323\":3}}],[\"operationsubstract\",{\"1\":{\"323\":3}}],[\"operationadd\",{\"1\":{\"323\":3}}],[\"openatom\",{\"1\":{\"582\":1}}],[\"open\",{\"0\":{\"336\":1},\"1\":{\"288\":1,\"556\":1,\"558\":2}}],[\"obj\",{\"1\":{\"288\":6}}],[\"object的一个子类型\",{\"1\":{\"761\":1,\"762\":1}}],[\"object类型的变量只是允许你给它赋任意值\",{\"1\":{\"724\":1}}],[\"object有相似的作用\",{\"1\":{\"724\":1}}],[\"objects\",{\"1\":{\"288\":1}}],[\"object\",{\"0\":{\"322\":1,\"329\":1,\"333\":1,\"760\":1},\"1\":{\"281\":1,\"282\":2,\"288\":10,\"305\":3,\"306\":4,\"317\":2,\"328\":2,\"329\":4,\"332\":8,\"333\":2,\"334\":1,\"647\":1,\"722\":1,\"724\":3,\"752\":1,\"753\":2,\"867\":1}}],[\"observerpatterndemo\",{\"1\":{\"320\":2}}],[\"observers\",{\"1\":{\"320\":3}}],[\"observerlist\",{\"1\":{\"288\":15}}],[\"observer\",{\"0\":{\"320\":1},\"1\":{\"281\":2,\"288\":1,\"320\":12}}],[\"own\",{\"1\":{\"229\":1}}],[\"omega^i\",{\"1\":{\"218\":1}}],[\"omega^r\",{\"1\":{\"218\":1}}],[\"omega\",{\"1\":{\"218\":4}}],[\"org\",{\"1\":{\"466\":2,\"554\":1,\"627\":1,\"638\":2,\"871\":1}}],[\"origin\",{\"1\":{\"421\":2,\"425\":7}}],[\"originator\",{\"1\":{\"319\":18}}],[\"oriented\",{\"1\":{\"334\":1}}],[\"orexpression\",{\"1\":{\"316\":4}}],[\"orderlist\",{\"1\":{\"315\":4}}],[\"order\",{\"1\":{\"315\":11,\"912\":1}}],[\"orcriteria\",{\"1\":{\"308\":4}}],[\"or\",{\"1\":{\"208\":1,\"288\":1,\"308\":2,\"313\":1,\"554\":2}}],[\"one\",{\"1\":{\"929\":1}}],[\"only\",{\"1\":{\"929\":1}}],[\"onlyone\",{\"1\":{\"293\":1}}],[\"onstorage事件\",{\"1\":{\"904\":1}}],[\"on\",{\"1\":{\"199\":1,\"288\":1,\"313\":1,\"724\":1,\"867\":1}}],[\"ossutil进行上传部署资源\",{\"0\":{\"379\":1}}],[\"oss\",{\"0\":{\"376\":1}}],[\"os\",{\"1\":{\"129\":1}}],[\"octalobserver\",{\"1\":{\"320\":4}}],[\"octal\",{\"1\":{\"63\":1,\"320\":3}}],[\"o\",{\"1\":{\"63\":1,\"174\":1,\"305\":1,\"447\":2,\"449\":1,\"487\":2}}],[\"of循环\",{\"0\":{\"792\":1}}],[\"off\",{\"1\":{\"478\":1,\"895\":2}}],[\"offset\",{\"1\":{\"441\":1}}],[\"of\",{\"0\":{\"277\":1,\"314\":1},\"1\":{\"1\":1,\"17\":2,\"199\":1,\"205\":1,\"281\":1,\"288\":3,\"310\":4,\"312\":6,\"334\":1,\"487\":4}}],[\"十进制转r进制\",{\"1\":{\"64\":1}}],[\"十进制\",{\"1\":{\"63\":1}}],[\"十六进制\",{\"1\":{\"63\":2}}],[\"0开始不再提供浏览器版本\",{\"1\":{\"777\":1}}],[\"0y$\",{\"1\":{\"487\":1}}],[\"08\",{\"1\":{\"431\":1}}],[\"050709\",{\"1\":{\"927\":1}}],[\"05\",{\"1\":{\"318\":2,\"431\":1}}],[\"040506\",{\"1\":{\"927\":1}}],[\"04\",{\"1\":{\"288\":1}}],[\"03\",{\"0\":{\"190\":1},\"1\":{\"288\":1}}],[\"02\",{\"0\":{\"188\":1},\"1\":{\"288\":1}}],[\"010203\",{\"1\":{\"927\":1}}],[\"0100\",{\"1\":{\"64\":2}}],[\"01\",{\"0\":{\"186\":1},\"1\":{\"288\":2,\"893\":1,\"906\":1}}],[\"0只有一种形式\",{\"1\":{\"69\":1}}],[\"000001010000000000110000\",{\"1\":{\"259\":1}}],[\"0000001\",{\"1\":{\"69\":1}}],[\"00\",{\"1\":{\"71\":1}}],[\"001011010000000000000101\",{\"1\":{\"259\":1}}],[\"0010\",{\"1\":{\"64\":1}}],[\"0\",{\"1\":{\"69\":1,\"184\":1,\"251\":7,\"252\":2,\"319\":1,\"322\":1,\"325\":1,\"328\":1,\"329\":6,\"333\":6,\"418\":2,\"431\":3,\"487\":1,\"505\":1,\"558\":1,\"579\":1,\"595\":2,\"638\":3,\"639\":1,\"671\":1,\"724\":1,\"736\":1,\"775\":5,\"780\":3,\"843\":8,\"871\":1,\"880\":2,\"893\":1,\"894\":2,\"923\":2,\"927\":13}}],[\"0有正0和负0\",{\"1\":{\"69\":2}}],[\"0和1表示\",{\"1\":{\"65\":1}}],[\"0xf00d\",{\"1\":{\"724\":1}}],[\"0x4ffff\",{\"1\":{\"63\":1}}],[\"0x\",{\"1\":{\"63\":1}}],[\"0b1010\",{\"1\":{\"724\":1}}],[\"0b110111\",{\"1\":{\"63\":1}}],[\"0b\",{\"1\":{\"63\":1}}],[\"进度条\",{\"1\":{\"894\":1}}],[\"进度把控\",{\"1\":{\"32\":1}}],[\"进阶\",{\"0\":{\"674\":1,\"931\":1}}],[\"进行组合成选择器\",{\"1\":{\"928\":1}}],[\"进行逐个对比\",{\"1\":{\"864\":1}}],[\"进行开发\",{\"0\":{\"627\":1}}],[\"进行检查\",{\"1\":{\"596\":1}}],[\"进行登录\",{\"1\":{\"450\":1}}],[\"进行广播通知\",{\"1\":{\"320\":1}}],[\"进入容器\",{\"1\":{\"579\":1}}],[\"进入项目下\",{\"1\":{\"554\":1}}],[\"进入一个文件夹\",{\"1\":{\"554\":1}}],[\"进入\",{\"1\":{\"466\":1,\"468\":1}}],[\"进入网站域名\",{\"0\":{\"452\":1}}],[\"进入宝塔登录界面\",{\"1\":{\"450\":1}}],[\"进入主机空间\",{\"1\":{\"449\":1}}],[\"进去\",{\"1\":{\"314\":1}}],[\"进程间通信\",{\"1\":{\"706\":1}}],[\"进程调度\",{\"0\":{\"506\":1}}],[\"进程2\",{\"1\":{\"505\":1}}],[\"进程1\",{\"1\":{\"505\":1}}],[\"进程资源图\",{\"0\":{\"504\":1}}],[\"进程要做什么\",{\"1\":{\"501\":1}}],[\"进程控制块pcb\",{\"1\":{\"501\":1}}],[\"进程组成\",{\"0\":{\"501\":1}}],[\"进程管理\",{\"0\":{\"500\":1,\"510\":1}}],[\"进程\",{\"1\":{\"121\":1,\"504\":1}}],[\"进制转换\",{\"0\":{\"64\":1}}],[\"进制表示\",{\"0\":{\"63\":1}}],[\"进制\",{\"0\":{\"62\":1}}],[\"半双工\",{\"1\":{\"60\":1}}],[\"系统进行资源分配的基本单位\",{\"1\":{\"500\":1}}],[\"系统上禁止运行脚本的问题通常是由于‌windows的‌powershell执行策略设置为restricted导致的\",{\"1\":{\"481\":1}}],[\"系统禁止运行脚本\",{\"0\":{\"481\":1}}],[\"系统软件\",{\"1\":{\"405\":1}}],[\"系统中对象之间存在比较复杂的引用关系\",{\"1\":{\"318\":1}}],[\"系统中有大量对象\",{\"1\":{\"312\":1}}],[\"系统需要支持命令的撤销\",{\"1\":{\"315\":1}}],[\"系统需要使用现有的类\",{\"1\":{\"284\":1}}],[\"系统性能将受到一定影响\",{\"1\":{\"314\":1}}],[\"系统有大量相似对象\",{\"1\":{\"312\":1}}],[\"系统不依赖于这些对象身份\",{\"1\":{\"312\":1}}],[\"系统的产品有多于一个的产品族\",{\"1\":{\"304\":1}}],[\"系统的顶层设计\",{\"1\":{\"4\":1}}],[\"系统事件\",{\"1\":{\"286\":1,\"303\":1}}],[\"系统\",{\"1\":{\"130\":1}}],[\"系统可用性\",{\"1\":{\"77\":1}}],[\"系统总线\",{\"1\":{\"60\":1}}],[\"指定当前输入域所属的表单的id\",{\"1\":{\"895\":1}}],[\"指定输入域是否记录上一次提交的输入\",{\"1\":{\"895\":1}}],[\"指定一个新的序列数字起始值\",{\"1\":{\"874\":1}}],[\"指定好根目录和环境版本\",{\"1\":{\"451\":1}}],[\"指的是两个或者两个以上同名函数\",{\"1\":{\"736\":1}}],[\"指的是从求解问题的数学模型中抽象出来的数据逻辑结构和运算\",{\"1\":{\"366\":1}}],[\"指南\",{\"1\":{\"610\":1,\"612\":1}}],[\"指描述数据结构的方法不依赖于具体实现\",{\"1\":{\"366\":1}}],[\"指针域中的信息称为指针\",{\"1\":{\"354\":1}}],[\"指针操作能力强\",{\"1\":{\"260\":1}}],[\"指标记及里面内容\",{\"1\":{\"881\":1}}],[\"指标\",{\"1\":{\"240\":1}}],[\"指同一时间有多个任务进行\",{\"1\":{\"120\":1}}],[\"指同一时间有多个事件发生\",{\"1\":{\"120\":1}}],[\"指数\",{\"1\":{\"68\":1}}],[\"指计算机设备和设备之间传输信息的公共数据通道\",{\"1\":{\"60\":1}}],[\"指令执行速度\",{\"1\":{\"81\":1}}],[\"指令执行地址\",{\"1\":{\"37\":1}}],[\"指令操作数的寻址方式\",{\"0\":{\"47\":1}}],[\"指令寻址方式\",{\"0\":{\"46\":1}}],[\"指令时钟周期数是指cpu每执行一条指令所需的时钟周期数\",{\"1\":{\"44\":1}}],[\"指令系统\",{\"0\":{\"43\":1}}],[\"指令流\",{\"1\":{\"42\":1}}],[\"指令译码器id\",{\"1\":{\"37\":1}}],[\"指令寄存器ir\",{\"1\":{\"37\":1}}],[\"外观类与系统耦合\",{\"1\":{\"311\":1}}],[\"外观模式定义了一个高层接口\",{\"1\":{\"311\":1}}],[\"外观模式\",{\"0\":{\"296\":1,\"311\":1},\"1\":{\"280\":1}}],[\"外模式\",{\"1\":{\"101\":2}}],[\"外设数据传输完成后\",{\"1\":{\"59\":1}}],[\"外部总线\",{\"1\":{\"60\":1}}],[\"外部\",{\"1\":{\"34\":1}}],[\"缺点是条数较多时候可能会慢一点\",{\"1\":{\"418\":1}}],[\"缺点是有空白行时会出错\",{\"1\":{\"418\":1}}],[\"缺点是用于接口的指令太少\",{\"1\":{\"58\":1}}],[\"缺点\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":3,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1,\"353\":1}}],[\"缺点在于整个地址空间被分成两部分\",{\"1\":{\"58\":1}}],[\"经验之谈\",{\"1\":{\"305\":1}}],[\"经过分类编目的\",{\"1\":{\"276\":1}}],[\"经过在医药和互联网行业的多年工作经验\",{\"1\":{\"1\":1}}],[\"经典\",{\"1\":{\"56\":1}}],[\"扫描算法scan\",{\"1\":{\"56\":1}}],[\"即如何使用babel转码器\",{\"0\":{\"777\":1}}],[\"即便它真的有这些方法\",{\"1\":{\"724\":1}}],[\"即对象\",{\"1\":{\"647\":1}}],[\"即通过接口或者抽象类为软件实体定义一个相对稳定的抽象层\",{\"1\":{\"336\":1}}],[\"即可在模块的index\",{\"1\":{\"596\":1}}],[\"即可\",{\"1\":{\"311\":1,\"560\":1}}],[\"即\",{\"1\":{\"305\":1,\"307\":1}}],[\"即一系列具体产品\",{\"1\":{\"304\":1}}],[\"即枚举处理器\",{\"1\":{\"260\":1}}],[\"即公式翻译器\",{\"1\":{\"260\":1}}],[\"即二进制计数制\",{\"1\":{\"65\":1}}],[\"即远处进程可能永远无法访问\",{\"1\":{\"56\":1}}],[\"即使是最简单的函数也至少可以写出10种不同的代码来实现\",{\"1\":{\"21\":1}}],[\"先备份\",{\"1\":{\"458\":1}}],[\"先将当前版本的小版本号到最高\",{\"1\":{\"431\":1}}],[\"先转十进制\",{\"1\":{\"64\":1}}],[\"先来先服务\",{\"1\":{\"56\":1}}],[\"先进先出\",{\"1\":{\"54\":1}}],[\"耗时最长\",{\"1\":{\"56\":1}}],[\"寻道时间\",{\"1\":{\"56\":1}}],[\"扇区磁头先找磁道\",{\"1\":{\"56\":1}}],[\"磁道\",{\"1\":{\"56\":1}}],[\"磁盘调度\",{\"0\":{\"494\":1}}],[\"磁盘上只保存一个副本\",{\"1\":{\"413\":1}}],[\"磁盘的结构和参数\",{\"1\":{\"56\":1}}],[\"磁盘\",{\"0\":{\"56\":1}}],[\"kotlin\",{\"1\":{\"639\":3}}],[\"kg\",{\"1\":{\"582\":1}}],[\"kill\",{\"1\":{\"445\":1}}],[\"ki\",{\"1\":{\"352\":1}}],[\"kn\",{\"1\":{\"352\":1}}],[\"know\",{\"1\":{\"209\":1,\"210\":1}}],[\"k1\",{\"1\":{\"352\":1}}],[\"keycode\",{\"1\":{\"867\":1}}],[\"keyup\",{\"1\":{\"860\":1}}],[\"keywords\",{\"1\":{\"860\":1,\"880\":1}}],[\"keywords=\",{\"1\":{\"556\":1}}],[\"keystore打包签名\",{\"0\":{\"640\":1}}],[\"keyboard\",{\"1\":{\"325\":9}}],[\"key\",{\"1\":{\"288\":2}}],[\"kmp算法\",{\"0\":{\"257\":1}}],[\"k\",{\"1\":{\"55\":1,\"143\":2,\"174\":1,\"418\":5,\"478\":4,\"487\":1,\"861\":1}}],[\"kuck分类法\",{\"1\":{\"42\":1}}],[\"1px\",{\"1\":{\"922\":1,\"926\":1,\"928\":1}}],[\"1panel\",{\"1\":{\"582\":1}}],[\"18\",{\"0\":{\"797\":1},\"1\":{\"895\":1}}],[\"14px\",{\"1\":{\"875\":1}}],[\"14\",{\"0\":{\"793\":1}}],[\"140\",{\"1\":{\"288\":1}}],[\"1发布\",{\"1\":{\"775\":1}}],[\"1降到了19\",{\"1\":{\"638\":1}}],[\"174\",{\"1\":{\"884\":1}}],[\"17\",{\"0\":{\"796\":1},\"1\":{\"320\":1,\"431\":1}}],[\"123\",{\"1\":{\"724\":1,\"736\":1}}],[\"12px\",{\"1\":{\"613\":2,\"880\":1,\"923\":1,\"927\":1}}],[\"12\",{\"0\":{\"791\":1},\"1\":{\"312\":1,\"320\":1,\"431\":2,\"557\":1,\"595\":1}}],[\"1280\",{\"1\":{\"259\":1}}],[\"13px\",{\"1\":{\"845\":1}}],[\"13\",{\"0\":{\"792\":1},\"1\":{\"312\":1}}],[\"150px\",{\"1\":{\"843\":1}}],[\"15\",{\"0\":{\"794\":1},\"1\":{\"312\":1,\"320\":3,\"323\":1,\"431\":4}}],[\"15度旋转\",{\"1\":{\"184\":1}}],[\"1949\",{\"1\":{\"893\":1}}],[\"1940年以前\",{\"1\":{\"259\":1}}],[\"1999\",{\"1\":{\"871\":1}}],[\"1999年\",{\"1\":{\"775\":1}}],[\"1998年\",{\"1\":{\"775\":1}}],[\"1997年\",{\"1\":{\"775\":1}}],[\"1996年\",{\"1\":{\"774\":1}}],[\"1995年\",{\"1\":{\"774\":1}}],[\"1991年\",{\"1\":{\"774\":1}}],[\"1991\",{\"1\":{\"288\":1}}],[\"192\",{\"1\":{\"425\":2}}],[\"19\",{\"0\":{\"798\":1},\"1\":{\"312\":1}}],[\"1958\",{\"1\":{\"260\":1}}],[\"1955\",{\"1\":{\"260\":1}}],[\"19th\",{\"1\":{\"221\":1}}],[\"1个时\",{\"1\":{\"254\":1}}],[\"1次\",{\"1\":{\"252\":1}}],[\"1联系中\",{\"1\":{\"95\":1}}],[\"1≥n+k\",{\"1\":{\"74\":1}}],[\"111\",{\"1\":{\"425\":2,\"880\":1}}],[\"1111\",{\"1\":{\"320\":1}}],[\"110v\",{\"1\":{\"284\":2}}],[\"110\",{\"1\":{\"251\":1,\"252\":1}}],[\"11\",{\"0\":{\"790\":1},\"1\":{\"71\":1,\"431\":4,\"895\":1}}],[\"169\",{\"1\":{\"884\":1}}],[\"167\",{\"1\":{\"884\":1}}],[\"165\",{\"1\":{\"884\":1}}],[\"162\",{\"1\":{\"884\":1}}],[\"160\",{\"1\":{\"884\":1}}],[\"168\",{\"1\":{\"425\":2}}],[\"163\",{\"1\":{\"421\":1,\"884\":1}}],[\"16\",{\"0\":{\"795\":1},\"1\":{\"64\":1,\"318\":2}}],[\"1b=8b\",{\"1\":{\"55\":1}}],[\"10px\",{\"1\":{\"925\":1,\"926\":1,\"927\":2,\"930\":1}}],[\"1048576000\",{\"1\":{\"424\":1}}],[\"1010\",{\"1\":{\"320\":1}}],[\"101100000000000000000011\",{\"1\":{\"259\":1}}],[\"10mb\",{\"1\":{\"313\":4}}],[\"100px\",{\"1\":{\"843\":6}}],[\"100idesu\",{\"1\":{\"487\":1}}],[\"100\",{\"1\":{\"64\":4,\"77\":1,\"307\":8,\"312\":23,\"894\":1,\"920\":1,\"927\":3}}],[\"100110\",{\"1\":{\"64\":1}}],[\"1000px\",{\"1\":{\"922\":1,\"927\":1}}],[\"10000\",{\"1\":{\"309\":8}}],[\"1000\",{\"1\":{\"54\":1,\"736\":1}}],[\"10\",{\"0\":{\"789\":1},\"1\":{\"54\":1,\"64\":1,\"307\":4,\"312\":2,\"315\":3,\"320\":3,\"323\":9,\"326\":3,\"431\":3,\"441\":2,\"724\":2,\"736\":1,\"780\":3,\"893\":2,\"895\":1}}],[\"10的9次方\",{\"1\":{\"44\":1}}],[\"10的6次方\",{\"1\":{\"44\":1}}],[\"1\",{\"0\":{\"71\":1,\"87\":1,\"112\":1,\"123\":1,\"127\":1,\"160\":1,\"277\":1,\"279\":1,\"284\":1,\"288\":1,\"348\":1,\"353\":1,\"356\":1,\"358\":1,\"379\":1,\"444\":1,\"449\":1,\"455\":1,\"462\":1,\"582\":1,\"666\":1,\"693\":1,\"739\":1,\"780\":1,\"845\":1,\"873\":1,\"882\":1,\"893\":1,\"903\":1,\"922\":1,\"932\":1,\"933\":2,\"934\":1,\"936\":1},\"1\":{\"54\":1,\"69\":14,\"78\":4,\"95\":2,\"184\":1,\"202\":12,\"216\":1,\"218\":1,\"227\":1,\"229\":2,\"249\":1,\"251\":2,\"252\":1,\"284\":8,\"285\":4,\"286\":3,\"288\":3,\"303\":4,\"304\":2,\"305\":6,\"306\":9,\"307\":4,\"308\":1,\"309\":4,\"310\":4,\"311\":5,\"312\":5,\"313\":6,\"314\":6,\"315\":5,\"316\":4,\"317\":3,\"318\":4,\"319\":7,\"320\":6,\"321\":5,\"322\":1,\"323\":5,\"324\":4,\"325\":4,\"326\":1,\"327\":1,\"328\":1,\"329\":3,\"330\":1,\"331\":1,\"332\":1,\"333\":3,\"352\":1,\"418\":7,\"424\":1,\"447\":1,\"505\":2,\"612\":1,\"613\":1,\"638\":1,\"639\":1,\"671\":1,\"724\":7,\"727\":1,\"736\":1,\"738\":1,\"775\":2,\"780\":2,\"843\":1,\"845\":1,\"867\":2,\"871\":1,\"875\":1,\"880\":1,\"893\":2,\"894\":1,\"895\":1,\"927\":1,\"929\":2,\"930\":1}}],[\"随机替换\",{\"1\":{\"54\":1}}],[\"全新的属性\",{\"1\":{\"864\":1}}],[\"全部删除\",{\"1\":{\"487\":1}}],[\"全部复制\",{\"1\":{\"487\":1}}],[\"全局和内部\",{\"1\":{\"867\":1}}],[\"全局\",{\"1\":{\"867\":1}}],[\"全局范围内有效\",{\"1\":{\"780\":1}}],[\"全局变量存储在静态数据区里\",{\"1\":{\"265\":1}}],[\"全局量和局部量\",{\"1\":{\"265\":1}}],[\"全选操作\",{\"1\":{\"487\":1}}],[\"全选\",{\"1\":{\"174\":1}}],[\"全双工\",{\"1\":{\"60\":1}}],[\"全相连映射\",{\"1\":{\"54\":1}}],[\"全面停止维护\",{\"0\":{\"15\":1}}],[\"最小长度\",{\"1\":{\"895\":1}}],[\"最小值\",{\"1\":{\"895\":1}}],[\"最小的前几个\",{\"1\":{\"250\":1}}],[\"最优值大于上限\",{\"1\":{\"894\":1}}],[\"最优值小于下限\",{\"1\":{\"894\":1}}],[\"最优值在上下限\",{\"1\":{\"894\":1}}],[\"最优二叉树\",{\"0\":{\"369\":1}}],[\"最佳实践\",{\"0\":{\"886\":1}}],[\"最少知识\",{\"0\":{\"832\":1}}],[\"最少知道原则\",{\"1\":{\"341\":1}}],[\"最终都将用javascript来写\",{\"1\":{\"675\":1}}],[\"最终都会用\",{\"1\":{\"670\":1}}],[\"最终用户\",{\"1\":{\"401\":1}}],[\"最大长度\",{\"1\":{\"895\":1}}],[\"最大值\",{\"1\":{\"895\":1}}],[\"最大错误连接数\",{\"1\":{\"561\":1}}],[\"最大优点\",{\"1\":{\"38\":1}}],[\"最新版本\",{\"1\":{\"411\":1}}],[\"最基本最常用的线性结构\",{\"1\":{\"352\":1}}],[\"最多只有一个出度和一个入度\",{\"1\":{\"351\":1}}],[\"最难及最挑战学习能力的课程之一\",{\"1\":{\"271\":1}}],[\"最后确实是jdk版本的问题\",{\"1\":{\"638\":1}}],[\"最后重启电脑\",{\"1\":{\"480\":1}}],[\"最后一轮的增量一定是1\",{\"1\":{\"248\":1}}],[\"最后考虑高效率和低存储量\",{\"1\":{\"242\":1}}],[\"最坏情况复杂度tworst\",{\"1\":{\"240\":1}}],[\"最最常用\",{\"1\":{\"173\":1}}],[\"最短寻道时间优先sstf\",{\"1\":{\"56\":1}}],[\"最常用\",{\"1\":{\"54\":1}}],[\"最不容易发生块冲突\",{\"1\":{\"54\":1}}],[\"最容易发生冲突\",{\"1\":{\"54\":1}}],[\"构件环境类\",{\"1\":{\"316\":1}}],[\"构件语法树\",{\"1\":{\"316\":1}}],[\"构件图\",{\"1\":{\"302\":1}}],[\"构成和表示时\",{\"1\":{\"306\":1}}],[\"构成的\",{\"1\":{\"53\":1}}],[\"构造函数是私有的\",{\"1\":{\"305\":1}}],[\"构造函数\",{\"1\":{\"288\":1,\"305\":1,\"309\":1,\"673\":1}}],[\"构建工具\",{\"0\":{\"811\":1}}],[\"构建知识体系\",{\"1\":{\"385\":1}}],[\"构建大根树\",{\"1\":{\"250\":1}}],[\"构建完全二叉树\",{\"1\":{\"250\":1}}],[\"构筑进自己的知识体系中\",{\"1\":{\"1\":1}}],[\"辅存主存主要是由\",{\"1\":{\"53\":1}}],[\"两者的区别\",{\"0\":{\"814\":1}}],[\"两者都应该依赖其抽象\",{\"1\":{\"338\":1}}],[\"两种形态\",{\"1\":{\"602\":1}}],[\"两种范式\",{\"1\":{\"589\":1}}],[\"两个方案\",{\"1\":{\"738\":1}}],[\"两个冒号是注释\",{\"1\":{\"478\":1}}],[\"两个图层键按住alt单击\",{\"1\":{\"184\":1}}],[\"两个以上处理机互联\",{\"1\":{\"41\":1}}],[\"两级映像\",{\"0\":{\"101\":1}}],[\"两级存储\",{\"0\":{\"53\":1}}],[\"阵列处理机\",{\"0\":{\"50\":1}}],[\"超链接\",{\"0\":{\"877\":1}}],[\"超长指令字\",{\"1\":{\"49\":1}}],[\"超标量技术\",{\"1\":{\"49\":1}}],[\"超流水线技术\",{\"1\":{\"49\":1}}],[\"每次拿这种成套的衣服时也自然要从这个衣柜中取出了\",{\"1\":{\"304\":1}}],[\"每次增加一个产品时\",{\"1\":{\"286\":1,\"303\":1}}],[\"每个阶段的变动需要tc39委员会批准\",{\"1\":{\"671\":1}}],[\"每个distribution除了架构的严谨度与选择的套件内容外\",{\"1\":{\"444\":1}}],[\"每个结点包含两个指针\",{\"1\":{\"354\":1}}],[\"每个类尽量提供接口或抽象类\",{\"1\":{\"338\":1}}],[\"每个记录器中的下一个记录器代表的是链的一部分\",{\"1\":{\"314\":1}}],[\"每个生成的工厂都能按照工厂模式提供对象\",{\"1\":{\"304\":1}}],[\"每个实体\",{\"1\":{\"95\":1}}],[\"每一种旅行方式都是一个策略\",{\"1\":{\"323\":1}}],[\"每一种角度都可能变化\",{\"1\":{\"307\":1}}],[\"每一个列表使用一个li标记\",{\"1\":{\"874\":1}}],[\"每一个不同的实现都需要一个子类来实现\",{\"1\":{\"324\":1}}],[\"每一个锦囊就是一个策略\",{\"1\":{\"323\":1}}],[\"每一个指令表示一个或多个操作\",{\"1\":{\"238\":1}}],[\"每一组对象都可以用一个对象来代替\",{\"1\":{\"312\":1}}],[\"每一条指令\",{\"1\":{\"238\":1}}],[\"每4位四合一\",{\"1\":{\"64\":1}}],[\"每3位三合一\",{\"1\":{\"64\":1}}],[\"每段由不同的部分去处理\",{\"1\":{\"49\":1}}],[\"每秒百万条指令\",{\"1\":{\"44\":1}}],[\"精简指令集计算机\",{\"1\":{\"48\":1}}],[\"rgba\",{\"1\":{\"843\":3,\"927\":4}}],[\"rgb模式\",{\"1\":{\"155\":1}}],[\"rd\",{\"1\":{\"477\":1}}],[\"rz\",{\"1\":{\"456\":2}}],[\"rf\",{\"1\":{\"445\":1,\"453\":1}}],[\"rules\",{\"1\":{\"596\":1,\"739\":1}}],[\"runtime\",{\"1\":{\"638\":1,\"724\":1}}],[\"run\",{\"1\":{\"580\":2,\"724\":2,\"736\":1,\"739\":1}}],[\"runner\",{\"1\":{\"434\":1}}],[\"rumbaugh和jacobson的表示方法\",{\"1\":{\"302\":1}}],[\"rb\",{\"1\":{\"433\":1}}],[\"rhel\",{\"1\":{\"431\":1}}],[\"rpm\",{\"1\":{\"431\":3}}],[\"rpc\",{\"0\":{\"424\":1}}],[\"rmdir\",{\"1\":{\"445\":1,\"477\":1}}],[\"rm\",{\"1\":{\"421\":1,\"422\":1,\"445\":3,\"453\":1,\"579\":1}}],[\"round\",{\"1\":{\"927\":1}}],[\"roundup\",{\"1\":{\"418\":1}}],[\"role=\",{\"1\":{\"927\":2}}],[\"roll\",{\"1\":{\"326\":3,\"329\":3,\"333\":3}}],[\"rollno\",{\"1\":{\"326\":7,\"329\":16,\"333\":15}}],[\"root密码\",{\"1\":{\"451\":1}}],[\"root\",{\"1\":{\"433\":1,\"445\":1}}],[\"row\",{\"1\":{\"418\":4}}],[\"rob\",{\"1\":{\"309\":2,\"322\":3}}],[\"robert\",{\"1\":{\"308\":4,\"309\":2,\"316\":4,\"317\":2,\"318\":6,\"326\":2,\"329\":2,\"333\":2}}],[\"rose\",{\"1\":{\"302\":1}}],[\"radio\",{\"1\":{\"893\":1}}],[\"radius\",{\"1\":{\"307\":14,\"312\":26,\"925\":6}}],[\"rat\",{\"1\":{\"582\":1}}],[\"rational\",{\"1\":{\"302\":1}}],[\"raw\",{\"1\":{\"465\":1,\"475\":2}}],[\"rake\",{\"1\":{\"431\":2}}],[\"range\",{\"1\":{\"418\":2,\"893\":2}}],[\"randomize\",{\"1\":{\"557\":1}}],[\"random\",{\"1\":{\"312\":3,\"556\":4}}],[\"ray\",{\"0\":{\"531\":1},\"1\":{\"235\":1,\"530\":1}}],[\"richard\",{\"1\":{\"309\":2}}],[\"richer\",{\"1\":{\"213\":1}}],[\"rightsidebar\",{\"1\":{\"612\":1}}],[\"right\",{\"1\":{\"218\":3,\"252\":3,\"610\":1,\"612\":1,\"927\":1}}],[\"risc\",{\"0\":{\"49\":1},\"1\":{\"48\":1}}],[\"r\",{\"1\":{\"174\":1,\"218\":3,\"418\":3,\"422\":1,\"437\":1,\"478\":2,\"504\":1}}],[\"r图转换为关系模式\",{\"1\":{\"105\":1}}],[\"r图\",{\"1\":{\"104\":1}}],[\"r模型转为关系模型\",{\"1\":{\"95\":1}}],[\"r模型\",{\"0\":{\"93\":1}}],[\"rn\",{\"1\":{\"78\":1}}],[\"r2\",{\"1\":{\"78\":2}}],[\"r1\",{\"1\":{\"78\":2}}],[\"r进制转十进制\",{\"1\":{\"64\":1}}],[\"required>\",{\"1\":{\"895\":1}}],[\"required>提交时才会验证\",{\"1\":{\"895\":1}}],[\"required\",{\"1\":{\"895\":1}}],[\"requests\",{\"1\":{\"550\":1,\"556\":1,\"566\":1}}],[\"requested\",{\"1\":{\"330\":3}}],[\"request\",{\"1\":{\"330\":7,\"331\":20,\"556\":3}}],[\"rendering\",{\"1\":{\"845\":1}}],[\"render\",{\"1\":{\"727\":2}}],[\"renderobject\",{\"0\":{\"631\":1}}],[\"rel=\",{\"1\":{\"880\":1}}],[\"reload\",{\"1\":{\"583\":1,\"585\":1}}],[\"relative\",{\"1\":{\"228\":1}}],[\"related\",{\"1\":{\"17\":1,\"19\":1}}],[\"reg\",{\"1\":{\"884\":1}}],[\"regsiter\",{\"1\":{\"610\":1,\"612\":1}}],[\"registry\",{\"1\":{\"582\":2,\"583\":1}}],[\"regarded\",{\"1\":{\"225\":1,\"226\":1}}],[\"replace\",{\"1\":{\"556\":1}}],[\"repeat\",{\"1\":{\"487\":1}}],[\"repolist\",{\"1\":{\"453\":1}}],[\"repo直接删掉rm掉\",{\"1\":{\"447\":1}}],[\"repos\",{\"1\":{\"447\":5,\"459\":1}}],[\"repositories\",{\"1\":{\"431\":1}}],[\"repository\",{\"1\":{\"420\":1,\"637\":4}}],[\"repo\",{\"1\":{\"421\":2,\"447\":8,\"459\":1}}],[\"reboot\",{\"1\":{\"445\":1}}],[\"reset\",{\"1\":{\"892\":1,\"893\":1,\"924\":2}}],[\"resolve\",{\"1\":{\"638\":1}}],[\"resource\",{\"1\":{\"567\":1}}],[\"result\",{\"1\":{\"556\":1,\"727\":7,\"736\":2}}],[\"responses\",{\"1\":{\"566\":1}}],[\"response\",{\"1\":{\"556\":7}}],[\"responsibility\",{\"0\":{\"314\":1},\"1\":{\"281\":1}}],[\"resctricted\",{\"1\":{\"481\":1}}],[\"restful规范\",{\"0\":{\"572\":1}}],[\"restart\",{\"1\":{\"433\":1,\"579\":1,\"583\":1}}],[\"restore\",{\"1\":{\"431\":1}}],[\"remotesigned\",{\"1\":{\"481\":2}}],[\"remote\",{\"1\":{\"420\":1,\"421\":2,\"425\":2}}],[\"remove\",{\"1\":{\"309\":2,\"329\":1,\"333\":1}}],[\"removeat\",{\"1\":{\"288\":1}}],[\"reuse\",{\"0\":{\"342\":1}}],[\"reusable\",{\"1\":{\"334\":1}}],[\"retrivestudentfromdatabase\",{\"1\":{\"326\":2}}],[\"returning\",{\"1\":{\"332\":3,\"566\":1}}],[\"return\",{\"1\":{\"251\":1,\"252\":2,\"288\":11,\"303\":5,\"304\":15,\"305\":6,\"306\":4,\"308\":8,\"309\":2,\"312\":4,\"314\":1,\"316\":6,\"317\":5,\"318\":1,\"319\":4,\"320\":1,\"321\":3,\"322\":6,\"323\":4,\"326\":5,\"327\":2,\"328\":4,\"329\":4,\"330\":1,\"332\":9,\"333\":4,\"437\":1,\"556\":1,\"558\":2,\"736\":11,\"930\":1}}],[\"recently\",{\"1\":{\"596\":1}}],[\"received\",{\"1\":{\"315\":1}}],[\"reconfigure\",{\"1\":{\"433\":1}}],[\"rectangle\",{\"1\":{\"303\":9,\"304\":9,\"306\":12,\"310\":6,\"311\":8}}],[\"react\",{\"0\":{\"707\":1},\"1\":{\"633\":1}}],[\"rear\",{\"1\":{\"357\":1}}],[\"realcustomer\",{\"1\":{\"322\":5}}],[\"realimage\",{\"1\":{\"313\":10}}],[\"readonly\",{\"1\":{\"727\":1,\"895\":1}}],[\"read\",{\"1\":{\"209\":1,\"210\":1,\"212\":1}}],[\"ref\",{\"1\":{\"867\":3}}],[\"referenceerror\",{\"1\":{\"780\":3}}],[\"reference\",{\"1\":{\"313\":1,\"596\":1}}],[\"reflection\",{\"1\":{\"305\":1}}],[\"redo\",{\"1\":{\"315\":1,\"487\":1}}],[\"redrectangle\",{\"1\":{\"310\":2}}],[\"redshapedecorator\",{\"1\":{\"310\":6}}],[\"redcircle\",{\"1\":{\"307\":5,\"310\":2}}],[\"red\",{\"1\":{\"304\":9,\"307\":2,\"310\":7,\"312\":4,\"613\":2,\"724\":3,\"875\":1,\"926\":1,\"927\":3,\"928\":1}}],[\"redundancy\",{\"0\":{\"73\":1}}],[\"reduced\",{\"1\":{\"48\":1}}],[\"revealing\",{\"1\":{\"288\":1}}],[\"立即寻址直接寻址间接寻址寄存器寻址基址寻址变址寻址\",{\"1\":{\"47\":1}}],[\"顺序队列\",{\"0\":{\"358\":1}}],[\"顺序表\",{\"0\":{\"353\":1}}],[\"顺序存储结构\",{\"0\":{\"353\":1},\"1\":{\"365\":1}}],[\"顺序\",{\"1\":{\"46\":1,\"267\":1,\"315\":1}}],[\"执行会报错\",{\"1\":{\"704\":1}}],[\"执行上下文\",{\"0\":{\"703\":1}}],[\"执行完后一直不退出\",{\"1\":{\"478\":1}}],[\"执行完之后不退出\",{\"1\":{\"478\":1}}],[\"执行某些任务\",{\"1\":{\"331\":1}}],[\"执行效率会提高\",{\"1\":{\"305\":1}}],[\"执行指令\",{\"1\":{\"45\":1}}],[\"执行所有算术\",{\"1\":{\"37\":1}}],[\"gt\",{\"1\":{\"884\":1}}],[\"gpu进程\",{\"1\":{\"693\":1}}],[\"gpgcheck=0\",{\"1\":{\"459\":1}}],[\"gc的两种类型是什么\",{\"0\":{\"691\":1}}],[\"gcc\",{\"1\":{\"445\":1}}],[\"guards\",{\"1\":{\"566\":1,\"568\":1}}],[\"guild\",{\"1\":{\"610\":1,\"612\":1}}],[\"gui\",{\"1\":{\"315\":1}}],[\"guide\",{\"0\":{\"232\":1},\"1\":{\"227\":2},\"2\":{\"198\":1,\"200\":1,\"203\":1,\"206\":1,\"223\":1,\"230\":1,\"231\":1}}],[\"guitar\",{\"0\":{\"186\":1,\"188\":1,\"190\":1,\"193\":1}}],[\"ggyg\",{\"1\":{\"487\":1}}],[\"ggvg\",{\"1\":{\"487\":1}}],[\"gg\",{\"1\":{\"487\":1}}],[\"global\",{\"1\":{\"421\":4,\"424\":2,\"867\":1}}],[\"gitcdn\",{\"1\":{\"475\":1}}],[\"gitee\",{\"1\":{\"465\":1}}],[\"gitlab\",{\"0\":{\"429\":1,\"434\":1},\"1\":{\"431\":13,\"433\":5,\"434\":1,\"475\":1}}],[\"githubusercontent\",{\"1\":{\"475\":1}}],[\"github\",{\"0\":{\"475\":1},\"1\":{\"425\":4}}],[\"git地址\",{\"1\":{\"421\":1}}],[\"git\",{\"0\":{\"419\":1},\"1\":{\"421\":15,\"422\":3,\"423\":2,\"424\":2,\"425\":14},\"2\":{\"428\":1}}],[\"grow\",{\"1\":{\"912\":1}}],[\"groups\",{\"1\":{\"445\":1,\"637\":1}}],[\"grids\",{\"1\":{\"856\":1}}],[\"grid\",{\"0\":{\"914\":1,\"915\":1},\"1\":{\"848\":1,\"930\":2}}],[\"gradle文件\",{\"1\":{\"639\":1}}],[\"gradle下载慢的问题\",{\"0\":{\"637\":1}}],[\"gradle下进行调整\",{\"1\":{\"627\":1}}],[\"gradle保存位置\",{\"1\":{\"627\":1}}],[\"gradle中需要调整相应的sdk版本\",{\"1\":{\"627\":1}}],[\"gradle变量\",{\"1\":{\"627\":1}}],[\"gradle\",{\"1\":{\"627\":8,\"637\":3,\"638\":4,\"639\":1}}],[\"grained\",{\"1\":{\"328\":1}}],[\"grep\",{\"1\":{\"445\":1,\"776\":1}}],[\"greencircle\",{\"1\":{\"307\":5}}],[\"green\",{\"1\":{\"304\":9,\"307\":2,\"312\":11,\"724\":3,\"843\":1,\"926\":1,\"929\":1}}],[\"gap\",{\"1\":{\"843\":1}}],[\"game\",{\"1\":{\"324\":26}}],[\"gang\",{\"0\":{\"277\":1}}],[\"generator函数\",{\"0\":{\"793\":1}}],[\"generator\",{\"0\":{\"770\":1}}],[\"generated\",{\"1\":{\"929\":2}}],[\"generate\",{\"1\":{\"208\":2,\"595\":1}}],[\"general\",{\"1\":{\"596\":1}}],[\"genspider\",{\"1\":{\"554\":3}}],[\"gender\",{\"1\":{\"308\":20}}],[\"getentry\",{\"1\":{\"366\":1}}],[\"getter\",{\"1\":{\"333\":1}}],[\"gettype\",{\"1\":{\"306\":4}}],[\"getallstudents\",{\"1\":{\"329\":4,\"333\":3}}],[\"getdata\",{\"1\":{\"328\":9}}],[\"getbusinessservice\",{\"1\":{\"327\":2}}],[\"getrollno\",{\"1\":{\"326\":3,\"329\":7,\"333\":7}}],[\"getrandomy\",{\"1\":{\"312\":2}}],[\"getrandomx\",{\"1\":{\"312\":2}}],[\"getrandomcolor\",{\"1\":{\"312\":2}}],[\"getmaxcol\",{\"1\":{\"366\":1}}],[\"getmaxrow\",{\"1\":{\"366\":1}}],[\"getmarriedwomanexpression\",{\"1\":{\"316\":2}}],[\"getmaritalstatus\",{\"1\":{\"308\":3}}],[\"getmaleexpression\",{\"1\":{\"316\":2}}],[\"getcustomer\",{\"1\":{\"322\":5}}],[\"getchainofloggers\",{\"1\":{\"314\":2}}],[\"getcircle\",{\"1\":{\"312\":2}}],[\"getcolor\",{\"1\":{\"304\":6}}],[\"getgender\",{\"1\":{\"308\":4}}],[\"getname\",{\"1\":{\"308\":2,\"318\":2,\"322\":7,\"326\":3,\"329\":4,\"332\":6,\"333\":4}}],[\"getinfo\",{\"1\":{\"736\":8}}],[\"getinstance\",{\"1\":{\"288\":2,\"305\":11}}],[\"getiterator\",{\"1\":{\"317\":3}}],[\"getid\",{\"1\":{\"306\":4}}],[\"getservice\",{\"1\":{\"332\":7}}],[\"getstudent\",{\"1\":{\"329\":3,\"333\":2}}],[\"getstudentrollno\",{\"1\":{\"326\":1}}],[\"getstudentname\",{\"1\":{\"326\":1}}],[\"getstatefrommemento\",{\"1\":{\"319\":3}}],[\"getstate\",{\"1\":{\"319\":6,\"320\":4,\"321\":3}}],[\"getsubordinates\",{\"1\":{\"309\":3}}],[\"getsingleton\",{\"1\":{\"305\":1}}],[\"getshape\",{\"1\":{\"303\":5,\"304\":6,\"306\":4}}],[\"getfactory\",{\"1\":{\"304\":3}}],[\"get\",{\"1\":{\"288\":1,\"306\":1,\"312\":1,\"319\":4,\"329\":4,\"333\":3,\"457\":1,\"481\":2,\"556\":3,\"572\":1,\"628\":1,\"635\":1}}],[\"google\",{\"1\":{\"623\":1,\"637\":3,\"880\":1}}],[\"good\",{\"1\":{\"1\":1}}],[\"gof\",{\"0\":{\"277\":1}}],[\"go\",{\"1\":{\"260\":1}}],[\"g\",{\"1\":{\"174\":1,\"411\":1,\"487\":4,\"567\":4,\"576\":1,\"721\":1,\"776\":1}}],[\"g是数量单位\",{\"1\":{\"55\":1}}],[\"ghz\",{\"1\":{\"44\":1}}],[\"操作符\",{\"0\":{\"746\":1}}],[\"操作符和另一个操作数\",{\"1\":{\"309\":2}}],[\"操作集\",{\"1\":{\"366\":1}}],[\"操作和恢复\",{\"1\":{\"315\":1}}],[\"操作\",{\"0\":{\"422\":1},\"1\":{\"302\":1,\"315\":1,\"864\":1}}],[\"操作后\",{\"1\":{\"174\":1}}],[\"操作系统\",{\"0\":{\"118\":1}}],[\"操作数\",{\"1\":{\"44\":1}}],[\"操作码\",{\"1\":{\"44\":1}}],[\"操作控制\",{\"1\":{\"36\":1}}],[\"冯泽云分类法\",{\"1\":{\"42\":1}}],[\"多项\",{\"1\":{\"895\":1}}],[\"多很多\",{\"1\":{\"738\":1}}],[\"多进程架构\",{\"1\":{\"693\":1}}],[\"多段部署\",{\"1\":{\"601\":1}}],[\"多设备预览\",{\"1\":{\"597\":1}}],[\"多行注释\",{\"1\":{\"929\":1}}],[\"多行操作\",{\"1\":{\"487\":1}}],[\"多行按固定行数分成多个文件\",{\"0\":{\"418\":1}}],[\"多个空格会被合成一个空格\",{\"1\":{\"909\":1}}],[\"多个任务并发执行\",{\"1\":{\"505\":1}}],[\"多个\",{\"1\":{\"478\":1,\"693\":2}}],[\"多个类相互耦合\",{\"1\":{\"318\":1}}],[\"多维数组\",{\"1\":{\"364\":1}}],[\"多层装饰比较复杂\",{\"1\":{\"310\":1}}],[\"多数人知晓的\",{\"1\":{\"276\":1}}],[\"多看属性栏\",{\"1\":{\"175\":1}}],[\"多找素材\",{\"1\":{\"168\":1}}],[\"多找素材练习巩固\",{\"1\":{\"132\":1}}],[\"多对多\",{\"1\":{\"93\":1}}],[\"多处理机\",{\"0\":{\"50\":1}}],[\"多多\",{\"1\":{\"42\":1}}],[\"多核cpu\",{\"0\":{\"38\":1}}],[\"multiple>\",{\"1\":{\"895\":1}}],[\"multiple\",{\"1\":{\"895\":1}}],[\"mynodeimage\",{\"1\":{\"579\":1}}],[\"my\",{\"1\":{\"561\":2,\"724\":1,\"929\":2}}],[\"mysql实战\",{\"0\":{\"562\":1}}],[\"mysql\",{\"1\":{\"459\":1,\"561\":1}}],[\"mysingleton\",{\"1\":{\"288\":2}}],[\"mkdir\",{\"1\":{\"445\":1,\"477\":1,\"580\":1}}],[\"mv\",{\"0\":{\"289\":1},\"1\":{\"445\":1,\"447\":1}}],[\"mvcpatterndemo\",{\"1\":{\"326\":2}}],[\"mvc\",{\"0\":{\"326\":1},\"1\":{\"282\":2,\"318\":1,\"326\":1}}],[\"moz\",{\"1\":{\"925\":1}}],[\"mouse\",{\"1\":{\"325\":9}}],[\"month\",{\"1\":{\"724\":1,\"893\":2}}],[\"monitor\",{\"1\":{\"325\":9}}],[\"mondeo\",{\"1\":{\"288\":3}}],[\"module>\",{\"1\":{\"858\":1}}],[\"modules\",{\"1\":{\"288\":3,\"290\":3,\"566\":1,\"638\":4,\"736\":1,\"739\":1}}],[\"module\",{\"0\":{\"798\":1},\"1\":{\"288\":3,\"391\":1,\"567\":1,\"575\":1,\"613\":1,\"638\":1}}],[\"model=\",{\"1\":{\"860\":2}}],[\"model\",{\"1\":{\"288\":4,\"326\":14,\"329\":1,\"867\":1}}],[\"move\",{\"1\":{\"487\":10}}],[\"mov\",{\"1\":{\"259\":1}}],[\"more\",{\"1\":{\"213\":1,\"225\":1,\"288\":1,\"445\":1}}],[\"mend\",{\"1\":{\"613\":1}}],[\"menu\",{\"1\":{\"610\":1,\"612\":1}}],[\"media\",{\"1\":{\"856\":1}}],[\"mediatorpatterndemo\",{\"1\":{\"318\":2}}],[\"mediator\",{\"0\":{\"318\":1},\"1\":{\"281\":2,\"288\":1}}],[\"medname\",{\"1\":{\"558\":1}}],[\"merge\",{\"0\":{\"423\":1},\"1\":{\"423\":1}}],[\"message\",{\"1\":{\"314\":10,\"318\":4,\"925\":2,\"926\":4}}],[\"meetcriteria\",{\"1\":{\"308\":14}}],[\"memo\",{\"1\":{\"580\":3,\"860\":1}}],[\"memberwiseclone\",{\"1\":{\"306\":1}}],[\"mementopatterndemo\",{\"1\":{\"319\":2}}],[\"mementolist\",{\"1\":{\"319\":3}}],[\"memento\",{\"0\":{\"319\":1},\"1\":{\"281\":1,\"319\":11}}],[\"me\",{\"1\":{\"288\":1,\"582\":1}}],[\"meter>\",{\"1\":{\"894\":1}}],[\"meter\",{\"1\":{\"894\":1}}],[\"methods\",{\"1\":{\"293\":1,\"596\":1}}],[\"method\",{\"1\":{\"288\":1,\"303\":6,\"304\":12,\"306\":3}}],[\"meta>\",{\"1\":{\"873\":1}}],[\"meta\",{\"1\":{\"205\":1,\"873\":1}}],[\"means\",{\"1\":{\"229\":1}}],[\"msg\",{\"1\":{\"610\":1,\"612\":1}}],[\"msgbox\",{\"1\":{\"418\":2}}],[\"msofiledialogfolderpicker\",{\"1\":{\"418\":1}}],[\"ms\",{\"1\":{\"227\":1,\"925\":1}}],[\"mdn\",{\"1\":{\"917\":1}}],[\"md\",{\"1\":{\"213\":1}}],[\"mtbf=mttf+mttr\",{\"1\":{\"77\":1}}],[\"mttf+mttr\",{\"1\":{\"77\":1}}],[\"mttf\",{\"1\":{\"77\":1}}],[\"mttf=1\",{\"1\":{\"77\":1}}],[\"mttr=1\",{\"1\":{\"77\":1}}],[\"m进制转n进制\",{\"1\":{\"64\":1}}],[\"m\",{\"1\":{\"55\":1,\"95\":1,\"185\":1,\"318\":1,\"366\":1,\"418\":5,\"487\":1,\"582\":1,\"583\":1}}],[\"mhz\",{\"1\":{\"44\":1}}],[\"minlength=\",{\"1\":{\"895\":1}}],[\"minlength\",{\"1\":{\"895\":1}}],[\"min\",{\"1\":{\"895\":1}}],[\"min=\",{\"1\":{\"893\":3,\"894\":1,\"895\":1}}],[\"might\",{\"1\":{\"724\":1}}],[\"middleware\",{\"1\":{\"566\":1,\"568\":2}}],[\"middle\",{\"1\":{\"487\":1}}],[\"mirror\",{\"1\":{\"583\":1}}],[\"mirror=http\",{\"1\":{\"466\":2}}],[\"mirrors\",{\"1\":{\"431\":1,\"447\":2,\"466\":2,\"545\":4,\"583\":2,\"637\":1}}],[\"michael\",{\"1\":{\"329\":2,\"333\":2}}],[\"michel\",{\"1\":{\"309\":2}}],[\"mike\",{\"1\":{\"308\":4}}],[\"mixin\",{\"0\":{\"925\":1},\"1\":{\"288\":1,\"867\":1,\"925\":3,\"932\":1}}],[\"miles\",{\"1\":{\"288\":5}}],[\"mips\",{\"1\":{\"44\":1}}],[\"mimd\",{\"1\":{\"42\":1}}],[\"misd\",{\"1\":{\"42\":1}}],[\"maxlength=\",{\"1\":{\"895\":1}}],[\"maxlength\",{\"1\":{\"895\":1}}],[\"max\",{\"1\":{\"895\":1}}],[\"max=\",{\"1\":{\"893\":2,\"894\":1,\"895\":1}}],[\"map\",{\"1\":{\"648\":1}}],[\"maven\",{\"1\":{\"637\":10}}],[\"mavencentral\",{\"1\":{\"637\":2}}],[\"makecache\",{\"1\":{\"453\":1}}],[\"master\",{\"1\":{\"423\":1,\"465\":1,\"475\":1,\"613\":1}}],[\"maybe\",{\"1\":{\"405\":1,\"724\":1}}],[\"maya\",{\"0\":{\"146\":1}}],[\"manager\",{\"0\":{\"410\":1},\"1\":{\"331\":1,\"627\":1}}],[\"match\",{\"1\":{\"638\":1}}],[\"matrix\",{\"1\":{\"366\":8}}],[\"math\",{\"1\":{\"312\":3}}],[\"matter\",{\"1\":{\"17\":1,\"19\":1}}],[\"males\",{\"1\":{\"308\":4}}],[\"male\",{\"1\":{\"308\":18,\"316\":2,\"727\":1}}],[\"malepersons\",{\"1\":{\"308\":3}}],[\"margin\",{\"1\":{\"843\":1,\"880\":1,\"923\":1,\"927\":1}}],[\"markup\",{\"1\":{\"905\":1}}],[\"marketing\",{\"1\":{\"309\":6}}],[\"markdown\",{\"0\":{\"208\":1,\"209\":1,\"210\":1,\"211\":1},\"1\":{\"208\":2,\"209\":3,\"210\":1,\"211\":3,\"212\":2,\"213\":1,\"226\":2,\"227\":1,\"228\":2,\"229\":2},\"2\":{\"224\":1}}],[\"marital\",{\"1\":{\"308\":15}}],[\"maritalstatus\",{\"1\":{\"308\":5}}],[\"married\",{\"1\":{\"308\":5,\"316\":6}}],[\"macos为command+option+b\",{\"1\":{\"596\":1}}],[\"macos为command键\",{\"1\":{\"596\":1}}],[\"macos为deveco\",{\"1\":{\"596\":1}}],[\"macos\",{\"0\":{\"464\":1,\"472\":1},\"1\":{\"635\":2}}],[\"mac\",{\"1\":{\"129\":1}}],[\"mainnav\",{\"1\":{\"612\":1}}],[\"main\",{\"0\":{\"666\":1},\"1\":{\"17\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1,\"475\":1,\"580\":1,\"610\":1,\"612\":1,\"927\":1,\"928\":2}}],[\"按钮\",{\"1\":{\"612\":1}}],[\"按enter键结束\",{\"1\":{\"487\":1}}],[\"按下\",{\"1\":{\"486\":1}}],[\"按任意键退出\",{\"1\":{\"478\":1}}],[\"按任务处理方式分类\",{\"0\":{\"122\":1}}],[\"按照<style>出现的顺序插入<head>\",{\"1\":{\"858\":1}}],[\"按照提示配置环境变量\",{\"1\":{\"466\":1}}],[\"按照步骤来\",{\"1\":{\"465\":1}}],[\"按照版本升级路线一个版本一个版本依次install即可\",{\"1\":{\"431\":1}}],[\"按照既有的文件名\",{\"1\":{\"418\":1}}],[\"按职责来划分\",{\"1\":{\"313\":1}}],[\"按人类的思维角度出发\",{\"0\":{\"260\":1}}],[\"按住快捷键ctrl并选择需要声明的变量名\",{\"1\":{\"596\":1}}],[\"按住ctrl键\",{\"1\":{\"596\":1}}],[\"按住ctrl临时调用选择工具\",{\"1\":{\"184\":1}}],[\"按住鼠标不放拖动小眼睛\",{\"1\":{\"184\":1}}],[\"按住单击图层载入选区\",{\"1\":{\"184\":1}}],[\"按住单击工具箱可切换\",{\"1\":{\"184\":1}}],[\"按住alt键可快速拉出参考线\",{\"1\":{\"184\":1}}],[\"按住alt拖动图层可进行复制\",{\"1\":{\"184\":1}}],[\"按住shift\",{\"1\":{\"145\":1}}],[\"按着alt\",{\"1\":{\"183\":1}}],[\"按着\",{\"1\":{\"177\":1}}],[\"按运行平台分类\",{\"0\":{\"126\":1}}],[\"按并行程度分类\",{\"0\":{\"42\":1}}],[\"按处理机数量分类\",{\"0\":{\"41\":1}}],[\"分\",{\"1\":{\"884\":1}}],[\"分段存储管理\",{\"0\":{\"520\":1}}],[\"分页存储管理\",{\"0\":{\"519\":1}}],[\"分为可剥夺\",{\"1\":{\"506\":1}}],[\"分割文件\",{\"1\":{\"418\":2}}],[\"分割\",{\"0\":{\"418\":1}}],[\"分支名\",{\"1\":{\"421\":1}}],[\"分支语句的代替者\",{\"1\":{\"321\":1}}],[\"分支限界法\",{\"1\":{\"242\":1}}],[\"分区显示标记\",{\"1\":{\"874\":1}}],[\"分区存储管理\",{\"0\":{\"518\":1}}],[\"分区\",{\"1\":{\"252\":1}}],[\"分别进行直接插入排序\",{\"1\":{\"248\":1}}],[\"分析算法的效率\",{\"1\":{\"363\":1}}],[\"分析一般算法的效率\",{\"1\":{\"240\":1}}],[\"分析指令\",{\"1\":{\"45\":1}}],[\"分治法\",{\"0\":{\"236\":1,\"253\":1},\"1\":{\"242\":1}}],[\"分辨率\",{\"1\":{\"155\":1}}],[\"分布式操作系统\",{\"0\":{\"128\":1}}],[\"分布式处理系统\",{\"1\":{\"41\":1}}],[\"分时操作系统\",{\"0\":{\"124\":1}}],[\"分级存储体系\",{\"1\":{\"51\":1}}],[\"分类\",{\"0\":{\"40\":1,\"86\":1,\"91\":1,\"157\":1,\"278\":1}}],[\"体系结构\",{\"0\":{\"39\":1}}],[\"体会到传统行业与互联网行业差异性\",{\"1\":{\"1\":1}}],[\"单行注释\",{\"1\":{\"929\":1}}],[\"单标记\",{\"1\":{\"872\":1,\"876\":1}}],[\"单一职责\",{\"0\":{\"831\":1}}],[\"单一职责原则\",{\"0\":{\"339\":1}}],[\"单进程架构\",{\"1\":{\"693\":1}}],[\"单线程模型\",{\"0\":{\"645\":1}}],[\"单击右键选择generate\",{\"1\":{\"596\":2}}],[\"单击鼠标右键\",{\"1\":{\"596\":1}}],[\"单引号\",{\"1\":{\"487\":2,\"884\":1}}],[\"单词移动\",{\"1\":{\"487\":2}}],[\"单单使用\",{\"1\":{\"458\":1}}],[\"单向链尾不能找到前一个\",{\"1\":{\"355\":1}}],[\"单向扫描调度算法cscan\",{\"1\":{\"56\":1}}],[\"单链表\",{\"1\":{\"354\":1}}],[\"单例类必须给所有其他对象提供这一实例\",{\"1\":{\"305\":1}}],[\"单例类必须自己创建自己的唯一实例\",{\"1\":{\"305\":1}}],[\"单例类只能有一个实例\",{\"1\":{\"305\":1}}],[\"单例模式的实现有多种方式\",{\"1\":{\"305\":1}}],[\"单例模式的几种实现方式\",{\"1\":{\"305\":1}}],[\"单例模式\",{\"0\":{\"293\":1,\"305\":1,\"816\":1},\"1\":{\"279\":1}}],[\"单道和多道\",{\"0\":{\"123\":1}}],[\"单双符号位\",{\"1\":{\"65\":1}}],[\"单工\",{\"1\":{\"60\":1}}],[\"单位时间内处理的指令的条数\",{\"1\":{\"49\":1}}],[\"单多\",{\"1\":{\"42\":1}}],[\"单数据流\",{\"1\":{\"42\":1}}],[\"单指令流\",{\"1\":{\"42\":1}}],[\"单处理系统\",{\"1\":{\"41\":1}}],[\"单核多线程是交替执行任务\",{\"1\":{\"38\":1}}],[\"单元测试\",{\"1\":{\"29\":1}}],[\"满足用户同时进行多任务处理\",{\"1\":{\"38\":1}}],[\"寄存器组\",{\"1\":{\"37\":1}}],[\"对问题域进行重新分析和抽象\",{\"1\":{\"942\":1}}],[\"对列表条目进行简短的说明\",{\"1\":{\"874\":1}}],[\"对比vue2\",{\"0\":{\"863\":1}}],[\"对单个组件\",{\"1\":{\"858\":1}}],[\"对齐样式\",{\"1\":{\"613\":1}}],[\"对修改关闭\",{\"1\":{\"336\":1}}],[\"对这种服务的引用可以在\",{\"1\":{\"332\":1}}],[\"对用户进行身份验证\",{\"1\":{\"330\":1}}],[\"对\",{\"1\":{\"314\":1}}],[\"对请求的发送者和接收者进行解耦\",{\"1\":{\"314\":1}}],[\"对于大软件\",{\"1\":{\"468\":1}}],[\"对于模块的每个版本\",{\"1\":{\"413\":1}}],[\"对于客户端\",{\"1\":{\"333\":1}}],[\"对于可以切换状态的状态模式\",{\"1\":{\"321\":1}}],[\"对于复杂的文法比较难维护\",{\"1\":{\"316\":1}}],[\"对于一些固定文法构建一个解释句子的解释器\",{\"1\":{\"316\":1}}],[\"对于\",{\"1\":{\"309\":1,\"749\":1}}],[\"对于两个独立变化的维度\",{\"1\":{\"307\":1}}],[\"对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统\",{\"1\":{\"307\":1}}],[\"对于左边与右边的分区递归进行分区\",{\"1\":{\"252\":1}}],[\"对每种形状都运行数据库查询\",{\"1\":{\"306\":1}}],[\"对静态域使用延迟初始化\",{\"1\":{\"305\":1}}],[\"对象类型接口\",{\"0\":{\"727\":1},\"1\":{\"726\":1}}],[\"对象存储\",{\"0\":{\"378\":1}}],[\"对象发送请求的对象\",{\"1\":{\"331\":1}}],[\"对象是请求处理程序\",{\"1\":{\"331\":1}}],[\"对象也可以在数据不可用的时候提供默认的行为\",{\"1\":{\"322\":1}}],[\"对象不是检查空值\",{\"1\":{\"322\":1}}],[\"对象实例的检查\",{\"1\":{\"322\":1}}],[\"对象的扩展\",{\"0\":{\"787\":1}}],[\"对象的执行算法\",{\"1\":{\"323\":1}}],[\"对象的行为依赖于它的状态\",{\"1\":{\"321\":1}}],[\"对象的列表\",{\"1\":{\"308\":1,\"309\":1}}],[\"对象看起来好像修改了它的类\",{\"1\":{\"321\":1}}],[\"对象来显示他们之间的通信\",{\"1\":{\"318\":1}}],[\"对象与对象之间存在大量的关联关系\",{\"1\":{\"318\":1}}],[\"对象\",{\"1\":{\"310\":1,\"312\":1,\"318\":1,\"319\":1,\"321\":1,\"322\":1,\"323\":1}}],[\"对象图\",{\"1\":{\"302\":1}}],[\"对象字面量\",{\"1\":{\"288\":1}}],[\"对象属性赋值\",{\"1\":{\"288\":1}}],[\"对象之间的通信\",{\"1\":{\"281\":1}}],[\"对象结构中对象对应的类很少改变\",{\"1\":{\"325\":1}}],[\"对象结构\",{\"1\":{\"280\":1}}],[\"对象创建抽象类来获取工厂\",{\"1\":{\"304\":1}}],[\"对象创建\",{\"1\":{\"279\":1}}],[\"对象关系数据库系统\",{\"0\":{\"89\":1}}],[\"对接口编程而不是对实现编程\",{\"1\":{\"277\":1}}],[\"对等模式\",{\"1\":{\"127\":1}}],[\"对交互能力要求不高\",{\"1\":{\"125\":1}}],[\"对应的ip地址记录\",{\"1\":{\"117\":1}}],[\"对应的二进制\",{\"1\":{\"73\":1}}],[\"对称加密技术\",{\"0\":{\"112\":1}}],[\"对阶\",{\"1\":{\"68\":1}}],[\"对程序员来说是透明的\",{\"1\":{\"54\":1}}],[\"对指令操作码分析\",{\"1\":{\"37\":1}}],[\"对未来中短期技术发展方向有大致思路\",{\"1\":{\"1\":1}}],[\"保留预先编排好的格式\",{\"1\":{\"874\":1}}],[\"保护\",{\"1\":{\"313\":1}}],[\"保证高度的协作\",{\"1\":{\"320\":1}}],[\"保证一个类仅有一个实例\",{\"1\":{\"305\":1}}],[\"保证软件的质量等\",{\"1\":{\"21\":1}}],[\"保存build\",{\"1\":{\"639\":1}}],[\"保存\",{\"1\":{\"487\":1}}],[\"保存并退出\",{\"1\":{\"487\":1}}],[\"保存一个对象的某个状态\",{\"1\":{\"319\":1}}],[\"保存文件\",{\"1\":{\"174\":1}}],[\"保存指令运行结果条件码内容\",{\"1\":{\"37\":1}}],[\"暂时性死区\",{\"1\":{\"780\":1}}],[\"暂时存放内存的指令或数据\",{\"1\":{\"37\":1}}],[\"暂存后正常提交\",{\"1\":{\"423\":1}}],[\"暂存区\",{\"1\":{\"420\":1}}],[\"暂存指令\",{\"1\":{\"37\":1}}],[\"暂存数据\",{\"1\":{\"37\":1}}],[\"内联块级弹性伸缩盒\",{\"1\":{\"913\":1}}],[\"内联模板\",{\"1\":{\"867\":1}}],[\"内置类型\",{\"0\":{\"750\":1}}],[\"内置基本类型\",{\"0\":{\"648\":1}}],[\"内容假如不是请求url\",{\"1\":{\"706\":1}}],[\"内容区\",{\"1\":{\"611\":1}}],[\"内容\",{\"1\":{\"610\":2,\"612\":1}}],[\"内容识别\",{\"1\":{\"174\":1,\"184\":1}}],[\"内模式\",{\"1\":{\"101\":2}}],[\"内存分配与垃圾回收\",{\"0\":{\"644\":1}}],[\"内存16gb及以上\",{\"1\":{\"592\":1}}],[\"内存与接口地址统一编址方法\",{\"1\":{\"58\":1}}],[\"内存与接口地址独立编址方法\",{\"1\":{\"58\":1}}],[\"内存和接口地址编址方法\",{\"0\":{\"58\":1}}],[\"内存编址计算\",{\"0\":{\"55\":1}}],[\"内外部中断\",{\"1\":{\"36\":1}}],[\"内部属性\",{\"1\":{\"761\":1}}],[\"内部依赖对象\",{\"1\":{\"328\":1}}],[\"内部总线\",{\"1\":{\"37\":1,\"60\":1}}],[\"内部\",{\"1\":{\"34\":1}}],[\"算术表达式包括操作数\",{\"1\":{\"309\":1}}],[\"算术运算\",{\"1\":{\"36\":1,\"37\":1,\"266\":1}}],[\"算法进行了优化\",{\"1\":{\"864\":1}}],[\"算法与数据结构始终是一起的\",{\"1\":{\"363\":1}}],[\"算法可以自由切换\",{\"1\":{\"323\":1}}],[\"算法设计策略\",{\"0\":{\"242\":1}}],[\"算法表示\",{\"0\":{\"241\":1}}],[\"算法分析\",{\"0\":{\"240\":1}}],[\"算法思维\",{\"1\":{\"239\":1}}],[\"算法\",{\"0\":{\"237\":1},\"1\":{\"20\":1,\"864\":3}}],[\"是上下文\",{\"1\":{\"867\":1}}],[\"是可调用对象\",{\"1\":{\"761\":1}}],[\"是不受ecma的约束的\",{\"1\":{\"760\":1}}],[\"是不可见的\",{\"1\":{\"305\":1}}],[\"是为了解决什么样的问题或者说是能解决什么样的问题\",{\"1\":{\"759\":1}}],[\"是为了使程序的扩展性好\",{\"1\":{\"336\":1}}],[\"是怎么保持的长连接\",{\"0\":{\"689\":1}}],[\"是类型安全的语言\",{\"1\":{\"647\":1}}],[\"是allowed\",{\"1\":{\"554\":1}}],[\"是深度循环遍历\",{\"1\":{\"478\":1}}],[\"是已经实现了的数据结构\",{\"1\":{\"366\":1}}],[\"是描述数据结构的方法\",{\"1\":{\"366\":1}}],[\"是零个或多个元素的有穷序列\",{\"1\":{\"352\":1}}],[\"是继承复用的基石\",{\"1\":{\"337\":1}}],[\"是通过\",{\"1\":{\"332\":1}}],[\"是向\",{\"1\":{\"331\":1}}],[\"是具体环境\",{\"1\":{\"321\":1}}],[\"是男性\",{\"1\":{\"316\":1}}],[\"是树枝\",{\"1\":{\"309\":1}}],[\"是树叶\",{\"1\":{\"309\":1}}],[\"是用来降低多个对象和类之间的通信复杂性\",{\"1\":{\"318\":1}}],[\"是用于处理请求的两种不同的机制\",{\"1\":{\"568\":1}}],[\"是用于把一组相似的对象当作一个单一的对象\",{\"1\":{\"309\":1}}],[\"是用于把抽象化与实现化解耦\",{\"1\":{\"307\":1}}],[\"是用于创建重复的对象\",{\"1\":{\"306\":1}}],[\"是用户管理数据库的软件\",{\"1\":{\"99\":1}}],[\"是否有变化\",{\"1\":{\"864\":1}}],[\"是否多线程安全\",{\"1\":{\"305\":6}}],[\"是否\",{\"1\":{\"305\":6}}],[\"是多进程多线程的\",{\"1\":{\"305\":1}}],[\"是\",{\"1\":{\"305\":10,\"317\":1,\"458\":1}}],[\"是围绕一个超级工厂创建其他工厂\",{\"1\":{\"304\":1}}],[\"是始于1997年一个omg标准\",{\"1\":{\"302\":1}}],[\"是一种好的实践\",{\"1\":{\"925\":1}}],[\"是一种数据驱动的设计模式\",{\"1\":{\"315\":1}}],[\"是一类带权路径长度最短的树\",{\"1\":{\"369\":1}}],[\"是一个语义标签\",{\"1\":{\"894\":1}}],[\"是一个编辑器\",{\"1\":{\"483\":1}}],[\"是一个代码仓库\",{\"1\":{\"430\":1}}],[\"是一个由\",{\"1\":{\"412\":1}}],[\"是一个值的集合和定义在此集合上的一组操作的总称\",{\"1\":{\"366\":1}}],[\"是一个已婚的女性\",{\"1\":{\"316\":1}}],[\"是一套被反复使用的\",{\"1\":{\"276\":1}}],[\"是一一对应而且固定的\",{\"1\":{\"54\":1}}],[\"是指人脑中贮存的一系列如果\",{\"1\":{\"272\":1}}],[\"是两个不同概念\",{\"1\":{\"155\":1}}],[\"是最重要的特性\",{\"1\":{\"120\":1}}],[\"是主存一部分内容的副本\",{\"1\":{\"54\":1}}],[\"是cpu最根本的任务\",{\"1\":{\"36\":1}}],[\"是软件行业的有趣之处\",{\"1\":{\"21\":1}}],[\"一套存储变量用的设计良好规则\",{\"1\":{\"806\":1}}],[\"一切皆对象\",{\"1\":{\"647\":1}}],[\"一切皆\",{\"1\":{\"630\":1}}],[\"一定要看它的文档和推荐版本\",{\"1\":{\"628\":1}}],[\"一定在有限步骤之后终止\",{\"1\":{\"239\":1}}],[\"一律小写\",{\"1\":{\"613\":1}}],[\"一次开发\",{\"1\":{\"601\":1}}],[\"一次性推到多个仓库问题\",{\"0\":{\"425\":1}}],[\"一组地址\",{\"1\":{\"353\":1}}],[\"一篇关于设计模式的好文章\",{\"1\":{\"334\":1}}],[\"一张支票或银行存单是账户中资金的代理\",{\"1\":{\"313\":1}}],[\"一些过渡\",{\"1\":{\"867\":1}}],[\"一些转换\",{\"1\":{\"867\":1}}],[\"一些国内的镜像服务地址\",{\"1\":{\"582\":1}}],[\"一些方法通用\",{\"1\":{\"324\":1}}],[\"一些重复出现的问题可以用一种简单的语言来进行表达\",{\"1\":{\"316\":1}}],[\"一些设备管理器常常设计为单例模式\",{\"1\":{\"305\":1}}],[\"一些基本部件不会变\",{\"1\":{\"285\":1}}],[\"一整套一起换\",{\"1\":{\"304\":1}}],[\"一系列具体产品\",{\"1\":{\"304\":3}}],[\"一系列对象的状态变动将通知到观察者中\",{\"1\":{\"288\":1}}],[\"一直重复\",{\"1\":{\"250\":1}}],[\"一千年以后\",{\"0\":{\"189\":1}}],[\"一\",{\"0\":{\"174\":1,\"278\":1,\"293\":1,\"336\":1,\"387\":1,\"409\":1,\"610\":1,\"637\":1,\"921\":1}}],[\"一对多\",{\"1\":{\"93\":1}}],[\"一对一\",{\"1\":{\"93\":1}}],[\"一般配合name\",{\"1\":{\"873\":1}}],[\"一般用一个数值代表某一状态\",{\"1\":{\"724\":1}}],[\"一般用于浏览文件\",{\"1\":{\"486\":1}}],[\"一般里面已经包括了dart\",{\"1\":{\"627\":1}}],[\"一般为install文件夹\",{\"1\":{\"452\":1}}],[\"一般为动词\",{\"1\":{\"93\":1}}],[\"一般使用ce版本\",{\"1\":{\"430\":1}}],[\"一般模板方法都加上\",{\"1\":{\"324\":1}}],[\"一般返回值\",{\"1\":{\"321\":1}}],[\"一般采用异步方式\",{\"1\":{\"320\":1}}],[\"一般是\",{\"1\":{\"316\":1,\"450\":1}}],[\"一般是和工厂方法模式一起出现\",{\"1\":{\"306\":1}}],[\"一般的\",{\"1\":{\"310\":1}}],[\"一般情况下\",{\"1\":{\"305\":1}}],[\"一般性方法\",{\"0\":{\"242\":1}}],[\"一般选72\",{\"1\":{\"155\":1}}],[\"一般没有\",{\"1\":{\"93\":1}}],[\"一般\",{\"1\":{\"71\":1,\"305\":1}}],[\"一个函数\",{\"1\":{\"942\":1}}],[\"一个有趣的事实\",{\"1\":{\"749\":1}}],[\"一个有限指令集\",{\"1\":{\"238\":1}}],[\"一个页面一个渲染进程\",{\"1\":{\"706\":1}}],[\"一个\",{\"1\":{\"693\":3}}],[\"一个并行后串行\",{\"1\":{\"503\":1}}],[\"一个串行\",{\"1\":{\"503\":1}}],[\"一个出口\",{\"1\":{\"372\":1}}],[\"一个节点到另一个节点的通路\",{\"1\":{\"369\":1}}],[\"一个实体应当尽量少地与其他实体之间发生相互作用\",{\"1\":{\"341\":1}}],[\"一个组合实体是一个\",{\"1\":{\"328\":1}}],[\"一个为客户端实体提供的入口类\",{\"1\":{\"327\":1}}],[\"一个抽象类公开定义了执行它的方法的方式\",{\"1\":{\"324\":1}}],[\"一个系统需要动态地在几种算法中选择一种\",{\"1\":{\"323\":1}}],[\"一个系统有许多许多类\",{\"1\":{\"323\":1}}],[\"一个系统如果太多出现这种情况\",{\"1\":{\"284\":1}}],[\"一个空对象取代\",{\"1\":{\"322\":1}}],[\"一个简单语法需要解释的场景\",{\"1\":{\"316\":1}}],[\"一个类应该有且仅有一个引起它变化的原因\",{\"1\":{\"339\":1}}],[\"一个类应该只关心内部逻辑\",{\"1\":{\"305\":1}}],[\"一个类的行为或其算法可以在运行时更改\",{\"1\":{\"323\":1}}],[\"一个类代表另一个类的功能\",{\"1\":{\"313\":1}}],[\"一个类存在两个独立变化的维度\",{\"1\":{\"307\":1}}],[\"一个对象\",{\"1\":{\"320\":1,\"942\":1}}],[\"一个对象状态改变给其他对象通知的问题\",{\"1\":{\"320\":1}}],[\"一个对象需要提供给其他对象访问\",{\"1\":{\"306\":1}}],[\"一个对象需要在一个高代价的数据库操作之后被创建\",{\"1\":{\"306\":1}}],[\"一个对象多个修改者的场景\",{\"1\":{\"306\":1}}],[\"一个党只能有一个主席\",{\"1\":{\"305\":1}}],[\"一个全局使用的类频繁地创建与销毁\",{\"1\":{\"305\":1}}],[\"一个调用者想创建一个对象\",{\"1\":{\"286\":1,\"303\":1}}],[\"一个复杂对象\",{\"1\":{\"285\":1}}],[\"一个或多个\",{\"1\":{\"239\":1}}],[\"一个计算机系统与多个终端设备连接\",{\"1\":{\"124\":1}}],[\"一个设备不可靠\",{\"1\":{\"78\":1}}],[\"一个数的正常二进制\",{\"1\":{\"69\":1}}],[\"一个问题会有很多种解法\",{\"1\":{\"21\":1}}],[\"一条指令功能需要若干操作信号配合\",{\"1\":{\"36\":1}}],[\"产品线\",{\"1\":{\"405\":1}}],[\"产品\",{\"0\":{\"402\":1}}],[\"产品等级易扩展\",{\"1\":{\"304\":1}}],[\"产品族难扩展\",{\"1\":{\"304\":1}}],[\"产品族扩展非常困难\",{\"1\":{\"304\":1}}],[\"产品必须有共同点\",{\"1\":{\"285\":1}}],[\"产品的质量都是第一位的\",{\"1\":{\"21\":1}}],[\"产生一个对象需要非常繁琐的数据准备或访问权限\",{\"1\":{\"306\":1}}],[\"产生式\",{\"1\":{\"272\":1}}],[\"产生指令操作信号\",{\"1\":{\"36\":1}}],[\"产出物有数据流图\",{\"1\":{\"103\":1}}],[\"控制语句\",{\"0\":{\"934\":1}}],[\"控制复杂性\",{\"1\":{\"402\":1}}],[\"控制\",{\"0\":{\"267\":1},\"1\":{\"263\":1}}],[\"控制总线\",{\"1\":{\"60\":1}}],[\"控制部分和存储器组成\",{\"1\":{\"54\":1}}],[\"控制部分处理\",{\"1\":{\"42\":1}}],[\"控制整个cpu工作\",{\"1\":{\"37\":1}}],[\"控制指令执行过程中操作信号的出现时间\",{\"1\":{\"36\":1}}],[\"控制程序执行顺序\",{\"1\":{\"36\":1}}],[\"控制器或者特定的处理程序\",{\"1\":{\"568\":1}}],[\"控制器作用于模型和视图上\",{\"1\":{\"326\":1}}],[\"控制器\",{\"1\":{\"34\":1,\"37\":1,\"318\":1,\"326\":2}}],[\"程序广泛地用于处理非数值的数据\",{\"1\":{\"724\":1}}],[\"程序员可以在理解基础上实现它\",{\"1\":{\"366\":1}}],[\"程序员不重复写那些已经规范好的代码\",{\"1\":{\"324\":1}}],[\"程序违背了里氏替换原则\",{\"1\":{\"337\":1}}],[\"程序中断方式\",{\"1\":{\"59\":1}}],[\"程序\",{\"1\":{\"37\":1,\"120\":1,\"284\":1,\"501\":1}}],[\"程序计数器pc\",{\"1\":{\"37\":1}}],[\"程序控制方式\",{\"1\":{\"59\":1}}],[\"程序控制\",{\"1\":{\"36\":1}}],[\"程序设计语言\",{\"0\":{\"263\":1}}],[\"程序设计\",{\"0\":{\"20\":1}}],[\"功能区\",{\"1\":{\"612\":1}}],[\"功能详解\",{\"0\":{\"153\":1}}],[\"功能面板\",{\"1\":{\"133\":1,\"169\":1}}],[\"功能太弱\",{\"1\":{\"58\":1}}],[\"功能\",{\"0\":{\"36\":1,\"84\":1},\"1\":{\"612\":1}}],[\"硬件资源等\",{\"1\":{\"306\":1}}],[\"硬件到软件\",{\"1\":{\"130\":1}}],[\"硬件设备的管理\",{\"1\":{\"121\":1}}],[\"硬件\",{\"1\":{\"98\":1}}],[\"硬件自动完成映射\",{\"1\":{\"54\":1}}],[\"硬件系统核心\",{\"1\":{\"35\":1}}],[\"硬件组成\",{\"0\":{\"34\":1}}],[\"ul\",{\"1\":{\"843\":1,\"874\":1,\"923\":1}}],[\"uuuadc\",{\"1\":{\"582\":1}}],[\"utf\",{\"1\":{\"558\":1}}],[\"util\",{\"1\":{\"306\":1,\"308\":11,\"309\":2,\"312\":1,\"315\":2,\"318\":1,\"319\":2,\"320\":2,\"329\":3,\"331\":2,\"332\":2,\"333\":2}}],[\"ua\",{\"1\":{\"556\":2,\"880\":1}}],[\"ubuntu\",{\"1\":{\"444\":1}}],[\"url到页面展示的流程\",{\"1\":{\"694\":1}}],[\"url=url\",{\"1\":{\"556\":1}}],[\"urls\",{\"1\":{\"556\":3}}],[\"url\",{\"0\":{\"706\":1},\"1\":{\"425\":1,\"433\":1,\"458\":2,\"556\":3,\"627\":2,\"637\":5,\"893\":2}}],[\"up\",{\"1\":{\"332\":4}}],[\"updated\",{\"1\":{\"329\":2,\"333\":2}}],[\"updatestudent\",{\"1\":{\"329\":3,\"333\":2}}],[\"updateview\",{\"1\":{\"326\":3}}],[\"update\",{\"1\":{\"199\":1,\"205\":1,\"320\":5}}],[\"ui开发框架\",{\"1\":{\"589\":1}}],[\"ui\",{\"1\":{\"325\":1,\"327\":1,\"635\":2}}],[\"unmounted\",{\"1\":{\"867\":2}}],[\"underline\",{\"1\":{\"928\":1}}],[\"undefined\",{\"0\":{\"754\":1},\"1\":{\"704\":1,\"722\":1,\"724\":2,\"751\":1}}],[\"undo\",{\"1\":{\"315\":1}}],[\"uncomment\",{\"1\":{\"627\":2}}],[\"unzip\",{\"1\":{\"458\":1}}],[\"uname\",{\"1\":{\"445\":1}}],[\"uniapp\",{\"0\":{\"708\":1}}],[\"uninstall\",{\"1\":{\"571\":1}}],[\"union\",{\"1\":{\"418\":1}}],[\"unix\",{\"1\":{\"127\":1}}],[\"unit\",{\"0\":{\"35\":1}}],[\"umlet\",{\"1\":{\"302\":1}}],[\"uml是这个高潮的产物\",{\"1\":{\"302\":1}}],[\"uml\",{\"0\":{\"274\":1},\"1\":{\"302\":2}}],[\"us\",{\"1\":{\"582\":1}}],[\"ustc\",{\"1\":{\"545\":2}}],[\"usage=java\",{\"1\":{\"638\":1}}],[\"usages或使用快捷键alt\",{\"1\":{\"596\":1}}],[\"usage\",{\"1\":{\"288\":1}}],[\"using\",{\"1\":{\"210\":1,\"213\":1}}],[\"uses\",{\"1\":{\"927\":4,\"929\":1}}],[\"used\",{\"1\":{\"596\":1}}],[\"useragent\",{\"1\":{\"545\":1,\"556\":4}}],[\"users\",{\"1\":{\"441\":1,\"628\":1,\"638\":2,\"925\":1}}],[\"user\",{\"1\":{\"318\":12,\"330\":3,\"421\":3,\"556\":5,\"627\":1,\"880\":1}}],[\"use\",{\"1\":{\"17\":1,\"19\":1,\"208\":1,\"228\":2,\"229\":1,\"571\":1,\"736\":1,\"929\":1}}],[\"u\",{\"1\":{\"185\":2,\"487\":1,\"875\":1}}],[\"输出值\",{\"1\":{\"894\":1}}],[\"输出所有的学生\",{\"1\":{\"329\":1,\"333\":1}}],[\"输出技术\",{\"0\":{\"57\":1}}],[\"输出设备\",{\"1\":{\"34\":1}}],[\"输入模式下\",{\"1\":{\"487\":1}}],[\"输入模式\",{\"1\":{\"486\":1}}],[\"输入\",{\"0\":{\"57\":1},\"1\":{\"596\":1}}],[\"输入输出设备合称外设\",{\"1\":{\"34\":1}}],[\"输入设备\",{\"1\":{\"34\":1}}],[\"运行检查\",{\"1\":{\"739\":1}}],[\"运行任务\",{\"1\":{\"721\":1}}],[\"运行\",{\"1\":{\"554\":1}}],[\"运行需要cpu\",{\"1\":{\"502\":1}}],[\"运行维护\",{\"0\":{\"31\":1,\"382\":1}}],[\"运用共享技术有效地支持大量细粒度的对象\",{\"1\":{\"312\":1}}],[\"运算实现算法设计\",{\"1\":{\"363\":1}}],[\"运算符\",{\"0\":{\"927\":1},\"1\":{\"356\":1}}],[\"运算表达式计算\",{\"1\":{\"316\":1}}],[\"运算\",{\"0\":{\"266\":1}}],[\"运算结果或者源操作数\",{\"1\":{\"37\":1}}],[\"运算器\",{\"1\":{\"34\":1,\"37\":1}}],[\"风险管理\",{\"1\":{\"32\":1}}],[\"制定计划\",{\"1\":{\"32\":1}}],[\"白盒\",{\"1\":{\"29\":1}}],[\"测试\",{\"0\":{\"29\":1}}],[\"当我们不能给一个模块\",{\"1\":{\"942\":1}}],[\"当我们需要快速找到一个元素x\",{\"1\":{\"254\":1}}],[\"当嵌套iframe时的\",{\"1\":{\"917\":1}}],[\"当操作涉及不匹配的类型是否\",{\"1\":{\"749\":1}}],[\"当访问一个越界的元素\",{\"1\":{\"724\":1}}],[\"当你了解熟悉了\",{\"1\":{\"749\":1}}],[\"当你所要构建的用户界面不随任何状态信息的变化而变化时\",{\"1\":{\"632\":1}}],[\"当你输入域名的时候给你引导向设置在dns的a记录所对应的服务器\",{\"1\":{\"117\":1}}],[\"当前的\",{\"1\":{\"612\":1}}],[\"当需要对请求进行修改或者对响应进行修改时\",{\"1\":{\"568\":1}}],[\"当需要对请求进行验证和授权时\",{\"1\":{\"568\":1}}],[\"当需要在多个路由之间共享一些通用逻辑时\",{\"1\":{\"568\":1}}],[\"当需要在请求到达路由处理程序之前或之后执行一些通用逻辑时\",{\"1\":{\"568\":1}}],[\"当需要在路由处理程序之前进行验证和授权操作时\",{\"1\":{\"568\":1}}],[\"当需要根据验证结果决定是否允许继续处理请求时\",{\"1\":{\"568\":1}}],[\"当请求到达时\",{\"1\":{\"568\":1}}],[\"当有更高优先级的进程到来时如何分配cpu\",{\"1\":{\"506\":1}}],[\"当有特殊思路时应该写上注释\",{\"1\":{\"28\":1}}],[\"当出现bash$时就说明连接成功\",{\"1\":{\"445\":1}}],[\"当在windows环境下使用git进行版本控制时\",{\"1\":{\"437\":1}}],[\"当应用的需求改变时\",{\"1\":{\"336\":1}}],[\"当再次请求相同的服务时\",{\"1\":{\"332\":1}}],[\"当更新一个组合实体时\",{\"1\":{\"328\":1}}],[\"当对象间存在一对多关系时\",{\"0\":{\"320\":1}}],[\"当被请求时\",{\"1\":{\"313\":1}}],[\"当把外蕴对象从对象中剔除出来时\",{\"1\":{\"312\":1}}],[\"当他变成\",{\"1\":{\"310\":1}}],[\"当要实例化的类是在运行时刻指定时\",{\"1\":{\"306\":1}}],[\"当一个进程资源图中所有的进程都是阻塞节点\",{\"1\":{\"504\":1}}],[\"当一个对象的状态发生改变时\",{\"1\":{\"320\":1}}],[\"当一个对象被修改时\",{\"1\":{\"320\":1}}],[\"当一个类的实例只能有几个不同状态组合中的一种时\",{\"1\":{\"306\":1}}],[\"当一个系统应该独立于它的产品创建\",{\"1\":{\"306\":1}}],[\"当一个产品族中的多个对象被设计成一起工作时\",{\"1\":{\"304\":1}}],[\"当直接创建对象的代价比较大时\",{\"1\":{\"306\":1}}],[\"当您想控制实例数目\",{\"1\":{\"305\":1}}],[\"当用户不知道最后系统采用哪一类数据库\",{\"1\":{\"286\":1,\"303\":1}}],[\"当i\",{\"1\":{\"249\":1}}],[\"当软件的规模和复杂大到一定的程度\",{\"1\":{\"4\":1}}],[\"也不会占据文档空间\",{\"1\":{\"917\":1}}],[\"也不希望在增加新操作时修改这些类\",{\"1\":{\"325\":1}}],[\"也称之为层标记\",{\"1\":{\"874\":1}}],[\"也称处理机管理\",{\"1\":{\"500\":1}}],[\"也有精华的地方\",{\"1\":{\"670\":1}}],[\"也有可能在其他位置\",{\"1\":{\"627\":1}}],[\"也都是继承自object\",{\"1\":{\"647\":1}}],[\"也包括一些复制\",{\"1\":{\"486\":1}}],[\"也是一种受限制的线性表\",{\"1\":{\"357\":1}}],[\"也能管理依赖对象的生命周期\",{\"1\":{\"328\":1}}],[\"也很少用\",{\"1\":{\"305\":1}}],[\"也可用于软件开发的层面\",{\"1\":{\"273\":1}}],[\"也可以用于格式化表\",{\"1\":{\"874\":1}}],[\"也可以用于项目的快速集成与部署\",{\"1\":{\"430\":1}}],[\"也可以用于消除\",{\"1\":{\"321\":1}}],[\"也可以用链表\",{\"1\":{\"355\":1}}],[\"也可以是基于桌面的应用程序\",{\"1\":{\"330\":1}}],[\"也可以是\",{\"1\":{\"329\":1}}],[\"也可以考虑使用命令模式\",{\"1\":{\"315\":1}}],[\"也可以去代售点\",{\"1\":{\"313\":1}}],[\"也可以n端中添加1端实体的主键\",{\"1\":{\"95\":1}}],[\"也可以单独转换为一个关系模式\",{\"1\":{\"95\":1}}],[\"也就是规定哪些标记可以用\",{\"1\":{\"871\":1}}],[\"也就是基本算法设计方法\",{\"1\":{\"363\":1}}],[\"也就是说\",{\"1\":{\"321\":1}}],[\"也就是0101\",{\"1\":{\"259\":1}}],[\"也就是产生一个蒙板\",{\"1\":{\"178\":1}}],[\"也就是新生成\",{\"1\":{\"174\":1}}],[\"也就是上一层的内容被限制在下一层的内容范围之内\",{\"1\":{\"160\":1}}],[\"也就是运算器和控制器中的\",{\"1\":{\"37\":1}}],[\"也就是尽量写给别人看的\",{\"1\":{\"28\":1}}],[\"也认识到基础和知识完备性的重要\",{\"1\":{\"1\":1}}],[\"阅读等等获得的\",{\"1\":{\"28\":1}}],[\"需等待\",{\"1\":{\"506\":1}}],[\"需重启后生效\",{\"1\":{\"174\":1}}],[\"需求收集\",{\"0\":{\"406\":1}}],[\"需求收集与分析\",{\"0\":{\"23\":1}}],[\"需求业务\",{\"0\":{\"405\":1}}],[\"需求说明书\",{\"1\":{\"103\":1}}],[\"需求分析\",{\"0\":{\"103\":1,\"407\":1}}],[\"需要重新去挖掘问题的本质\",{\"1\":{\"942\":1}}],[\"需要用到\",{\"1\":{\"925\":1}}],[\"需要用工程化思维去进行软件开发\",{\"1\":{\"21\":1}}],[\"需要主动将\",{\"1\":{\"867\":1}}],[\"需要处理事件绑定\",{\"1\":{\"864\":1}}],[\"需要更新所有属性\",{\"1\":{\"864\":1}}],[\"需要基础核心知识扎实\",{\"1\":{\"815\":1}}],[\"需要高性能和更复杂功能的场景\",{\"1\":{\"709\":1}}],[\"需要经历5个阶段\",{\"1\":{\"671\":1}}],[\"需要经验\",{\"1\":{\"28\":1}}],[\"需要连接外网\",{\"1\":{\"637\":1}}],[\"需要选择使用statelesswidget\",{\"1\":{\"632\":1}}],[\"需要管理员权限\",{\"1\":{\"571\":1}}],[\"需要对一个对象结构中的对象进行很多不同的并且不相关的操作\",{\"1\":{\"325\":2}}],[\"需要保存\",{\"1\":{\"319\":1}}],[\"需要为聚合对象提供多种遍历方式\",{\"1\":{\"317\":1}}],[\"需要缓冲池的场景\",{\"1\":{\"312\":1}}],[\"需要分离出外部状态和内部状态\",{\"1\":{\"312\":1}}],[\"需要三个协议\",{\"1\":{\"286\":1,\"303\":1}}],[\"需要生成的对象内部属性本身相互依赖\",{\"1\":{\"285\":1}}],[\"需要生成的对象具有复杂的内部结构\",{\"1\":{\"285\":1}}],[\"需要整体把控\",{\"1\":{\"21\":1}}],[\"需要判断和取舍的思维\",{\"1\":{\"4\":1}}],[\"需要架构指导\",{\"1\":{\"4\":1}}],[\"有序列表标记\",{\"1\":{\"874\":1}}],[\"有时还要调整设计和重构代码\",{\"1\":{\"942\":1}}],[\"有时会出现\",{\"1\":{\"736\":1}}],[\"有时候需要关注一下\",{\"1\":{\"861\":1}}],[\"有时候需要重新focus\",{\"1\":{\"174\":1}}],[\"有时候放久了会自动黑屏\",{\"0\":{\"462\":1}}],[\"有时候yum在makecache时一直在尝试其他镜像\",{\"1\":{\"447\":1}}],[\"有时候面临着\",{\"1\":{\"285\":1}}],[\"有规矩将剑客约束了起来\",{\"1\":{\"719\":1}}],[\"有让人吐槽\",{\"1\":{\"670\":1}}],[\"有复制的功能\",{\"1\":{\"487\":1}}],[\"有定义数据结构就是adt的物理实现\",{\"1\":{\"366\":1}}],[\"有多个子类共有的方法\",{\"1\":{\"320\":1,\"324\":1}}],[\"有多个对象可以处理同一个请求\",{\"1\":{\"314\":1}}],[\"有碍于除错\",{\"1\":{\"314\":1}}],[\"有些人会认为\",{\"1\":{\"920\":1}}],[\"有些代理模式的实现非常复杂\",{\"1\":{\"313\":1}}],[\"有些对象由于某些原因\",{\"1\":{\"313\":1}}],[\"有可能会造成内存溢出\",{\"1\":{\"312\":1}}],[\"有两点需求\",{\"1\":{\"288\":1}}],[\"有动机地修改一个正常运行的系统的接口\",{\"1\":{\"284\":1}}],[\"有\",{\"1\":{\"259\":1}}],[\"有输出\",{\"1\":{\"239\":1}}],[\"有输入\",{\"1\":{\"239\":1}}],[\"有穷性\",{\"1\":{\"239\":1}}],[\"有充分明确的目标\",{\"1\":{\"238\":1}}],[\"有一个数据域和一个指针域\",{\"1\":{\"354\":1}}],[\"有一个约定的生成多项式\",{\"1\":{\"73\":1}}],[\"有一些通用的方法\",{\"1\":{\"324\":1}}],[\"有一点需要注意的地方就是复杂对象适合使用工厂模式\",{\"1\":{\"286\":1,\"303\":1}}],[\"有一定的业务知识知道业务背后的逻辑很重要\",{\"1\":{\"22\":1}}],[\"有效组织和管理计算机的硬件和软件资源\",{\"1\":{\"119\":1}}],[\"有效数值\",{\"1\":{\"67\":2}}],[\"有效的项目管理\",{\"0\":{\"32\":1}}],[\"有意义的好的价值\",{\"1\":{\"22\":1}}],[\"领域专家\",{\"1\":{\"401\":1}}],[\"领域业务知识\",{\"1\":{\"22\":1}}],[\"领域知识\",{\"0\":{\"22\":1}}],[\"英语能力\",{\"1\":{\"21\":1}}],[\"文本标记\",{\"0\":{\"875\":1}}],[\"文本节点\",{\"1\":{\"864\":1}}],[\"文章列表\",{\"1\":{\"610\":1,\"612\":1}}],[\"文法与有限自动机\",{\"0\":{\"262\":1}}],[\"文字上标字体标记\",{\"1\":{\"875\":1}}],[\"文字下标字体标记\",{\"1\":{\"875\":1}}],[\"文字\",{\"1\":{\"613\":1}}],[\"文字工具t\",{\"0\":{\"181\":1}}],[\"文字图层\",{\"1\":{\"157\":1}}],[\"文件格式为\",{\"1\":{\"920\":2}}],[\"文件格式\",{\"0\":{\"907\":1}}],[\"文件及文件流处理\",{\"1\":{\"576\":1}}],[\"文件目录\",{\"0\":{\"498\":1}}],[\"文件的结构与组织\",{\"0\":{\"497\":1}}],[\"文件与文件系统\",{\"0\":{\"496\":1}}],[\"文件管理\",{\"0\":{\"495\":1,\"513\":1}}],[\"文件名\",{\"1\":{\"445\":3}}],[\"文件分割完毕\",{\"1\":{\"418\":1}}],[\"文件会被存储到选定路径的上一层\",{\"1\":{\"418\":1}}],[\"文件夹的管理\",{\"1\":{\"309\":1}}],[\"文件存储\",{\"1\":{\"121\":1}}],[\"文件\",{\"1\":{\"121\":1,\"309\":1,\"364\":1,\"450\":1,\"558\":2,\"628\":1}}],[\"文档注释\",{\"1\":{\"873\":1}}],[\"文档类型声明\",{\"0\":{\"871\":1}}],[\"文档窗口\",{\"1\":{\"133\":1,\"169\":1}}],[\"文档良好且可维护的\",{\"1\":{\"28\":1}}],[\"文档能力\",{\"0\":{\"27\":1},\"1\":{\"21\":1}}],[\"文心一言\",{\"0\":{\"12\":1}}],[\"价值导向\",{\"0\":{\"22\":1}}],[\"价值\",{\"1\":{\"21\":1}}],[\"业务对象\",{\"1\":{\"333\":1}}],[\"业务服务接口\",{\"1\":{\"327\":1}}],[\"业务服务\",{\"1\":{\"327\":1}}],[\"业务代表\",{\"1\":{\"327\":1}}],[\"业务代表模式\",{\"0\":{\"327\":1},\"1\":{\"282\":1}}],[\"业务\",{\"1\":{\"21\":1}}],[\"业务复杂度\",{\"1\":{\"21\":1}}],[\"业务上\",{\"1\":{\"1\":1}}],[\"如font\",{\"1\":{\"845\":1}}],[\"如bom\",{\"1\":{\"760\":1}}],[\"如异步类型\",{\"1\":{\"720\":1}}],[\"如number类型等\",{\"1\":{\"670\":1}}],[\"如null的类型等\",{\"1\":{\"670\":1}}],[\"如同建造中的土木工程\",{\"1\":{\"657\":1}}],[\"如脚手架\",{\"1\":{\"657\":1}}],[\"如只需对git工程中增量文件\",{\"1\":{\"596\":1}}],[\"如自行车与汽车\",{\"1\":{\"505\":1}}],[\"如上诉所说的仓库\",{\"1\":{\"505\":1}}],[\"如生产者与消费者共用一个仓库时\",{\"1\":{\"505\":1}}],[\"如何处理es6的兼容问题\",{\"0\":{\"777\":1}}],[\"如何查看各浏览器\",{\"0\":{\"776\":1}}],[\"如何演变到现在的es\",{\"0\":{\"775\":1}}],[\"如何判断null\",{\"1\":{\"753\":1}}],[\"如何找到某一本书\",{\"1\":{\"363\":1}}],[\"如何组织数据跟数据的规模以及存储的地方是有关系\",{\"1\":{\"363\":1}}],[\"如何将\",{\"1\":{\"315\":1}}],[\"如何解决\",{\"1\":{\"284\":1,\"285\":1,\"286\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1}}],[\"如树形菜单\",{\"1\":{\"309\":1}}],[\"如下所示\",{\"1\":{\"305\":1}}],[\"如果未安装gcf\",{\"1\":{\"880\":1}}],[\"如果未找到匹配的对象\",{\"1\":{\"312\":1}}],[\"如果根组件没有模板\",{\"1\":{\"867\":2}}],[\"如果是同类型节点则可以直接复用老节点的内容\",{\"1\":{\"864\":1}}],[\"如果高度为奇数的文字可能会存在半个像素的计算量\",{\"1\":{\"845\":1}}],[\"如果不一样就需要配置可选参数\",{\"1\":{\"736\":1}}],[\"如果不用恰当的模式\",{\"1\":{\"323\":1}}],[\"如果返回的是html\",{\"1\":{\"706\":1}}],[\"如果你需要更新kotlin版本\",{\"1\":{\"639\":1}}],[\"如果验证失败\",{\"1\":{\"568\":1}}],[\"如果使用不当将导致程序结构和代码的混乱\",{\"1\":{\"321\":1}}],[\"如果使用工厂模式\",{\"1\":{\"286\":1,\"303\":1}}],[\"如果顺序执行\",{\"1\":{\"320\":1}}],[\"如果在一个系统里面有许多类\",{\"1\":{\"323\":1}}],[\"如果在观察者和观察目标之间有循环依赖的话\",{\"1\":{\"320\":1}}],[\"如果在内存中有\",{\"1\":{\"312\":1}}],[\"如果类的成员变量过多\",{\"1\":{\"319\":1}}],[\"如果一种特定类型的问题发生的频率足够高\",{\"1\":{\"316\":1}}],[\"如果一个系统的策略多于四个\",{\"1\":{\"323\":1}}],[\"如果一个系统需要在构件的抽象化角色和具体化角色之间增加更多的灵活性\",{\"1\":{\"307\":1}}],[\"如果一个对象有很多的行为\",{\"1\":{\"323\":1}}],[\"如果一个对象不能处理该请求\",{\"1\":{\"314\":1}}],[\"如果一个被观察者对象有很多的直接和间接的观察者的话\",{\"1\":{\"320\":1}}],[\"如果没达到条件则向下传递\",{\"1\":{\"314\":1}}],[\"如果没有则创建一个字符串保存在字符串缓存池里面\",{\"1\":{\"312\":1}}],[\"如果没有则创建\",{\"1\":{\"305\":1}}],[\"如果要改东西很麻烦\",{\"1\":{\"311\":1}}],[\"如果有相同的业务请求\",{\"1\":{\"312\":1}}],[\"如果有提供接待人员\",{\"1\":{\"311\":1}}],[\"如果有其他特殊的需求\",{\"1\":{\"305\":1}}],[\"如果有则返回\",{\"1\":{\"305\":1,\"312\":1}}],[\"如果涉及到反序列化创建对象时\",{\"1\":{\"305\":1}}],[\"如果实例化\",{\"1\":{\"305\":1}}],[\"如果想增加一个产品\",{\"1\":{\"286\":1,\"303\":1}}],[\"如果恰巧\",{\"1\":{\"4\":1}}],[\"如内部变化复杂\",{\"1\":{\"285\":1}}],[\"如画笔工具就不等你用在矢量图上\",{\"1\":{\"154\":1}}],[\"如虚拟内存\",{\"1\":{\"120\":1}}],[\"如mysql\",{\"1\":{\"99\":1}}],[\"如\",{\"1\":{\"63\":1,\"64\":2,\"71\":1,\"613\":4,\"720\":4}}],[\"如今各种软件越来越复杂\",{\"1\":{\"21\":1}}],[\"因为它减少了不必要的\",{\"1\":{\"864\":1}}],[\"因为它们是由\",{\"1\":{\"328\":1}}],[\"因为占用很多\",{\"1\":{\"627\":1}}],[\"因为包太大clone失败问题\",{\"0\":{\"424\":1}}],[\"因为不能确保\",{\"1\":{\"305\":1}}],[\"因为\",{\"1\":{\"305\":1}}],[\"因为没有加锁synchronized\",{\"1\":{\"305\":1}}],[\"因为架构是一种能力\",{\"1\":{\"4\":1}}],[\"因此一切变量的值都是类的实例\",{\"1\":{\"647\":1}}],[\"因此有些类型的代理模式可能会造成请求的处理速度变慢\",{\"1\":{\"313\":1}}],[\"因此如果不是很有必要\",{\"1\":{\"284\":1}}],[\"因此\",{\"1\":{\"21\":1,\"720\":1,\"942\":1}}],[\"在<head><\",{\"1\":{\"873\":1}}],[\"在vue\",{\"1\":{\"867\":1}}],[\"在同一元素上使用的\",{\"1\":{\"867\":1}}],[\"在同一个聚合上可以有多个遍历\",{\"1\":{\"317\":1}}],[\"在开发时执行的顺序按照子组件在template中出现的顺序\",{\"1\":{\"858\":1}}],[\"在开发过程中\",{\"1\":{\"437\":1}}],[\"在使用了transform的位置\",{\"1\":{\"845\":1}}],[\"在使用组合模式时\",{\"1\":{\"309\":1}}],[\"在模糊字体一级级往外找\",{\"1\":{\"845\":1}}],[\"在div进行css3动画时\",{\"0\":{\"845\":1}}],[\"在线转换\",{\"1\":{\"777\":1}}],[\"在对现有代码进行改写的时候\",{\"1\":{\"724\":1}}],[\"在其它程序设计语言中\",{\"1\":{\"724\":1}}],[\"在执行阶段确定所有变量的类型\",{\"1\":{\"720\":1}}],[\"在执行过程中\",{\"1\":{\"704\":1}}],[\"在编译阶段确定所有变量的类型\",{\"1\":{\"720\":1}}],[\"在编码中增加1位校验位来使编码中1的个数为奇数或者偶数\",{\"1\":{\"72\":1}}],[\"在强大性能设备上会以多进程的方式运行基础服务\",{\"1\":{\"693\":1}}],[\"在菜单中选择declarations\",{\"1\":{\"596\":1}}],[\"在菜单中选择getter\",{\"1\":{\"596\":1}}],[\"在类中使用快捷键alt+insert\",{\"1\":{\"596\":1}}],[\"在类装载时就实例化\",{\"1\":{\"305\":1}}],[\"在弹出的菜单中选择go\",{\"1\":{\"596\":1}}],[\"在editor\",{\"1\":{\"596\":1}}],[\"在nestjs中\",{\"1\":{\"568\":3}}],[\"在pipelines\",{\"1\":{\"556\":1}}],[\"在当前行之前插入新的一行\",{\"1\":{\"487\":1}}],[\"在当前行下面插入新的一行\",{\"1\":{\"487\":1}}],[\"在行尾追加插入\",{\"1\":{\"487\":1}}],[\"在行为受状态约束的时候使用状态模式\",{\"1\":{\"321\":1}}],[\"在光标末尾追加插入\",{\"1\":{\"487\":1}}],[\"在档案中查找字符串\",{\"1\":{\"445\":1}}],[\"在项目中用命令行能够正常使用eslint\",{\"1\":{\"436\":1}}],[\"在最佳实践中前端项目总是会同时使用这两个插件\",{\"1\":{\"436\":1}}],[\"在软件复用时\",{\"1\":{\"342\":1}}],[\"在软件系统中\",{\"1\":{\"315\":1}}],[\"在程序需要进行拓展的时候\",{\"1\":{\"336\":1}}],[\"在首次请求某个服务时\",{\"1\":{\"332\":1}}],[\"在业务层中我们有以下实体\",{\"1\":{\"327\":1}}],[\"在数据变化时更新控制器\",{\"1\":{\"326\":1}}],[\"在数据基础类里面有一个方法接受访问者\",{\"1\":{\"325\":1}}],[\"在被访问的类里面加一个对外提供接待访问者的接口\",{\"1\":{\"325\":1}}],[\"在造房子的时候\",{\"1\":{\"324\":1}}],[\"在策略模式中\",{\"1\":{\"323\":1}}],[\"在空对象模式中\",{\"1\":{\"322\":1}}],[\"在枚举状态之前需要确定状态种类\",{\"1\":{\"321\":1}}],[\"在状态模式中\",{\"1\":{\"321\":1}}],[\"在抽象类实现\",{\"1\":{\"324\":1}}],[\"在抽象类里有一个\",{\"1\":{\"320\":1}}],[\"在抽象工厂模式中\",{\"1\":{\"304\":1}}],[\"在迭代器模式中\",{\"1\":{\"317\":1}}],[\"在某些场合\",{\"1\":{\"315\":1}}],[\"在处理消息的时候以过滤很多道\",{\"1\":{\"314\":1}}],[\"在这种情况下\",{\"1\":{\"315\":1}}],[\"在这种模式中\",{\"1\":{\"314\":1}}],[\"在这个行业里\",{\"1\":{\"21\":1}}],[\"在面向对象系统中\",{\"1\":{\"313\":1}}],[\"在直接访问对象时带来的问题\",{\"1\":{\"313\":1}}],[\"在代理模式中\",{\"1\":{\"313\":1}}],[\"在有多种算法相似的情况下\",{\"1\":{\"323\":1}}],[\"在有多种可能会变化的情况下\",{\"1\":{\"307\":1}}],[\"在有大量对象时\",{\"1\":{\"312\":1}}],[\"在层次化结构中\",{\"1\":{\"311\":1}}],[\"在客户端和复杂系统之间再加一层\",{\"1\":{\"311\":1}}],[\"在挂在墙上之前\",{\"1\":{\"310\":1}}],[\"在不同的存储结构中\",{\"1\":{\"363\":1}}],[\"在不修改软件实体的源代码或者二进制代码的前提下\",{\"1\":{\"336\":1}}],[\"在不破坏封装性的前提下\",{\"1\":{\"319\":1}}],[\"在不明确指定接收者的情况下\",{\"1\":{\"314\":1}}],[\"在不想增加很多子类的情况下扩展类\",{\"1\":{\"310\":1}}],[\"在不增加实体的需求下\",{\"1\":{\"284\":1}}],[\"在该类上应用标准\",{\"1\":{\"308\":1}}],[\"在实际项目中\",{\"1\":{\"306\":1}}],[\"在实际工作中\",{\"1\":{\"305\":1}}],[\"在运行期建立和删除原型\",{\"1\":{\"306\":1}}],[\"在需要的时候更新数据库\",{\"1\":{\"306\":1}}],[\"在下一个请求时返回它的克隆\",{\"1\":{\"306\":1}}],[\"在单例模式中大多数都是调用\",{\"1\":{\"305\":1}}],[\"在多线程不能正常工作\",{\"1\":{\"305\":1}}],[\"在内存里只有一个实例\",{\"1\":{\"305\":1}}],[\"在输出的时候就要处理不能两台打印机打印同一个文件\",{\"1\":{\"305\":1}}],[\"在操作一个文件的时候\",{\"1\":{\"305\":1}}],[\"在您的家中\",{\"1\":{\"304\":1}}],[\"在工厂模式中\",{\"1\":{\"303\":1}}],[\"在任何需要生成复杂对象的地方\",{\"1\":{\"286\":1,\"303\":1}}],[\"在一定的时间和预设范围内有效地利用人力\",{\"1\":{\"400\":1}}],[\"在一定程度上增加了系统的复杂度\",{\"1\":{\"286\":1,\"303\":1}}],[\"在一个list中\",{\"1\":{\"927\":1}}],[\"在一个函数定义之前使用它\",{\"1\":{\"704\":1}}],[\"在一个变量定义之前使用它\",{\"1\":{\"704\":1}}],[\"在一个工厂里聚合多个同类产品\",{\"1\":{\"304\":1}}],[\"在一个产品族里面\",{\"1\":{\"304\":1}}],[\"在一个总线周期结束后\",{\"1\":{\"59\":1}}],[\"在\",{\"1\":{\"284\":1,\"306\":2,\"309\":1,\"314\":2,\"447\":1,\"583\":1,\"867\":1}}],[\"在里面包容一个虎对象\",{\"1\":{\"284\":1}}],[\"在创建对象的同时隐藏创建逻辑的方式\",{\"1\":{\"279\":1}}],[\"在计算机能处理的范围之内\",{\"1\":{\"238\":1}}],[\"在右上角选择从图层新建组\",{\"1\":{\"174\":1}}],[\"在cc里面不用解锁就可以拖动\",{\"1\":{\"174\":1}}],[\"在原始信息位后加多项式最高次幂个0\",{\"1\":{\"73\":1}}],[\"在两个编码中\",{\"1\":{\"71\":1}}],[\"在关注技术和流程的同时\",{\"1\":{\"21\":1}}],[\"在此之前\",{\"1\":{\"15\":1}}],[\"bfc\",{\"1\":{\"848\":1}}],[\"bbb\",{\"1\":{\"487\":3,\"556\":1}}],[\"b=\",{\"1\":{\"478\":1}}],[\"btn\",{\"1\":{\"612\":1}}],[\"bt\",{\"1\":{\"449\":1}}],[\"bold\",{\"1\":{\"923\":4,\"927\":1,\"928\":2}}],[\"box\",{\"1\":{\"843\":2,\"925\":1}}],[\"bool\",{\"1\":{\"556\":1,\"648\":1}}],[\"boolean属性必须写值\",{\"1\":{\"906\":1}}],[\"boolean属性可省略值\",{\"1\":{\"906\":2}}],[\"boolean\",{\"0\":{\"755\":1},\"1\":{\"316\":4,\"317\":2,\"322\":3,\"330\":1,\"332\":1,\"722\":1,\"724\":1,\"751\":1}}],[\"body>\",{\"1\":{\"880\":1}}],[\"body\",{\"1\":{\"556\":1,\"843\":1,\"873\":1,\"920\":1,\"925\":1,\"928\":1,\"929\":1}}],[\"bottom\",{\"1\":{\"487\":1,\"613\":2}}],[\"bought\",{\"1\":{\"315\":2}}],[\"border的属性值作为变量值\",{\"1\":{\"922\":1}}],[\"border\",{\"1\":{\"310\":9,\"843\":1,\"880\":1,\"922\":1,\"925\":6,\"926\":4,\"928\":1}}],[\"bob\",{\"1\":{\"309\":2,\"322\":1}}],[\"bobby\",{\"1\":{\"308\":4}}],[\"blank\",{\"1\":{\"487\":2}}],[\"black\",{\"1\":{\"312\":3,\"922\":1,\"928\":2,\"929\":1}}],[\"block\",{\"0\":{\"910\":1,\"911\":1},\"1\":{\"923\":2}}],[\"bloch\",{\"1\":{\"305\":1}}],[\"blog\",{\"1\":{\"208\":1}}],[\"blue\",{\"1\":{\"304\":9,\"312\":7,\"724\":2}}],[\"big\",{\"1\":{\"875\":1}}],[\"bigint\",{\"0\":{\"757\":1},\"1\":{\"749\":1,\"751\":1}}],[\"binnum\",{\"1\":{\"724\":1}}],[\"bind=\",{\"1\":{\"867\":1}}],[\"bind\",{\"1\":{\"672\":1}}],[\"bin\",{\"1\":{\"458\":2,\"465\":1,\"579\":2,\"627\":1,\"638\":1}}],[\"binaryobserver\",{\"1\":{\"320\":4}}],[\"binary\",{\"1\":{\"63\":1,\"320\":3}}],[\"birth\",{\"1\":{\"288\":1}}],[\"br\",{\"1\":{\"874\":1}}],[\"brandan\",{\"1\":{\"774\":1}}],[\"branch\",{\"1\":{\"421\":2}}],[\"bruno\",{\"1\":{\"635\":2}}],[\"brew安装switchhosts\",{\"0\":{\"467\":1}}],[\"brew安装nvm\",{\"0\":{\"466\":1}}],[\"brew\",{\"1\":{\"466\":1,\"467\":1}}],[\"breadcrumb\",{\"1\":{\"199\":1,\"205\":1}}],[\"broker\",{\"1\":{\"315\":9}}],[\"browser\",{\"1\":{\"288\":1}}],[\"bridgepatterndemo\",{\"1\":{\"307\":2}}],[\"bridge\",{\"0\":{\"307\":1},\"1\":{\"280\":1,\"307\":1,\"396\":1}}],[\"bnf\",{\"1\":{\"272\":1}}],[\"bx\",{\"1\":{\"259\":1}}],[\"bestcfipas镜像服务\",{\"1\":{\"582\":1}}],[\"besides\",{\"1\":{\"228\":1}}],[\"beginning\",{\"1\":{\"487\":1}}],[\"better\",{\"1\":{\"484\":1}}],[\"beans\",{\"1\":{\"328\":1}}],[\"bean\",{\"1\":{\"328\":4}}],[\"been\",{\"1\":{\"288\":1}}],[\"being\",{\"1\":{\"288\":1}}],[\"behavior\",{\"1\":{\"288\":1}}],[\"beforeunmount\",{\"1\":{\"867\":2}}],[\"beforedestroy\",{\"1\":{\"867\":2}}],[\"before\",{\"1\":{\"225\":1,\"925\":1,\"933\":1}}],[\"be\",{\"1\":{\"211\":1,\"226\":1,\"670\":2,\"724\":1}}],[\"but\",{\"1\":{\"724\":1}}],[\"button\",{\"1\":{\"199\":1,\"205\":3,\"309\":1,\"893\":1}}],[\"buildscript\",{\"1\":{\"639\":1}}],[\"build\",{\"1\":{\"579\":1,\"627\":1,\"637\":1,\"639\":1}}],[\"builder\",{\"1\":{\"279\":2}}],[\"buystockorder\",{\"1\":{\"315\":2}}],[\"buystock\",{\"1\":{\"315\":5}}],[\"buy\",{\"1\":{\"315\":2}}],[\"businessdelegatepatterndemo\",{\"1\":{\"327\":2}}],[\"businessdelegate\",{\"1\":{\"327\":11}}],[\"businesslookup\",{\"1\":{\"327\":4}}],[\"businessservice\",{\"1\":{\"327\":15}}],[\"business\",{\"0\":{\"327\":1},\"1\":{\"282\":1,\"327\":2,\"333\":1}}],[\"bullet\",{\"1\":{\"21\":1}}],[\"babelrc\",{\"1\":{\"777\":1}}],[\"banner\",{\"1\":{\"610\":1,\"612\":1}}],[\"baidubce\",{\"1\":{\"583\":1}}],[\"bat格式结尾\",{\"1\":{\"478\":1}}],[\"bak\",{\"1\":{\"458\":1}}],[\"base\",{\"1\":{\"447\":4,\"613\":1,\"627\":1,\"638\":1}}],[\"bash\",{\"1\":{\"431\":1,\"466\":3,\"579\":1}}],[\"basicsingleton\",{\"1\":{\"288\":1}}],[\"basic\",{\"0\":{\"949\":1},\"1\":{\"252\":4},\"2\":{\"682\":1,\"765\":1,\"888\":1}}],[\"basically\",{\"1\":{\"208\":1}}],[\"basis\",{\"1\":{\"1\":1,\"912\":1}}],[\"baz\",{\"0\":{\"527\":1},\"1\":{\"234\":1,\"526\":1}}],[\"bar\",{\"0\":{\"234\":1,\"524\":1},\"1\":{\"525\":1,\"613\":2,\"780\":2,\"933\":1}}],[\"background\",{\"1\":{\"843\":4,\"927\":1}}],[\"backup=133344444\",{\"1\":{\"431\":1}}],[\"backups\",{\"1\":{\"431\":1}}],[\"backup\",{\"1\":{\"431\":2,\"447\":1}}],[\"back\",{\"1\":{\"199\":1,\"205\":1,\"487\":2}}],[\"bypass\",{\"1\":{\"481\":1}}],[\"by\",{\"1\":{\"199\":1,\"211\":1,\"213\":1,\"327\":4,\"596\":1,\"929\":2}}],[\"b\",{\"1\":{\"63\":1,\"185\":1,\"219\":1,\"284\":1,\"366\":1,\"421\":3,\"422\":1,\"478\":2,\"487\":5,\"727\":1,\"736\":1,\"780\":2,\"875\":1,\"880\":1}}],[\"软件管理\",{\"1\":{\"451\":1}}],[\"软件的结构化开发方法中包括结构化程序设计\",{\"1\":{\"372\":1}}],[\"软件实体应当对扩展开放\",{\"1\":{\"336\":1}}],[\"软件和人员组成\",{\"1\":{\"98\":1}}],[\"软件是用来创造价值的\",{\"1\":{\"22\":1}}],[\"软件通常分为系统软件和应用软件\",{\"1\":{\"21\":1}}],[\"软件开发\",{\"0\":{\"21\":1}}],[\"++\",{\"1\":{\"920\":2}}],[\"++i\",{\"1\":{\"312\":1}}],[\"+=\",{\"1\":{\"736\":1}}],[\"+回车键\",{\"1\":{\"596\":1}}],[\"+f7\",{\"1\":{\"596\":1}}],[\"+servicename+\",{\"1\":{\"332\":1}}],[\"+student\",{\"1\":{\"329\":4,\"333\":4}}],[\"+name+\",{\"1\":{\"315\":2}}],[\"+x+\",{\"1\":{\"307\":2}}],[\"+1\",{\"1\":{\"69\":1}}],[\"+\",{\"0\":{\"769\":1},\"1\":{\"20\":2,\"54\":1,\"64\":2,\"135\":4,\"143\":7,\"154\":1,\"155\":7,\"174\":38,\"175\":1,\"177\":2,\"184\":4,\"185\":7,\"218\":1,\"229\":1,\"288\":3,\"306\":3,\"307\":8,\"308\":6,\"309\":5,\"312\":8,\"313\":2,\"314\":3,\"315\":4,\"316\":2,\"317\":1,\"318\":4,\"319\":4,\"320\":3,\"323\":6,\"326\":2,\"328\":1,\"329\":8,\"330\":1,\"331\":3,\"333\":8,\"366\":1,\"418\":4,\"487\":3,\"505\":1,\"556\":2,\"558\":4,\"591\":1,\"596\":4,\"724\":1,\"736\":4,\"738\":1,\"927\":4,\"930\":1,\"933\":2}}],[\"=path\",{\"1\":{\"418\":1}}],[\"=false\",{\"1\":{\"418\":3}}],[\"=xlnone\",{\"1\":{\"418\":1}}],[\"=xlpasteallusingsourcetheme\",{\"1\":{\"418\":1}}],[\"=xlprevious\",{\"1\":{\"418\":1}}],[\"=xlformulas\",{\"1\":{\"418\":1}}],[\"=8\",{\"1\":{\"418\":2}}],[\"=studentbusinessobject\",{\"1\":{\"333\":1}}],[\"=studentdao\",{\"1\":{\"329\":1}}],[\"=null\",{\"1\":{\"314\":1}}],[\"=>\",{\"1\":{\"288\":6,\"724\":1,\"727\":1,\"736\":1}}],[\"=========与输入验证相关新属性========\",{\"1\":{\"895\":1}}],[\"===\",{\"1\":{\"288\":1,\"736\":1,\"739\":1,\"753\":2,\"864\":3}}],[\"==\",{\"1\":{\"251\":1,\"288\":1,\"303\":1,\"304\":2,\"305\":4,\"312\":1,\"313\":1,\"739\":2}}],[\"=\",{\"1\":{\"20\":1,\"64\":7,\"69\":1,\"77\":1,\"218\":1,\"249\":1,\"251\":7,\"252\":6,\"288\":31,\"293\":1,\"303\":4,\"304\":8,\"305\":8,\"306\":14,\"307\":6,\"308\":19,\"309\":11,\"310\":4,\"311\":4,\"312\":9,\"313\":4,\"314\":11,\"315\":9,\"316\":15,\"317\":4,\"318\":4,\"319\":6,\"320\":6,\"321\":5,\"322\":7,\"323\":10,\"324\":2,\"325\":3,\"326\":8,\"327\":6,\"328\":8,\"329\":8,\"330\":4,\"331\":6,\"332\":12,\"333\":8,\"366\":1,\"418\":28,\"505\":2,\"556\":11,\"557\":2,\"558\":3,\"627\":1,\"639\":1,\"724\":26,\"727\":1,\"736\":6,\"739\":1,\"753\":1,\"780\":11,\"864\":2,\"880\":2}}],[\"snazzy\",{\"1\":{\"929\":2}}],[\"sgml\",{\"1\":{\"906\":1}}],[\"svg\",{\"0\":{\"897\":1}}],[\"small\",{\"1\":{\"875\":1}}],[\"smart\",{\"1\":{\"313\":1}}],[\"slot\",{\"1\":{\"867\":1}}],[\"sfc\",{\"1\":{\"867\":1}}],[\"sftp\",{\"0\":{\"457\":1},\"1\":{\"457\":1}}],[\"src\",{\"1\":{\"739\":2}}],[\"ssr\",{\"0\":{\"718\":1}}],[\"skia\",{\"1\":{\"624\":1}}],[\"skipblanks\",{\"1\":{\"418\":1}}],[\"sjtu\",{\"1\":{\"583\":1}}],[\"sjtug\",{\"1\":{\"583\":1}}],[\"switchhosts\",{\"1\":{\"467\":1}}],[\"swing\",{\"1\":{\"309\":1}}],[\"sz\",{\"1\":{\"456\":2}}],[\"scss看起来与css比较接近\",{\"1\":{\"920\":1}}],[\"scss\",{\"1\":{\"920\":2,\"924\":1}}],[\"scss++\",{\"1\":{\"920\":1}}],[\"scss未生效\",{\"0\":{\"666\":1}}],[\"scalable=no\",{\"1\":{\"880\":1}}],[\"scale=1\",{\"1\":{\"880\":1}}],[\"scale\",{\"0\":{\"845\":1}}],[\"scoped>\",{\"1\":{\"858\":1,\"869\":2}}],[\"scrollintoview\",{\"0\":{\"701\":1}}],[\"scroll\",{\"1\":{\"610\":1,\"612\":1}}],[\"scrapyorg\",{\"1\":{\"554\":1}}],[\"scrapy\",{\"0\":{\"552\":1},\"1\":{\"545\":1,\"550\":1,\"554\":5,\"556\":4}}],[\"screen\",{\"1\":{\"487\":3}}],[\"screenupdating\",{\"1\":{\"418\":2}}],[\"scripts\",{\"1\":{\"739\":1}}],[\"script\",{\"1\":{\"431\":1,\"873\":1}}],[\"scheme\",{\"1\":{\"220\":1,\"596\":1}}],[\"sdk开发的应用程序\",{\"1\":{\"602\":1}}],[\"sdk\",{\"1\":{\"334\":2,\"592\":1,\"595\":1,\"627\":4}}],[\"sans\",{\"1\":{\"920\":1,\"922\":1,\"933\":1}}],[\"sassscript\",{\"0\":{\"932\":1}}],[\"sass更加简洁\",{\"1\":{\"920\":1}}],[\"sass中不用\",{\"1\":{\"920\":1}}],[\"sass++\",{\"1\":{\"920\":1}}],[\"sass\",{\"0\":{\"920\":1},\"1\":{\"920\":3}}],[\"save\",{\"1\":{\"739\":1}}],[\"saveas\",{\"1\":{\"418\":1,\"487\":1}}],[\"saved\",{\"1\":{\"319\":4}}],[\"savestatetomemento\",{\"1\":{\"319\":3}}],[\"salesexecutive2\",{\"1\":{\"309\":2}}],[\"salesexecutive1\",{\"1\":{\"309\":2}}],[\"sales\",{\"1\":{\"309\":6}}],[\"sal\",{\"1\":{\"309\":2}}],[\"salary+\",{\"1\":{\"309\":1}}],[\"salary\",{\"1\":{\"309\":10}}],[\"sql\",{\"0\":{\"440\":1,\"441\":1},\"1\":{\"316\":1}}],[\"square\",{\"1\":{\"303\":9,\"304\":9,\"306\":12,\"311\":8}}],[\"syz\",{\"1\":{\"558\":1}}],[\"synchronization\",{\"1\":{\"313\":1}}],[\"synchronized\",{\"1\":{\"305\":4}}],[\"syntax\",{\"1\":{\"211\":1,\"212\":1,\"213\":1,\"229\":1,\"929\":2}}],[\"systemctl\",{\"1\":{\"579\":1,\"583\":2}}],[\"systeminfo\",{\"1\":{\"477\":1}}],[\"system\",{\"1\":{\"303\":3,\"304\":6,\"305\":1,\"306\":6,\"307\":2,\"308\":5,\"309\":3,\"310\":6,\"311\":3,\"312\":2,\"313\":3,\"314\":3,\"315\":2,\"316\":2,\"317\":1,\"318\":1,\"319\":3,\"320\":5,\"321\":4,\"322\":5,\"323\":3,\"324\":7,\"325\":4,\"326\":3,\"327\":2,\"328\":1,\"329\":4,\"330\":4,\"331\":3,\"332\":5,\"333\":4,\"627\":2,\"638\":3}}],[\"symbol\",{\"0\":{\"759\":1,\"788\":1},\"1\":{\"259\":1,\"722\":1,\"749\":1,\"751\":1,\"759\":1}}],[\"stylus\",{\"0\":{\"939\":1}}],[\"stylesheet\",{\"1\":{\"880\":1}}],[\"style>等标记\",{\"1\":{\"873\":1}}],[\"style>\",{\"1\":{\"869\":2,\"880\":1}}],[\"style\",{\"1\":{\"556\":1,\"596\":1,\"843\":1,\"873\":1,\"923\":1}}],[\"studio的缓存位置\",{\"1\":{\"627\":1}}],[\"studio\",{\"0\":{\"591\":1,\"627\":1},\"1\":{\"591\":1,\"596\":1,\"627\":2}}],[\"studentbusinessobject\",{\"1\":{\"333\":4}}],[\"studentbo\",{\"1\":{\"333\":6}}],[\"studentvo\",{\"1\":{\"333\":12}}],[\"studentview\",{\"1\":{\"326\":6,\"330\":7}}],[\"student2\",{\"1\":{\"329\":2,\"333\":2}}],[\"student1\",{\"1\":{\"329\":2,\"333\":2}}],[\"students\",{\"1\":{\"329\":8,\"333\":8}}],[\"studentdaoimpl\",{\"1\":{\"329\":4}}],[\"studentdao\",{\"1\":{\"329\":9}}],[\"studentcontroller\",{\"1\":{\"326\":6}}],[\"studentrollno\",{\"1\":{\"326\":2}}],[\"studentname\",{\"1\":{\"326\":2}}],[\"student\",{\"1\":{\"326\":15,\"329\":36,\"330\":5,\"333\":19}}],[\"step=\",{\"1\":{\"893\":2}}],[\"steps\",{\"0\":{\"484\":1}}],[\"step\",{\"1\":{\"418\":1}}],[\"storage\",{\"1\":{\"627\":1,\"902\":1}}],[\"store\",{\"1\":{\"421\":1}}],[\"stop\",{\"1\":{\"321\":4,\"431\":1,\"579\":1}}],[\"stopstate\",{\"1\":{\"321\":6}}],[\"stock\",{\"1\":{\"315\":12}}],[\"strong\",{\"1\":{\"875\":1}}],[\"stronger\",{\"1\":{\"484\":1}}],[\"str\",{\"1\":{\"736\":4}}],[\"strawman\",{\"1\":{\"671\":1}}],[\"strategies\",{\"1\":{\"328\":1,\"568\":1}}],[\"strategypatterndemo\",{\"1\":{\"323\":2}}],[\"strategy\",{\"0\":{\"323\":1},\"1\":{\"281\":1,\"323\":13}}],[\"strip\",{\"1\":{\"556\":1}}],[\"string>\",{\"1\":{\"724\":1}}],[\"string\",{\"0\":{\"758\":1},\"1\":{\"303\":2,\"304\":8,\"305\":1,\"306\":7,\"307\":1,\"308\":10,\"309\":6,\"310\":1,\"311\":1,\"312\":7,\"313\":6,\"314\":6,\"315\":2,\"316\":7,\"317\":4,\"318\":7,\"319\":7,\"320\":10,\"321\":3,\"322\":8,\"323\":1,\"324\":1,\"325\":1,\"326\":13,\"327\":4,\"328\":16,\"329\":5,\"330\":4,\"331\":8,\"332\":7,\"333\":5,\"418\":1,\"648\":1,\"722\":1,\"724\":8,\"727\":3,\"736\":9,\"751\":1}}],[\"stringbuilder\",{\"1\":{\"285\":1}}],[\"strut\",{\"1\":{\"910\":1}}],[\"struts\",{\"1\":{\"315\":1}}],[\"struts2\",{\"1\":{\"314\":1}}],[\"structure下面的jdk地址\",{\"1\":{\"627\":1}}],[\"structure\",{\"1\":{\"208\":1,\"595\":1}}],[\"stack\",{\"1\":{\"920\":2}}],[\"stage\",{\"1\":{\"420\":1}}],[\"startproject\",{\"1\":{\"554\":1}}],[\"startplay\",{\"1\":{\"324\":4}}],[\"started\",{\"1\":{\"324\":4}}],[\"start\",{\"1\":{\"321\":4,\"324\":4,\"478\":3,\"556\":4}}],[\"startstate\",{\"1\":{\"321\":6}}],[\"startindex\",{\"1\":{\"288\":2}}],[\"starting\",{\"1\":{\"228\":1}}],[\"standards\",{\"1\":{\"905\":1}}],[\"standard\",{\"1\":{\"314\":4,\"334\":2}}],[\"status\",{\"1\":{\"308\":15,\"445\":1,\"610\":1,\"612\":1,\"736\":4}}],[\"static\",{\"1\":{\"303\":1,\"304\":2,\"305\":14,\"306\":4,\"307\":1,\"308\":2,\"309\":1,\"310\":1,\"311\":1,\"312\":7,\"313\":1,\"314\":5,\"315\":1,\"316\":3,\"317\":1,\"318\":2,\"319\":1,\"320\":1,\"321\":1,\"322\":3,\"323\":1,\"324\":1,\"325\":1,\"326\":2,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":4,\"333\":1}}],[\"statefulwidget\",{\"0\":{\"632\":1},\"1\":{\"632\":1}}],[\"statelesswidget\",{\"0\":{\"632\":1}}],[\"statepatterndemo\",{\"1\":{\"321\":2}}],[\"state\",{\"0\":{\"321\":1,\"633\":1},\"1\":{\"281\":1,\"319\":27,\"320\":9,\"321\":22}}],[\"success\",{\"1\":{\"926\":1}}],[\"successfully\",{\"1\":{\"330\":3}}],[\"suggestions\",{\"1\":{\"596\":1}}],[\"survive\",{\"1\":{\"484\":1}}],[\"su\",{\"1\":{\"445\":1}}],[\"sudo\",{\"1\":{\"431\":2,\"583\":2}}],[\"submit\",{\"1\":{\"860\":1,\"893\":1}}],[\"submenu\",{\"1\":{\"610\":1,\"612\":1}}],[\"submodule\",{\"0\":{\"422\":1},\"1\":{\"422\":1}}],[\"subnav\",{\"1\":{\"610\":1,\"612\":1}}],[\"sub\",{\"1\":{\"418\":3,\"875\":1}}],[\"substitution\",{\"0\":{\"337\":1}}],[\"subscript\",{\"0\":{\"221\":1}}],[\"subject\",{\"1\":{\"320\":32}}],[\"subordinates\",{\"1\":{\"309\":5}}],[\"sup\",{\"1\":{\"875\":1}}],[\"superpower\",{\"1\":{\"484\":1}}],[\"super\",{\"1\":{\"306\":1,\"307\":1,\"310\":1}}],[\"superscript\",{\"0\":{\"221\":1}}],[\"support\",{\"1\":{\"220\":1,\"525\":1,\"529\":1}}],[\"supports\",{\"1\":{\"211\":1}}],[\"sum1\",{\"1\":{\"736\":2}}],[\"summary\",{\"1\":{\"612\":1}}],[\"sum\",{\"1\":{\"218\":1,\"736\":4}}],[\"solid\",{\"1\":{\"922\":1,\"926\":1,\"928\":1}}],[\"sold\",{\"1\":{\"315\":2}}],[\"soa\",{\"1\":{\"693\":1}}],[\"sort\",{\"1\":{\"596\":1}}],[\"sortedarr\",{\"1\":{\"251\":2}}],[\"socket长连接\",{\"1\":{\"576\":1}}],[\"source\",{\"1\":{\"458\":1,\"466\":1}}],[\"software\",{\"1\":{\"334\":1}}],[\"so\",{\"1\":{\"208\":2}}],[\"somekey\",{\"1\":{\"288\":6}}],[\"some\",{\"1\":{\"199\":1}}],[\"spider\",{\"1\":{\"556\":1,\"558\":3}}],[\"spirng\",{\"1\":{\"324\":1}}],[\"span><\",{\"1\":{\"880\":1}}],[\"span\",{\"1\":{\"556\":1,\"927\":1}}],[\"spa\",{\"1\":{\"391\":1}}],[\"space\",{\"1\":{\"174\":1,\"240\":1}}],[\"spring\",{\"1\":{\"313\":1}}],[\"speed\",{\"1\":{\"288\":1}}],[\"spec基准程序\",{\"1\":{\"82\":1}}],[\"splice\",{\"1\":{\"251\":1,\"288\":1}}],[\"s\",{\"1\":{\"155\":1,\"174\":2,\"226\":1,\"227\":1,\"288\":1,\"431\":1,\"466\":2,\"477\":3,\"487\":3,\"505\":4,\"585\":1,\"596\":1}}],[\"shrink\",{\"1\":{\"912\":1}}],[\"shakable\",{\"1\":{\"867\":1}}],[\"share\",{\"1\":{\"629\":1}}],[\"shapemaker\",{\"1\":{\"311\":9}}],[\"shapemap\",{\"1\":{\"306\":6}}],[\"shapedecorator\",{\"1\":{\"310\":5}}],[\"shapekey\",{\"1\":{\"306\":1}}],[\"shapeid\",{\"1\":{\"306\":2}}],[\"shape>\",{\"1\":{\"306\":2,\"312\":1}}],[\"shapecache\",{\"1\":{\"306\":7}}],[\"shape3\",{\"1\":{\"303\":2,\"304\":2}}],[\"shape2\",{\"1\":{\"303\":2,\"304\":2}}],[\"shape1\",{\"1\":{\"303\":2,\"304\":2}}],[\"shapetype\",{\"1\":{\"303\":5,\"304\":6}}],[\"shapefactory\",{\"1\":{\"303\":8,\"304\":7,\"312\":3}}],[\"shape\",{\"1\":{\"303\":9,\"304\":15,\"306\":21,\"307\":9,\"310\":19,\"311\":8,\"312\":4}}],[\"sh\",{\"1\":{\"431\":1,\"449\":4,\"465\":1,\"466\":2,\"579\":1}}],[\"shop\",{\"1\":{\"612\":1}}],[\"show\",{\"1\":{\"330\":4,\"418\":1,\"421\":1,\"596\":1}}],[\"showmessage\",{\"1\":{\"305\":2,\"318\":2}}],[\"should\",{\"1\":{\"19\":1,\"208\":1}}],[\"shift+i\",{\"1\":{\"487\":1}}],[\"shift+g\",{\"1\":{\"487\":1}}],[\"shift+6\",{\"1\":{\"487\":1}}],[\"shift+方向键选中相应的图层模式\",{\"1\":{\"184\":1}}],[\"shiftctrlalt\",{\"1\":{\"173\":1}}],[\"shift\",{\"1\":{\"143\":2,\"155\":1,\"174\":7,\"175\":1,\"177\":2,\"184\":1,\"185\":1}}],[\"s模式\",{\"1\":{\"127\":1}}],[\"since\",{\"1\":{\"929\":2}}],[\"singleorfemale\",{\"1\":{\"308\":2}}],[\"singleobject\",{\"1\":{\"305\":12}}],[\"singlemale\",{\"1\":{\"308\":2}}],[\"single\",{\"1\":{\"308\":21,\"391\":1,\"929\":1}}],[\"singlepersons\",{\"1\":{\"308\":3}}],[\"singletonholder\",{\"1\":{\"305\":4}}],[\"singletonpatterndemo\",{\"1\":{\"305\":2}}],[\"singleton\",{\"0\":{\"305\":1},\"1\":{\"279\":2,\"288\":1,\"293\":1,\"305\":39}}],[\"sizing\",{\"1\":{\"843\":1}}],[\"size=\",{\"1\":{\"875\":1}}],[\"size\",{\"1\":{\"220\":1,\"613\":2,\"845\":1,\"880\":1,\"923\":2,\"927\":2}}],[\"signature\",{\"1\":{\"595\":1}}],[\"signingconfigs\",{\"1\":{\"595\":1}}],[\"simplified\",{\"1\":{\"594\":1}}],[\"simple\",{\"1\":{\"545\":7}}],[\"simd\",{\"1\":{\"42\":1}}],[\"sites\",{\"1\":{\"208\":1}}],[\"sidebar\",{\"1\":{\"199\":1,\"205\":1,\"610\":1,\"612\":2,\"928\":1,\"930\":1}}],[\"sisd\",{\"1\":{\"42\":1}}],[\"silver\",{\"1\":{\"21\":1}}],[\"several\",{\"1\":{\"929\":1}}],[\"sect\",{\"1\":{\"884\":1}}],[\"second\",{\"1\":{\"319\":2,\"320\":2,\"328\":2}}],[\"sex\",{\"1\":{\"727\":2}}],[\"searchdata\",{\"1\":{\"860\":1}}],[\"searchdirection\",{\"1\":{\"418\":1}}],[\"searchform\",{\"1\":{\"860\":2}}],[\"search\",{\"1\":{\"556\":2,\"610\":1,\"612\":1,\"860\":1,\"893\":2}}],[\"senior\",{\"0\":{\"951\":1}}],[\"sentence\",{\"1\":{\"487\":2,\"724\":1}}],[\"sendrequest\",{\"1\":{\"331\":2}}],[\"sendmessage\",{\"1\":{\"318\":3}}],[\"self\",{\"1\":{\"556\":3,\"558\":8,\"912\":1}}],[\"selector\",{\"1\":{\"843\":1}}],[\"selection\",{\"1\":{\"418\":2}}],[\"select\",{\"1\":{\"418\":1,\"441\":1}}],[\"selecteditems\",{\"1\":{\"418\":1}}],[\"sellstockorder\",{\"1\":{\"315\":2}}],[\"sellstock\",{\"1\":{\"315\":5}}],[\"sell\",{\"1\":{\"315\":2}}],[\"segregation\",{\"0\":{\"340\":1}}],[\"sessionstorage\",{\"0\":{\"903\":1}}],[\"session\",{\"1\":{\"324\":2}}],[\"serif\",{\"1\":{\"920\":1,\"922\":1,\"933\":1}}],[\"serializable\",{\"1\":{\"306\":1}}],[\"servlet\",{\"1\":{\"314\":1,\"327\":1}}],[\"servicename\",{\"1\":{\"332\":2}}],[\"services\",{\"1\":{\"332\":5,\"627\":1}}],[\"service2\",{\"1\":{\"332\":13}}],[\"service1\",{\"1\":{\"332\":16}}],[\"servicelocatorpatterndemo\",{\"1\":{\"332\":2}}],[\"servicelocator\",{\"1\":{\"332\":8}}],[\"servicetype\",{\"1\":{\"327\":7}}],[\"service\",{\"0\":{\"332\":1},\"1\":{\"282\":1,\"327\":6,\"332\":32,\"445\":1,\"567\":1,\"595\":1,\"610\":1,\"612\":1}}],[\"server等上面\",{\"1\":{\"117\":1}}],[\"server\",{\"1\":{\"117\":1,\"580\":3},\"2\":{\"489\":1}}],[\"see\",{\"1\":{\"17\":1,\"19\":1,\"288\":1}}],[\"set和map数据结构\",{\"0\":{\"791\":1}}],[\"set方法\",{\"1\":{\"596\":1}}],[\"setfiltermanager\",{\"1\":{\"331\":2}}],[\"setfilter\",{\"1\":{\"331\":3}}],[\"settimeout\",{\"0\":{\"769\":1},\"1\":{\"736\":1}}],[\"settings\",{\"1\":{\"594\":1,\"596\":2,\"627\":1,\"637\":1,\"736\":1}}],[\"setting\",{\"1\":{\"199\":1,\"220\":1}}],[\"setter\",{\"1\":{\"333\":1,\"596\":2}}],[\"settarget\",{\"1\":{\"331\":2}}],[\"setdata\",{\"1\":{\"328\":11}}],[\"setservicetype\",{\"1\":{\"327\":3}}],[\"setstudentrollno\",{\"1\":{\"326\":1}}],[\"setstudentname\",{\"1\":{\"326\":2}}],[\"setstate\",{\"1\":{\"319\":5,\"320\":3,\"321\":3}}],[\"setname\",{\"1\":{\"318\":1,\"326\":3,\"329\":3,\"333\":3}}],[\"setnextlogger\",{\"1\":{\"314\":3}}],[\"setrollno\",{\"1\":{\"326\":3,\"329\":1,\"333\":1}}],[\"setradius\",{\"1\":{\"312\":2}}],[\"setredborder\",{\"1\":{\"310\":2}}],[\"sety\",{\"1\":{\"312\":2}}],[\"setx\",{\"1\":{\"312\":2}}],[\"setid\",{\"1\":{\"306\":4}}],[\"set\",{\"1\":{\"17\":1,\"19\":1,\"226\":1,\"227\":1,\"314\":1,\"329\":1,\"418\":3,\"425\":1,\"478\":2,\"481\":1}}],[\"dt>\",{\"1\":{\"880\":2}}],[\"dtd\",{\"1\":{\"871\":1}}],[\"dl>\",{\"1\":{\"880\":1}}],[\"dl\",{\"1\":{\"843\":1}}],[\"dns解析\",{\"1\":{\"706\":1}}],[\"dump\",{\"1\":{\"558\":1}}],[\"dg\",{\"1\":{\"487\":1}}],[\"dd>\",{\"1\":{\"880\":2}}],[\"dd\",{\"1\":{\"487\":1,\"843\":1}}],[\"ddd\",{\"1\":{\"421\":1}}],[\"df\",{\"1\":{\"445\":1}}],[\"dfd\",{\"0\":{\"371\":1}}],[\"dcl\",{\"1\":{\"305\":1}}],[\"daac\",{\"1\":{\"638\":2}}],[\"dart是完全换了语言\",{\"1\":{\"642\":1}}],[\"dart环境变量和相关镜像站点环境变量\",{\"1\":{\"627\":1}}],[\"dart\",{\"0\":{\"642\":1},\"1\":{\"624\":1,\"642\":1,\"647\":1}}],[\"darkmode\",{\"1\":{\"205\":1}}],[\"daemon\",{\"1\":{\"583\":3}}],[\"daocloud\",{\"1\":{\"582\":2,\"583\":1}}],[\"daopatterndemo\",{\"1\":{\"329\":1}}],[\"dao\",{\"0\":{\"329\":1},\"1\":{\"329\":1}}],[\"dazhong\",{\"1\":{\"288\":1}}],[\"datalist>\",{\"1\":{\"894\":1}}],[\"datalist\",{\"1\":{\"894\":1}}],[\"data类型的数据的时候\",{\"1\":{\"685\":1}}],[\"data2\",{\"1\":{\"328\":6}}],[\"data1\",{\"1\":{\"328\":8}}],[\"database\",{\"1\":{\"322\":3,\"329\":3,\"333\":3}}],[\"data\",{\"0\":{\"329\":1},\"1\":{\"282\":1,\"316\":5,\"328\":17,\"329\":2,\"418\":15,\"556\":1,\"558\":5,\"727\":3,\"864\":1,\"867\":2}}],[\"date\",{\"0\":{\"763\":1},\"1\":{\"227\":1,\"318\":2,\"445\":1,\"478\":1,\"752\":1,\"893\":2,\"895\":2}}],[\"division\",{\"1\":{\"927\":5}}],[\"divide\",{\"1\":{\"884\":1}}],[\"div>\",{\"1\":{\"880\":2}}],[\"div\",{\"1\":{\"874\":1}}],[\"dio\",{\"1\":{\"629\":1}}],[\"dialog\",{\"1\":{\"629\":2}}],[\"diagnose\",{\"1\":{\"593\":1}}],[\"diagnostic\",{\"1\":{\"593\":1}}],[\"diana\",{\"1\":{\"308\":3}}],[\"diff算法\",{\"0\":{\"864\":1}}],[\"diff\",{\"1\":{\"445\":1,\"864\":5}}],[\"different\",{\"1\":{\"208\":1}}],[\"direction\",{\"1\":{\"912\":1}}],[\"directory\",{\"1\":{\"228\":1,\"627\":2}}],[\"dirname\",{\"1\":{\"477\":3}}],[\"dir=\",{\"1\":{\"466\":1,\"627\":1}}],[\"dir\",{\"1\":{\"445\":1,\"477\":2}}],[\"dim\",{\"1\":{\"418\":4}}],[\"dish\",{\"1\":{\"894\":2}}],[\"distributionurl=file\",{\"1\":{\"627\":1}}],[\"distributionurl=https\",{\"1\":{\"627\":1}}],[\"distributions\",{\"0\":{\"444\":1},\"1\":{\"627\":1}}],[\"dist\",{\"1\":{\"580\":1}}],[\"dispatchrequest\",{\"1\":{\"330\":3}}],[\"dispatch\",{\"1\":{\"330\":2}}],[\"dispatcher\",{\"1\":{\"330\":10}}],[\"displaying\",{\"1\":{\"313\":3,\"325\":8,\"330\":4}}],[\"display\",{\"0\":{\"908\":1},\"1\":{\"313\":6,\"843\":1,\"923\":2}}],[\"disabled\",{\"1\":{\"895\":1}}],[\"disables\",{\"1\":{\"199\":1}}],[\"disable\",{\"1\":{\"199\":1,\"638\":1},\"2\":{\"201\":1}}],[\"disabling\",{\"0\":{\"199\":1}}],[\"db\",{\"1\":{\"100\":1}}],[\"dbs\",{\"1\":{\"98\":1}}],[\"d\",{\"1\":{\"63\":1,\"174\":1,\"177\":1,\"302\":1,\"447\":5,\"459\":1,\"466\":2,\"477\":2,\"736\":1,\"880\":1,\"895\":1}}],[\"dma控制器完成\",{\"1\":{\"59\":1}}],[\"dma方式\",{\"1\":{\"59\":1}}],[\"draft\",{\"1\":{\"671\":1}}],[\"drawsquare\",{\"1\":{\"311\":2}}],[\"drawrectangle\",{\"1\":{\"311\":2}}],[\"drawing\",{\"1\":{\"307\":4}}],[\"drawcircle\",{\"1\":{\"307\":4,\"311\":2}}],[\"drawapi\",{\"1\":{\"307\":17}}],[\"draw\",{\"1\":{\"303\":19,\"304\":16,\"306\":7,\"307\":4,\"310\":10,\"311\":13,\"312\":24}}],[\"dram\",{\"1\":{\"53\":1}}],[\"driver\",{\"1\":{\"288\":2}}],[\"dr数据缓冲寄存器\",{\"1\":{\"37\":1}}],[\"does\",{\"1\":{\"927\":4}}],[\"doesn\",{\"1\":{\"724\":2}}],[\"dom\",{\"0\":{\"717\":1},\"1\":{\"760\":1,\"864\":3,\"866\":1}}],[\"domains\",{\"1\":{\"554\":1,\"556\":1}}],[\"douban\",{\"1\":{\"545\":2}}],[\"double\",{\"1\":{\"305\":1}}],[\"do\",{\"1\":{\"478\":1}}],[\"download\",{\"1\":{\"449\":1,\"557\":2,\"610\":1,\"612\":1}}],[\"do2\",{\"1\":{\"328\":3}}],[\"do1\",{\"1\":{\"328\":3}}],[\"dotask\",{\"1\":{\"327\":5}}],[\"doprocessing\",{\"1\":{\"327\":4}}],[\"dooperation\",{\"1\":{\"323\":5}}],[\"doaction\",{\"1\":{\"321\":5}}],[\"done\",{\"1\":{\"288\":1,\"736\":2}}],[\"don\",{\"1\":{\"209\":1,\"210\":1}}],[\"doctype\",{\"0\":{\"871\":1},\"1\":{\"871\":2}}],[\"doctor的结果安装必要的工具\",{\"1\":{\"627\":1}}],[\"doctor\",{\"1\":{\"627\":2}}],[\"doctor命令检查\",{\"1\":{\"627\":1}}],[\"dockerhub\",{\"1\":{\"582\":3}}],[\"docker镜像加速站\",{\"1\":{\"582\":2}}],[\"dockertest\",{\"1\":{\"582\":1}}],[\"dockercf\",{\"1\":{\"582\":1}}],[\"dockerproxy\",{\"1\":{\"582\":1,\"583\":1}}],[\"dockerpull\",{\"1\":{\"582\":1}}],[\"dockerfile\",{\"0\":{\"580\":1}}],[\"dockerfilepath\",{\"1\":{\"579\":1}}],[\"dockernginx\",{\"1\":{\"579\":2}}],[\"docker\",{\"0\":{\"577\":1},\"1\":{\"579\":9,\"582\":11,\"583\":6}}],[\"document\",{\"1\":{\"212\":1}}],[\"documentation\",{\"1\":{\"208\":1}}],[\"docs\",{\"1\":{\"19\":1,\"917\":1}}],[\"doing\",{\"1\":{\"1\":1,\"736\":2}}],[\"deep\",{\"1\":{\"869\":6}}],[\"development和\",{\"1\":{\"868\":1}}],[\"development\",{\"1\":{\"593\":1}}],[\"deveco\",{\"0\":{\"591\":1}}],[\"dev\",{\"1\":{\"423\":1,\"582\":1,\"628\":1,\"739\":1}}],[\"defineasynccomponent\",{\"1\":{\"867\":1}}],[\"defineprops\",{\"1\":{\"288\":1}}],[\"defineproperties\",{\"1\":{\"288\":1}}],[\"defineproperty\",{\"1\":{\"288\":2}}],[\"defineprop\",{\"1\":{\"288\":4}}],[\"def\",{\"1\":{\"556\":3,\"558\":2}}],[\"default工厂函数不再有权访问\",{\"1\":{\"867\":1}}],[\"default\",{\"1\":{\"418\":1,\"561\":1}}],[\"dell\",{\"1\":{\"638\":2}}],[\"delay\",{\"1\":{\"557\":2}}],[\"delimited\",{\"1\":{\"487\":2}}],[\"delivery\",{\"1\":{\"375\":1}}],[\"del\",{\"1\":{\"477\":1}}],[\"delegate\",{\"0\":{\"327\":1},\"1\":{\"282\":1,\"327\":1}}],[\"deleted\",{\"1\":{\"329\":1,\"333\":1}}],[\"deletestudent\",{\"1\":{\"329\":2,\"333\":1}}],[\"delete\",{\"1\":{\"174\":2,\"572\":1}}],[\"deployment\",{\"1\":{\"375\":1}}],[\"dependences\",{\"1\":{\"628\":2}}],[\"dependence\",{\"0\":{\"338\":1}}],[\"dependentobject2\",{\"1\":{\"328\":4}}],[\"dependentobject1\",{\"1\":{\"328\":4}}],[\"dependent\",{\"1\":{\"328\":1}}],[\"depth=0\",{\"1\":{\"411\":1}}],[\"dept\",{\"1\":{\"309\":13}}],[\"debugfilter\",{\"1\":{\"331\":3}}],[\"debug\",{\"1\":{\"314\":6}}],[\"decoration\",{\"1\":{\"923\":1,\"928\":2}}],[\"decoratedshape\",{\"1\":{\"310\":10}}],[\"decorators\",{\"1\":{\"566\":2}}],[\"decoratorpatterndemo\",{\"1\":{\"310\":2}}],[\"decorator\",{\"0\":{\"310\":1},\"1\":{\"280\":2,\"288\":1}}],[\"destroyed\",{\"1\":{\"867\":2}}],[\"designpatterns\",{\"1\":{\"334\":1}}],[\"design\",{\"0\":{\"279\":1,\"280\":1,\"281\":1},\"1\":{\"334\":8,\"635\":1}}],[\"description\",{\"0\":{\"19\":1},\"1\":{\"880\":1}}],[\"descriptions\",{\"1\":{\"17\":1}}],[\"details\",{\"0\":{\"526\":1,\"530\":1},\"1\":{\"527\":1,\"531\":1}}],[\"detail\",{\"1\":{\"214\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1}}],[\"demeter\",{\"0\":{\"341\":1}}],[\"demical\",{\"1\":{\"63\":1}}],[\"demo\",{\"0\":{\"197\":1},\"1\":{\"19\":1,\"199\":1,\"209\":1}}],[\"f12\",{\"1\":{\"596\":1}}],[\"funky\",{\"1\":{\"923\":4}}],[\"func\",{\"1\":{\"288\":1}}],[\"functional\",{\"1\":{\"867\":1}}],[\"functions\",{\"1\":{\"213\":1}}],[\"function\",{\"0\":{\"761\":1,\"930\":1},\"1\":{\"199\":1,\"251\":1,\"252\":1,\"288\":7,\"722\":1,\"724\":1,\"727\":1,\"736\":11,\"752\":1,\"780\":2,\"864\":2,\"927\":1,\"930\":1}}],[\"full\",{\"1\":{\"596\":1,\"864\":1}}],[\"fyi\",{\"1\":{\"582\":3}}],[\"flow\",{\"1\":{\"912\":1}}],[\"float\",{\"1\":{\"613\":2,\"843\":3,\"927\":2}}],[\"flash\",{\"1\":{\"902\":1}}],[\"flag\",{\"1\":{\"864\":5}}],[\"flex布局中子元素的float\",{\"1\":{\"912\":1}}],[\"flexible\",{\"1\":{\"856\":1}}],[\"flex\",{\"0\":{\"913\":1},\"1\":{\"843\":2,\"848\":1,\"912\":7}}],[\"fluid\",{\"1\":{\"856\":1}}],[\"fluent\",{\"1\":{\"635\":1}}],[\"fluttertoast\",{\"1\":{\"638\":2}}],[\"flutter的视图开发是声明式的\",{\"1\":{\"633\":1}}],[\"flutter的核心设计思想便是\",{\"1\":{\"630\":1}}],[\"flutter依赖\",{\"0\":{\"628\":1}}],[\"flutter部分\",{\"1\":{\"627\":1}}],[\"flutter\",{\"0\":{\"625\":1},\"1\":{\"627\":7,\"628\":2,\"629\":1,\"637\":1,\"639\":2}}],[\"flush\",{\"1\":{\"561\":1}}],[\"flyweightpatterndemo\",{\"1\":{\"312\":2}}],[\"flyweight\",{\"0\":{\"312\":1},\"1\":{\"280\":2,\"288\":1}}],[\"flynn分类法\",{\"1\":{\"42\":1}}],[\"f+\",{\"1\":{\"487\":1}}],[\"fssl\",{\"1\":{\"465\":1}}],[\"ff不支持\",{\"1\":{\"895\":1}}],[\"ff8600\",{\"1\":{\"613\":2}}],[\"ff\",{\"1\":{\"423\":1}}],[\"fantasy\",{\"1\":{\"923\":4}}],[\"family\",{\"1\":{\"923\":2,\"933\":1}}],[\"fake\",{\"1\":{\"545\":1,\"556\":1}}],[\"faster\",{\"1\":{\"484\":1}}],[\"fastforward会丢掉分支信息\",{\"1\":{\"423\":1}}],[\"failed\",{\"1\":{\"638\":3}}],[\"fail\",{\"0\":{\"424\":1}}],[\"false\",{\"1\":{\"316\":1,\"317\":1,\"322\":1,\"332\":1,\"418\":2,\"724\":2}}],[\"face=\",{\"1\":{\"875\":1}}],[\"facebook的flow\",{\"1\":{\"720\":1}}],[\"facadepatterndemo\",{\"1\":{\"311\":2}}],[\"facade\",{\"0\":{\"311\":1},\"1\":{\"280\":2,\"288\":1}}],[\"factoryproducer\",{\"1\":{\"304\":5}}],[\"factorypatterndemo\",{\"1\":{\"303\":2}}],[\"factory\",{\"0\":{\"303\":1,\"304\":1},\"1\":{\"279\":3,\"288\":1}}],[\"fe\",{\"2\":{\"682\":1,\"765\":1,\"888\":1}}],[\"feature\",{\"0\":{\"524\":1,\"528\":1},\"1\":{\"525\":1,\"527\":1,\"529\":1,\"531\":1}}],[\"features\",{\"0\":{\"197\":1,\"199\":1,\"233\":1},\"1\":{\"199\":1}}],[\"feel\",{\"1\":{\"484\":1}}],[\"feed\",{\"1\":{\"437\":2}}],[\"fetch在post\",{\"1\":{\"685\":1}}],[\"fetch\",{\"0\":{\"685\":1},\"1\":{\"425\":2}}],[\"federation\",{\"1\":{\"391\":1}}],[\"females\",{\"1\":{\"308\":3}}],[\"female\",{\"1\":{\"308\":10}}],[\"femalepersons\",{\"1\":{\"308\":3}}],[\"fifp\",{\"1\":{\"357\":1}}],[\"findstr\",{\"1\":{\"776\":1}}],[\"find\",{\"1\":{\"418\":1,\"445\":1,\"596\":1}}],[\"finished\",{\"1\":{\"324\":4,\"671\":1}}],[\"final\",{\"1\":{\"305\":2,\"312\":2,\"322\":1,\"324\":3}}],[\"firefox\",{\"1\":{\"925\":4,\"928\":1}}],[\"firewalld\",{\"1\":{\"445\":1}}],[\"firewall\",{\"1\":{\"313\":1}}],[\"firstcriteriaitems\",{\"1\":{\"308\":4}}],[\"firstcriteriapersons\",{\"1\":{\"308\":2}}],[\"first\",{\"1\":{\"226\":1,\"319\":2,\"320\":2,\"334\":1,\"355\":1,\"357\":2,\"556\":1}}],[\"fill\",{\"1\":{\"304\":16}}],[\"filterrequest\",{\"1\":{\"331\":2}}],[\"filtermanager\",{\"1\":{\"331\":16}}],[\"filters\",{\"1\":{\"331\":3,\"566\":1}}],[\"filterchain\",{\"1\":{\"331\":9}}],[\"filter\",{\"0\":{\"308\":1,\"331\":1},\"1\":{\"280\":1,\"282\":1,\"314\":1,\"331\":17,\"556\":1,\"867\":1}}],[\"filepath\",{\"1\":{\"477\":1}}],[\"filezilla\",{\"0\":{\"455\":1}}],[\"fileformat\",{\"1\":{\"418\":1}}],[\"filedialog\",{\"1\":{\"418\":1}}],[\"filelogger\",{\"1\":{\"314\":7}}],[\"filename\",{\"1\":{\"313\":13,\"418\":3,\"421\":1,\"485\":2}}],[\"file\",{\"1\":{\"208\":1,\"314\":3,\"456\":1,\"458\":1,\"478\":1,\"558\":6,\"594\":1,\"595\":1,\"596\":1,\"893\":1,\"895\":1}}],[\"files\",{\"0\":{\"217\":1},\"1\":{\"208\":2,\"228\":1,\"638\":1}}],[\"fragments\",{\"1\":{\"864\":1}}],[\"frames\",{\"0\":{\"948\":1}}],[\"framework\",{\"1\":{\"929\":2}}],[\"framents\",{\"1\":{\"866\":1}}],[\"frame\",{\"1\":{\"843\":1,\"880\":1}}],[\"frac\",{\"1\":{\"218\":4}}],[\"friendlink\",{\"1\":{\"610\":1}}],[\"free镜像服务\",{\"1\":{\"582\":1}}],[\"free\",{\"1\":{\"228\":1,\"724\":1}}],[\"from\",{\"1\":{\"208\":1,\"329\":1,\"333\":1,\"441\":1,\"556\":1,\"580\":1,\"867\":2}}],[\"frontcontrollerpatterndemo\",{\"1\":{\"330\":2,\"331\":1}}],[\"frontcontroller\",{\"1\":{\"330\":9}}],[\"frontmatter\",{\"1\":{\"199\":1,\"205\":1,\"210\":4,\"226\":1,\"227\":1}}],[\"front\",{\"0\":{\"330\":1},\"1\":{\"17\":1,\"19\":1,\"282\":1,\"330\":1,\"357\":1}}],[\"found\",{\"1\":{\"943\":1}}],[\"four\",{\"0\":{\"277\":1,\"484\":1}}],[\"font\",{\"1\":{\"613\":5,\"875\":1,\"880\":1,\"920\":1,\"922\":1,\"923\":7,\"927\":3,\"928\":3,\"933\":1}}],[\"font+字体大小\",{\"1\":{\"613\":1}}],[\"foosingleton\",{\"1\":{\"288\":1}}],[\"foo\",{\"0\":{\"235\":1,\"528\":1},\"1\":{\"529\":1,\"780\":2,\"933\":1}}],[\"football\",{\"1\":{\"324\":9}}],[\"footnote\",{\"0\":{\"216\":1},\"1\":{\"216\":1}}],[\"footer\",{\"1\":{\"199\":1,\"205\":1,\"610\":2,\"611\":2,\"612\":1}}],[\"following\",{\"1\":{\"199\":1,\"205\":1}}],[\"for=\",{\"1\":{\"894\":1}}],[\"for和v\",{\"1\":{\"867\":1}}],[\"foreach\",{\"1\":{\"727\":1,\"736\":1}}],[\"form=\",{\"1\":{\"895\":1}}],[\"formid\",{\"1\":{\"895\":2}}],[\"form>\",{\"1\":{\"860\":1,\"895\":1}}],[\"form\",{\"1\":{\"685\":1,\"860\":4,\"895\":1}}],[\"forms\",{\"1\":{\"613\":1}}],[\"forward\",{\"1\":{\"487\":2}}],[\"ford\",{\"1\":{\"288\":1}}],[\"fortran\",{\"1\":{\"260\":1}}],[\"for\",{\"1\":{\"17\":1,\"19\":1,\"210\":1,\"212\":1,\"228\":1,\"251\":1,\"252\":1,\"288\":1,\"308\":5,\"309\":2,\"312\":1,\"315\":1,\"317\":1,\"320\":1,\"322\":1,\"325\":1,\"328\":1,\"329\":1,\"331\":1,\"332\":2,\"333\":1,\"334\":1,\"418\":1,\"465\":1,\"478\":1,\"556\":3,\"638\":5,\"780\":3,\"867\":4,\"895\":1}}],[\"f90\",{\"1\":{\"922\":1}}],[\"f9\",{\"1\":{\"185\":1}}],[\"f8\",{\"1\":{\"185\":1}}],[\"f60\",{\"1\":{\"613\":2}}],[\"f6\",{\"1\":{\"185\":1}}],[\"f7\",{\"1\":{\"185\":1}}],[\"f5\",{\"1\":{\"174\":1,\"185\":1}}],[\"f\",{\"1\":{\"143\":1,\"174\":2,\"320\":1,\"478\":2,\"487\":3,\"627\":2,\"638\":2}}],[\"ftp连接上某服务器\",{\"1\":{\"445\":1}}],[\"ftp\",{\"1\":{\"117\":1,\"445\":1}}],[\"f为尾数\",{\"1\":{\"68\":1}}],[\"iife\",{\"0\":{\"803\":1}}],[\"icon\",{\"1\":{\"612\":1}}],[\"icons\",{\"1\":{\"596\":1}}],[\"icu\",{\"1\":{\"582\":1}}],[\"io\",{\"1\":{\"582\":1,\"583\":1,\"628\":1}}],[\"ios\",{\"0\":{\"473\":1}}],[\"iojs`\",{\"1\":{\"466\":1}}],[\"iojs\",{\"1\":{\"466\":1}}],[\"ip地址\",{\"1\":{\"706\":1}}],[\"ip\",{\"1\":{\"445\":1}}],[\"ie不支持\",{\"1\":{\"884\":1}}],[\"ie=edge\",{\"1\":{\"880\":1}}],[\"ie\",{\"1\":{\"319\":1}}],[\"i=0\",{\"1\":{\"312\":1}}],[\"i=1\",{\"1\":{\"218\":1}}],[\"id=\",{\"1\":{\"894\":1,\"895\":1}}],[\"id选择器\",{\"1\":{\"843\":1}}],[\"id的命名\",{\"0\":{\"612\":1}}],[\"ide配置\",{\"0\":{\"662\":1}}],[\"idea\",{\"1\":{\"627\":3}}],[\"ide\",{\"1\":{\"591\":1},\"2\":{\"490\":1}}],[\"id\",{\"1\":{\"306\":5,\"727\":4}}],[\"i++\",{\"1\":{\"251\":1,\"252\":1,\"288\":1,\"322\":1,\"325\":1,\"328\":1,\"780\":3}}],[\"i+1个记录中选出关键字最小的记录\",{\"1\":{\"249\":1}}],[\"i+1\",{\"1\":{\"218\":1}}],[\"img\",{\"1\":{\"876\":1}}],[\"implementation\",{\"1\":{\"596\":1}}],[\"implements\",{\"1\":{\"303\":3,\"304\":6,\"306\":1,\"307\":2,\"308\":5,\"310\":3,\"311\":3,\"312\":1,\"313\":2,\"315\":2,\"316\":3,\"317\":2,\"321\":2,\"323\":3,\"325\":5,\"327\":2,\"329\":1,\"331\":2,\"332\":2}}],[\"imports快速清除未使用的import\",{\"1\":{\"596\":1}}],[\"import之后\",{\"1\":{\"556\":1}}],[\"import\",{\"0\":{\"666\":1,\"924\":1},\"1\":{\"229\":1,\"306\":1,\"308\":11,\"309\":2,\"312\":1,\"315\":2,\"318\":1,\"319\":2,\"320\":2,\"329\":3,\"331\":2,\"332\":2,\"333\":2,\"556\":2,\"558\":2,\"924\":1}}],[\"important\",{\"1\":{\"210\":1,\"288\":1}}],[\"imap\",{\"1\":{\"286\":1,\"303\":1}}],[\"images\",{\"1\":{\"228\":2,\"579\":1,\"856\":1}}],[\"image\",{\"0\":{\"220\":1},\"1\":{\"313\":8,\"638\":1,\"893\":1}}],[\"if优先于v\",{\"1\":{\"867\":1}}],[\"ifitexists\",{\"1\":{\"724\":2}}],[\"if\",{\"1\":{\"209\":1,\"210\":1,\"251\":2,\"252\":3,\"288\":5,\"303\":4,\"304\":10,\"305\":4,\"308\":4,\"312\":1,\"313\":1,\"314\":2,\"316\":1,\"317\":2,\"321\":1,\"322\":1,\"323\":1,\"327\":1,\"330\":2,\"332\":6,\"418\":3,\"556\":1,\"558\":1,\"627\":2,\"736\":3,\"864\":3,\"867\":4}}],[\"italic\",{\"1\":{\"927\":1}}],[\"item>\",{\"1\":{\"860\":2}}],[\"item\",{\"1\":{\"558\":10}}],[\"items\",{\"1\":{\"17\":1,\"912\":1}}],[\"iter\",{\"1\":{\"317\":3}}],[\"iterator和for\",{\"0\":{\"792\":1}}],[\"iteratorpatterndemo\",{\"1\":{\"317\":2}}],[\"iterator\",{\"0\":{\"317\":1},\"1\":{\"281\":2,\"284\":2,\"317\":8}}],[\"it\",{\"1\":{\"208\":1,\"210\":1,\"211\":2,\"579\":2,\"929\":2}}],[\"i\",{\"0\":{\"493\":1},\"1\":{\"155\":1,\"174\":2,\"218\":1,\"228\":1,\"229\":1,\"249\":2,\"251\":5,\"252\":6,\"288\":7,\"305\":1,\"312\":1,\"322\":3,\"325\":3,\"328\":3,\"352\":1,\"366\":1,\"418\":5,\"477\":1,\"486\":2,\"545\":2,\"724\":1,\"780\":11,\"875\":1,\"880\":2}}],[\"inline\",{\"0\":{\"909\":1,\"910\":1,\"913\":1,\"915\":1},\"1\":{\"923\":1}}],[\"inline=\",{\"1\":{\"860\":1}}],[\"innerhtml\",{\"1\":{\"867\":2}}],[\"infer\",{\"1\":{\"861\":1}}],[\"info\",{\"1\":{\"314\":3,\"583\":1}}],[\"information\",{\"0\":{\"227\":1},\"1\":{\"199\":1,\"205\":2,\"227\":1,\"314\":9}}],[\"input\",{\"1\":{\"860\":1}}],[\"inputbox\",{\"1\":{\"418\":4}}],[\"incoming\",{\"1\":{\"566\":1}}],[\"include\",{\"0\":{\"217\":1},\"1\":{\"925\":3}}],[\"including\",{\"1\":{\"205\":1}}],[\"ini\",{\"1\":{\"561\":2}}],[\"initial\",{\"1\":{\"433\":1,\"880\":1}}],[\"initialcontext\",{\"1\":{\"332\":5}}],[\"initialized\",{\"1\":{\"324\":4}}],[\"initialize\",{\"1\":{\"324\":4}}],[\"init\",{\"1\":{\"288\":2,\"721\":1}}],[\"ineo6\",{\"1\":{\"475\":1}}],[\"inversion\",{\"0\":{\"338\":1}}],[\"invoking\",{\"1\":{\"327\":4}}],[\"invoker\",{\"1\":{\"315\":2}}],[\"insall\",{\"1\":{\"456\":1}}],[\"installed页签\",{\"1\":{\"594\":1}}],[\"install时会自动备份\",{\"1\":{\"431\":1}}],[\"install\",{\"1\":{\"413\":1,\"431\":3,\"447\":1,\"449\":5,\"466\":1,\"467\":1,\"545\":2,\"553\":1,\"571\":1,\"576\":1,\"580\":1,\"721\":1,\"739\":1,\"776\":1}}],[\"instance\",{\"1\":{\"288\":8,\"305\":24}}],[\"instances\",{\"1\":{\"288\":1}}],[\"inside\",{\"1\":{\"303\":6,\"304\":12,\"306\":3}}],[\"indexeddb\",{\"1\":{\"902\":1}}],[\"index++\",{\"1\":{\"317\":1}}],[\"indexof\",{\"1\":{\"288\":1}}],[\"index\",{\"1\":{\"288\":6,\"317\":2,\"319\":2}}],[\"inherit\",{\"1\":{\"288\":1}}],[\"integration\",{\"1\":{\"375\":1}}],[\"integer\",{\"1\":{\"320\":3,\"418\":1}}],[\"internal\",{\"1\":{\"638\":1}}],[\"interceptors\",{\"1\":{\"566\":1}}],[\"interceptingfilterdemo\",{\"1\":{\"331\":1}}],[\"intercepting\",{\"0\":{\"331\":1},\"1\":{\"282\":1}}],[\"interpret\",{\"1\":{\"316\":10}}],[\"interpreterpatterndemo\",{\"1\":{\"316\":3}}],[\"interpreter\",{\"0\":{\"316\":1},\"1\":{\"281\":2}}],[\"interface\",{\"0\":{\"340\":1},\"1\":{\"303\":1,\"304\":2,\"307\":1,\"308\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"315\":1,\"316\":1,\"317\":2,\"321\":1,\"323\":1,\"325\":2,\"327\":1,\"329\":2,\"331\":1,\"332\":1,\"727\":2}}],[\"int\",{\"1\":{\"307\":13,\"309\":2,\"312\":12,\"314\":8,\"315\":1,\"317\":1,\"319\":1,\"320\":3,\"322\":1,\"323\":15,\"325\":1,\"328\":1,\"329\":6,\"333\":5,\"366\":6}}],[\"into\",{\"1\":{\"229\":1}}],[\"introduce\",{\"1\":{\"210\":1}}],[\"introduction\",{\"0\":{\"209\":1,\"525\":1,\"529\":1},\"1\":{\"210\":1}}],[\"intro\",{\"1\":{\"209\":1}}],[\"in\",{\"1\":{\"17\":1,\"19\":1,\"205\":1,\"210\":1,\"211\":1,\"212\":1,\"226\":2,\"227\":1,\"228\":1,\"229\":1,\"288\":1,\"321\":4,\"322\":3,\"329\":2,\"333\":2,\"334\":1,\"355\":1,\"357\":1,\"478\":1,\"556\":3,\"596\":1,\"670\":2,\"929\":2}}],[\"isover\",{\"1\":{\"724\":1}}],[\"isauthenticuser\",{\"1\":{\"330\":2}}],[\"isnil\",{\"1\":{\"322\":3}}],[\"ist\",{\"1\":{\"318\":2}}],[\"ismarriedwoman\",{\"1\":{\"316\":2}}],[\"ismale\",{\"1\":{\"316\":2}}],[\"isfoo\",{\"1\":{\"288\":1}}],[\"is\",{\"1\":{\"1\":1,\"17\":1,\"19\":1,\"199\":1,\"210\":1,\"225\":1,\"227\":3,\"229\":1,\"288\":1,\"314\":9,\"316\":4,\"321\":4,\"330\":3,\"724\":1,\"929\":3}}],[\"tt\",{\"1\":{\"875\":1}}],[\"ts项目打包时有时候会报一些错误\",{\"0\":{\"861\":1}}],[\"tsx\",{\"1\":{\"739\":1}}],[\"tslint\",{\"1\":{\"738\":3,\"739\":5}}],[\"tsdk\",{\"1\":{\"736\":1}}],[\"ts中的重载\",{\"1\":{\"736\":1}}],[\"tsconfig\",{\"1\":{\"721\":1,\"738\":1}}],[\"tsc\",{\"1\":{\"721\":3,\"736\":1}}],[\"ts\",{\"0\":{\"947\":1},\"1\":{\"720\":1,\"721\":1,\"739\":1}}],[\"ts则是剑客做了带刀侍卫\",{\"1\":{\"719\":1}}],[\"tsinghua\",{\"1\":{\"431\":1,\"545\":2}}],[\"tls连接\",{\"1\":{\"706\":1}}],[\"tds\",{\"1\":{\"556\":4}}],[\"td\",{\"1\":{\"556\":5}}],[\"txt的规则\",{\"1\":{\"549\":1}}],[\"txt文件中写上内容\",{\"1\":{\"445\":1}}],[\"txt\",{\"1\":{\"445\":1,\"475\":2,\"556\":1}}],[\"tuple\",{\"1\":{\"722\":1}}],[\"tutorial\",{\"1\":{\"554\":1}}],[\"tutorials\",{\"1\":{\"334\":1}}],[\"tuna\",{\"1\":{\"431\":1,\"545\":2}}],[\"tm\",{\"1\":{\"334\":1}}],[\"type=\",{\"1\":{\"880\":5,\"893\":10,\"895\":3}}],[\"type=password\",{\"0\":{\"668\":1}}],[\"typeof也不再是一个百分百安全的操作\",{\"1\":{\"780\":1}}],[\"typeof\",{\"1\":{\"736\":1,\"753\":2,\"780\":1}}],[\"typescript中的数据类型\",{\"0\":{\"722\":1}}],[\"typescript\",{\"0\":{\"719\":1},\"1\":{\"721\":1,\"736\":4,\"738\":2,\"865\":1}}],[\"type\",{\"1\":{\"306\":5,\"418\":2,\"685\":1,\"723\":1,\"724\":1,\"864\":1,\"880\":1}}],[\"tree\",{\"1\":{\"867\":1}}],[\"treeshaking\",{\"1\":{\"865\":1}}],[\"triple\",{\"1\":{\"739\":1}}],[\"tr\",{\"1\":{\"556\":2}}],[\"trade\",{\"1\":{\"884\":1}}],[\"traceur转码器\",{\"1\":{\"777\":1}}],[\"trackrequest\",{\"1\":{\"330\":2}}],[\"transparentize\",{\"1\":{\"927\":1}}],[\"transpose\",{\"1\":{\"418\":1}}],[\"transitional\",{\"1\":{\"871\":1}}],[\"translate\",{\"0\":{\"845\":1}}],[\"translator\",{\"1\":{\"260\":1,\"272\":1}}],[\"transform导致\",{\"1\":{\"845\":1}}],[\"transform移动后可能导致浏览器渲染失真\",{\"1\":{\"845\":1}}],[\"transform变换会在浏览器上单独创建一个绘画层并重新进行渲染\",{\"1\":{\"845\":1}}],[\"transform是否会调用gpu\",{\"0\":{\"690\":1}}],[\"transformed\",{\"1\":{\"638\":2}}],[\"transforms\",{\"1\":{\"638\":2}}],[\"transform\",{\"1\":{\"638\":1}}],[\"transferobjectpatterndemo\",{\"1\":{\"333\":2}}],[\"transfer\",{\"0\":{\"333\":1},\"1\":{\"282\":1,\"333\":1}}],[\"try\",{\"1\":{\"306\":1}}],[\"true来在提交时自动将crlf转换为lf\",{\"1\":{\"437\":1}}],[\"true\",{\"1\":{\"17\":1,\"19\":2,\"288\":13,\"316\":3,\"317\":1,\"322\":1,\"330\":1,\"332\":1,\"418\":1,\"557\":1,\"724\":2,\"739\":1,\"753\":1,\"860\":1}}],[\"tel\",{\"1\":{\"893\":2}}],[\"teleport\",{\"1\":{\"866\":1}}],[\"telnet连接对方主机\",{\"1\":{\"445\":1}}],[\"telnet\",{\"1\":{\"445\":1}}],[\"tencent\",{\"1\":{\"637\":1}}],[\"tekflat\",{\"1\":{\"635\":1}}],[\"terminalexpression\",{\"1\":{\"316\":7}}],[\"test\",{\"1\":{\"313\":4,\"328\":4,\"478\":1}}],[\"templatepatterndemo\",{\"1\":{\"324\":2}}],[\"templatemethod\",{\"1\":{\"281\":1}}],[\"template\",{\"0\":{\"324\":1},\"1\":{\"281\":1}}],[\"temp\",{\"1\":{\"251\":2,\"638\":1}}],[\"tex\",{\"0\":{\"218\":1}}],[\"textcontent\",{\"1\":{\"864\":1}}],[\"text\",{\"1\":{\"202\":26,\"216\":1,\"556\":2,\"845\":1,\"864\":2,\"880\":1,\"893\":1,\"905\":1,\"923\":1,\"928\":2}}],[\"tworst\",{\"1\":{\"240\":1}}],[\"tar\",{\"1\":{\"458\":1}}],[\"target\",{\"1\":{\"331\":18}}],[\"tag\",{\"1\":{\"421\":2,\"885\":1}}],[\"tags\",{\"1\":{\"227\":1}}],[\"task\",{\"1\":{\"327\":4,\"638\":1}}],[\"tasklist\",{\"0\":{\"219\":1}}],[\"takeorder\",{\"1\":{\"315\":3}}],[\"tavg\",{\"1\":{\"240\":1}}],[\"tabs\",{\"0\":{\"214\":1,\"215\":1}}],[\"table\",{\"0\":{\"916\":1},\"1\":{\"205\":1}}],[\"tab\",{\"1\":{\"143\":1,\"174\":1,\"610\":1,\"612\":1}}],[\"tips\",{\"1\":{\"610\":1,\"612\":1,\"815\":1}}],[\"title>\",{\"1\":{\"873\":1,\"880\":1}}],[\"title\",{\"0\":{\"226\":1},\"1\":{\"205\":1,\"226\":5,\"418\":7,\"610\":1,\"612\":2,\"873\":1}}],[\"times\",{\"1\":{\"884\":1}}],[\"timeend\",{\"1\":{\"252\":1}}],[\"time\",{\"1\":{\"199\":1,\"205\":1,\"240\":1,\"252\":1,\"478\":1}}],[\"tif\",{\"1\":{\"134\":1}}],[\"t\",{\"1\":{\"174\":3,\"209\":1,\"210\":1,\"554\":1,\"579\":1,\"724\":2,\"861\":1,\"929\":1}}],[\"tcp连接\",{\"1\":{\"706\":1}}],[\"tcp\",{\"0\":{\"117\":1}}],[\"tpc基准程序\",{\"1\":{\"82\":1}}],[\"todos\",{\"1\":{\"736\":2}}],[\"todo\",{\"1\":{\"736\":6}}],[\"tofixed\",{\"1\":{\"724\":4}}],[\"touch\",{\"1\":{\"445\":1}}],[\"touppercase\",{\"1\":{\"320\":1}}],[\"total\",{\"1\":{\"418\":6}}],[\"tools等\",{\"1\":{\"627\":1}}],[\"tools\",{\"0\":{\"946\":1},\"1\":{\"593\":1},\"2\":{\"415\":1,\"427\":1}}],[\"tooctalstring\",{\"1\":{\"320\":1}}],[\"tohexstring\",{\"1\":{\"320\":1}}],[\"tobinarystring\",{\"1\":{\"320\":1}}],[\"tomcat\",{\"1\":{\"314\":1}}],[\"tostring\",{\"1\":{\"288\":4,\"309\":1,\"318\":1,\"321\":4,\"724\":2}}],[\"toc\",{\"1\":{\"205\":1}}],[\"topnav\",{\"1\":{\"612\":1}}],[\"top\",{\"1\":{\"199\":1,\"205\":1,\"475\":1,\"487\":1,\"582\":1}}],[\"to\",{\"1\":{\"17\":2,\"19\":1,\"199\":1,\"205\":1,\"208\":3,\"209\":1,\"210\":1,\"212\":1,\"228\":1,\"288\":1,\"418\":1,\"487\":6,\"566\":1,\"596\":1,\"627\":5,\"638\":2}}],[\"throw\",{\"1\":{\"724\":1}}],[\"th\",{\"1\":{\"556\":1}}],[\"thu\",{\"1\":{\"318\":2}}],[\"that\",{\"1\":{\"199\":1,\"208\":1,\"670\":1}}],[\"this\",{\"0\":{\"807\":1},\"1\":{\"17\":2,\"19\":2,\"199\":1,\"216\":1,\"288\":19,\"306\":1,\"307\":4,\"308\":7,\"309\":3,\"310\":1,\"312\":4,\"313\":2,\"314\":14,\"315\":2,\"316\":5,\"317\":1,\"318\":3,\"319\":2,\"320\":10,\"321\":3,\"322\":1,\"323\":1,\"325\":4,\"326\":4,\"327\":2,\"328\":2,\"329\":4,\"331\":2,\"333\":4,\"466\":2,\"627\":2,\"673\":1,\"815\":1,\"867\":1,\"929\":3}}],[\"thinking\",{\"1\":{\"1\":1}}],[\"they\",{\"1\":{\"929\":2}}],[\"then\",{\"1\":{\"288\":1,\"418\":2}}],[\"these\",{\"1\":{\"212\":1,\"288\":1,\"929\":1}}],[\"them\",{\"1\":{\"205\":1,\"208\":1}}],[\"themes\",{\"1\":{\"613\":1}}],[\"theme\",{\"0\":{\"213\":1},\"1\":{\"205\":2,\"213\":1}}],[\"the\",{\"1\":{\"1\":1,\"17\":1,\"19\":1,\"199\":4,\"202\":1,\"205\":3,\"211\":1,\"213\":1,\"226\":1,\"227\":2,\"288\":5,\"324\":4,\"329\":2,\"333\":2,\"334\":1,\"487\":1,\"566\":1,\"627\":2,\"724\":1,\"929\":4}}],[\"hyper\",{\"1\":{\"905\":1}}],[\"hydrate\",{\"1\":{\"864\":1}}],[\"h5新特性\",{\"0\":{\"890\":1}}],[\"h5之前的文档类型声明\",{\"1\":{\"871\":1}}],[\"h6最小\",{\"1\":{\"875\":1}}],[\"hn\",{\"1\":{\"875\":1}}],[\"hr\",{\"1\":{\"874\":1}}],[\"href=\",{\"1\":{\"880\":1}}],[\"href\",{\"1\":{\"556\":1}}],[\"hbuilder中\",{\"1\":{\"721\":1}}],[\"hdc常用命令\",{\"0\":{\"599\":1}}],[\"hpcloud\",{\"1\":{\"582\":1}}],[\"hub\",{\"1\":{\"582\":2}}],[\"htm\",{\"1\":{\"907\":1}}],[\"html5\",{\"1\":{\"906\":1}}],[\"html4\",{\"1\":{\"906\":1}}],[\"html版本\",{\"0\":{\"906\":1}}],[\"html>\",{\"1\":{\"871\":1,\"880\":1}}],[\"html\",{\"0\":{\"605\":1,\"713\":1,\"905\":1},\"1\":{\"167\":1,\"843\":1,\"871\":1,\"873\":1,\"880\":1,\"885\":1,\"907\":1},\"2\":{\"889\":1}}],[\"http响应头设置\",{\"1\":{\"880\":1}}],[\"http请求\",{\"1\":{\"629\":1}}],[\"https\",{\"1\":{\"431\":2,\"447\":2,\"465\":1,\"475\":3,\"545\":7,\"556\":2,\"582\":19,\"583\":5,\"637\":5}}],[\"http\",{\"1\":{\"286\":1,\"303\":1,\"424\":1,\"449\":1,\"871\":2,\"873\":1,\"880\":2}}],[\"high=\",{\"1\":{\"894\":1}}],[\"highlight\",{\"0\":{\"233\":1}}],[\"hidden\",{\"1\":{\"893\":1}}],[\"history\",{\"1\":{\"445\":1}}],[\"hi\",{\"1\":{\"318\":2,\"925\":1}}],[\"hibernate\",{\"1\":{\"286\":1,\"303\":1,\"324\":1}}],[\"h1最大\",{\"1\":{\"875\":1}}],[\"h1\",{\"1\":{\"226\":1}}],[\"h2o\",{\"1\":{\"221\":1}}],[\"hobbies\",{\"0\":{\"945\":1}}],[\"hover\",{\"1\":{\"928\":2}}],[\"hosted\",{\"1\":{\"627\":1,\"628\":1}}],[\"hosts\",{\"0\":{\"475\":1},\"1\":{\"475\":6,\"561\":1}}],[\"hot\",{\"1\":{\"610\":1,\"612\":1}}],[\"honda\",{\"1\":{\"288\":1}}],[\"hope\",{\"1\":{\"227\":1}}],[\"how\",{\"1\":{\"209\":1}}],[\"homebrew\",{\"1\":{\"465\":1,\"466\":4}}],[\"homebrewcn\",{\"1\":{\"465\":1}}],[\"homeview\",{\"1\":{\"330\":7}}],[\"homepage\",{\"1\":{\"17\":2,\"19\":1}}],[\"home\",{\"0\":{\"17\":1,\"18\":1},\"1\":{\"17\":1,\"19\":2,\"330\":4,\"331\":4,\"627\":1}}],[\"hap\",{\"1\":{\"602\":1}}],[\"hat\",{\"1\":{\"431\":1}}],[\"handling\",{\"1\":{\"566\":1}}],[\"handler\",{\"1\":{\"314\":1}}],[\"handler分类法\",{\"1\":{\"42\":1}}],[\"hanlerequest\",{\"1\":{\"314\":1}}],[\"harmonyos和automatically\",{\"1\":{\"595\":1}}],[\"harmony\",{\"1\":{\"288\":1,\"290\":1,\"776\":2}}],[\"hasnext\",{\"1\":{\"317\":5}}],[\"hashmap<string\",{\"1\":{\"312\":1}}],[\"hashmap\",{\"1\":{\"312\":3,\"316\":1}}],[\"hashtable<string\",{\"1\":{\"306\":2}}],[\"hashtable\",{\"1\":{\"306\":3}}],[\"hasbeard\",{\"1\":{\"288\":1}}],[\"has\",{\"1\":{\"205\":1,\"212\":1,\"216\":1,\"288\":1}}],[\"height\",{\"1\":{\"843\":5,\"927\":3}}],[\"helvetica\",{\"1\":{\"920\":1,\"922\":1}}],[\"help\",{\"1\":{\"571\":1,\"593\":1}}],[\"helper\",{\"1\":{\"421\":1}}],[\"hello\",{\"1\":{\"288\":1,\"305\":2,\"318\":2,\"724\":3}}],[\"helloworld\",{\"1\":{\"288\":2,\"477\":1,\"721\":1}}],[\"hexnum\",{\"1\":{\"724\":1}}],[\"hex\",{\"1\":{\"320\":3}}],[\"hexaobserver\",{\"1\":{\"320\":4}}],[\"hexadicimal\",{\"1\":{\"63\":1}}],[\"head>\",{\"1\":{\"880\":1}}],[\"head>内可以放<title><\",{\"1\":{\"873\":1}}],[\"header中不需要指定content\",{\"1\":{\"685\":1}}],[\"header\",{\"1\":{\"612\":1,\"925\":1}}],[\"headers\",{\"1\":{\"556\":1}}],[\"headers=self\",{\"1\":{\"556\":2}}],[\"heademployee\",{\"1\":{\"309\":3}}],[\"headmarketing\",{\"1\":{\"309\":4}}],[\"head\",{\"1\":{\"309\":4,\"334\":1,\"873\":1}}],[\"headsales\",{\"1\":{\"309\":4}}],[\"here\",{\"1\":{\"17\":1,\"228\":1,\"288\":1,\"527\":1,\"531\":1}}],[\"h\",{\"1\":{\"63\":2,\"445\":1,\"487\":2}}],[\"pc中chrome下有x号\",{\"1\":{\"893\":1}}],[\"p>\",{\"1\":{\"872\":1,\"880\":1}}],[\"php\",{\"1\":{\"720\":2}}],[\"py中配置\",{\"1\":{\"557\":1}}],[\"py中可以导出数据\",{\"1\":{\"556\":1}}],[\"pypi\",{\"1\":{\"545\":7}}],[\"python3\",{\"1\":{\"544\":1}}],[\"python2\",{\"1\":{\"544\":1}}],[\"python\",{\"0\":{\"541\":1,\"543\":1},\"1\":{\"260\":1,\"720\":2}}],[\"pipes\",{\"1\":{\"566\":1}}],[\"pipelines中\",{\"0\":{\"558\":1}}],[\"pip\",{\"1\":{\"544\":1,\"545\":2,\"553\":1}}],[\"p操作的进程继续进行\",{\"1\":{\"505\":1}}],[\"p操作\",{\"1\":{\"505\":1}}],[\"p\",{\"1\":{\"487\":1,\"504\":1,\"580\":1,\"843\":1,\"874\":1,\"922\":1,\"927\":1,\"933\":1}}],[\"pwd\",{\"1\":{\"445\":1}}],[\"pnpm\",{\"1\":{\"413\":1},\"2\":{\"416\":1}}],[\"pnpm将它保存在机器上的一个全局存储中\",{\"1\":{\"413\":1}}],[\"png\",{\"1\":{\"134\":1,\"155\":1}}],[\"performant\",{\"1\":{\"413\":1}}],[\"persons\",{\"1\":{\"308\":25}}],[\"person\",{\"1\":{\"288\":6,\"308\":46}}],[\"pound\",{\"1\":{\"884\":1}}],[\"postman增加对应接口的调试条目\",{\"1\":{\"576\":1}}],[\"post\",{\"1\":{\"572\":1}}],[\"postbuffer\",{\"1\":{\"424\":1}}],[\"powershell\",{\"1\":{\"477\":1}}],[\"pojo\",{\"1\":{\"326\":1,\"329\":1,\"333\":3}}],[\"pop3\",{\"1\":{\"286\":1,\"303\":1}}],[\"portfolio\",{\"0\":{\"18\":1},\"1\":{\"19\":3}}],[\"pubspec\",{\"1\":{\"628\":1}}],[\"pub\",{\"1\":{\"627\":1,\"628\":3}}],[\"publicmethod\",{\"1\":{\"288\":1}}],[\"publicproperty\",{\"1\":{\"288\":1}}],[\"public\",{\"1\":{\"228\":1,\"288\":4,\"303\":11,\"304\":23,\"305\":17,\"306\":19,\"307\":13,\"308\":22,\"309\":8,\"310\":13,\"311\":14,\"312\":11,\"313\":9,\"314\":14,\"315\":15,\"316\":15,\"317\":12,\"318\":9,\"319\":13,\"320\":18,\"321\":14,\"322\":15,\"323\":13,\"324\":6,\"325\":23,\"326\":16,\"327\":16,\"328\":17,\"329\":18,\"330\":12,\"331\":21,\"332\":19,\"333\":13,\"637\":2,\"871\":1}}],[\"pull\",{\"1\":{\"579\":1,\"581\":1}}],[\"put\",{\"1\":{\"306\":4,\"312\":1,\"457\":1,\"572\":1}}],[\"push操作后\",{\"1\":{\"420\":1}}],[\"push\",{\"1\":{\"251\":1,\"252\":2,\"288\":1,\"421\":1,\"425\":4,\"724\":1}}],[\"padding\",{\"1\":{\"843\":1,\"909\":1,\"923\":2,\"926\":1}}],[\"pause\",{\"1\":{\"478\":1}}],[\"passport\",{\"0\":{\"568\":1},\"1\":{\"568\":4}}],[\"pass\",{\"1\":{\"556\":1}}],[\"passwd\",{\"1\":{\"445\":2}}],[\"password\",{\"1\":{\"421\":1,\"433\":1,\"893\":1}}],[\"paste\",{\"1\":{\"418\":1}}],[\"pastespecial\",{\"1\":{\"418\":1}}],[\"pasical\",{\"1\":{\"260\":1}}],[\"patchflag\",{\"1\":{\"864\":5}}],[\"patch\",{\"1\":{\"864\":6}}],[\"path=f\",{\"1\":{\"627\":2}}],[\"path=$path\",{\"1\":{\"458\":2}}],[\"path\",{\"1\":{\"418\":2,\"566\":1,\"627\":3,\"638\":1}}],[\"pattern=\",{\"1\":{\"895\":1}}],[\"pattern\",{\"0\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"308\":2,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1},\"1\":{\"279\":5,\"280\":8,\"281\":12,\"282\":8,\"307\":1,\"334\":1,\"487\":1,\"895\":1}}],[\"patterns\",{\"0\":{\"279\":1,\"280\":1,\"281\":1},\"1\":{\"334\":7}}],[\"packages\",{\"1\":{\"431\":1}}],[\"package\",{\"0\":{\"410\":1},\"1\":{\"411\":2,\"739\":1}}],[\"parentheses\",{\"1\":{\"927\":1}}],[\"parent\",{\"1\":{\"869\":2}}],[\"parser\",{\"1\":{\"738\":1}}],[\"parse\",{\"1\":{\"556\":3}}],[\"parsed\",{\"1\":{\"211\":1}}],[\"partner\",{\"1\":{\"610\":1,\"612\":1}}],[\"parts\",{\"1\":{\"325\":4}}],[\"partition\",{\"1\":{\"252\":1}}],[\"partial文件命名要注意\",{\"1\":{\"924\":1}}],[\"partial\",{\"0\":{\"924\":1},\"1\":{\"218\":1}}],[\"partial^r\",{\"1\":{\"218\":1}}],[\"paragraph\",{\"1\":{\"202\":26,\"487\":2}}],[\"pages\",{\"1\":{\"208\":2}}],[\"page\",{\"0\":{\"225\":1,\"226\":1,\"227\":1,\"228\":1},\"1\":{\"17\":1,\"19\":2,\"199\":4,\"205\":2,\"210\":1,\"225\":1,\"226\":2,\"227\":2,\"229\":1,\"330\":7,\"334\":1},\"2\":{\"231\":1}}],[\"pre>\",{\"1\":{\"880\":1}}],[\"pre\",{\"1\":{\"874\":1}}],[\"prettysure\",{\"1\":{\"724\":2}}],[\"preferences\",{\"1\":{\"596\":1,\"629\":1}}],[\"prefix\",{\"1\":{\"556\":2}}],[\"prevent\",{\"1\":{\"860\":1}}],[\"preview注解\",{\"1\":{\"597\":1}}],[\"prev\",{\"1\":{\"199\":1}}],[\"price\",{\"1\":{\"894\":1}}],[\"principle\",{\"0\":{\"336\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"342\":1}}],[\"printdata\",{\"1\":{\"328\":3}}],[\"printstudentdetails\",{\"1\":{\"326\":2}}],[\"printstacktrace\",{\"1\":{\"306\":1}}],[\"printpersons\",{\"1\":{\"308\":5}}],[\"println\",{\"1\":{\"303\":3,\"304\":6,\"305\":1,\"306\":6,\"307\":2,\"308\":5,\"309\":3,\"310\":6,\"311\":3,\"312\":2,\"313\":3,\"314\":3,\"315\":2,\"316\":2,\"317\":1,\"318\":1,\"319\":3,\"320\":5,\"321\":4,\"322\":5,\"323\":3,\"324\":7,\"325\":4,\"326\":3,\"327\":2,\"328\":1,\"329\":4,\"330\":4,\"331\":3,\"332\":5,\"333\":4}}],[\"print\",{\"1\":{\"205\":1,\"556\":1,\"613\":1}}],[\"privatefunction\",{\"1\":{\"288\":3}}],[\"privatevariable\",{\"1\":{\"288\":2}}],[\"private\",{\"1\":{\"288\":1,\"305\":14,\"306\":2,\"307\":1,\"308\":7,\"309\":4,\"310\":1,\"311\":3,\"312\":9,\"313\":4,\"314\":1,\"315\":5,\"316\":5,\"317\":1,\"318\":1,\"319\":3,\"320\":2,\"321\":1,\"323\":1,\"326\":5,\"327\":3,\"328\":4,\"329\":2,\"330\":5,\"331\":2,\"332\":2,\"333\":2}}],[\"practice\",{\"0\":{\"186\":1,\"188\":1,\"190\":1,\"193\":1}}],[\"progress>\",{\"1\":{\"894\":1}}],[\"progress\",{\"1\":{\"894\":1}}],[\"programdata\",{\"1\":{\"627\":4,\"638\":1}}],[\"programming\",{\"1\":{\"334\":1}}],[\"promise对象\",{\"0\":{\"794\":1}}],[\"promise\",{\"0\":{\"771\":1},\"1\":{\"673\":1}}],[\"prompt\",{\"1\":{\"418\":4}}],[\"prop\",{\"1\":{\"867\":1}}],[\"props\",{\"1\":{\"864\":1}}],[\"proposal\",{\"1\":{\"671\":1}}],[\"properties文件中的config和system的path\",{\"1\":{\"627\":1}}],[\"properties\",{\"0\":{\"952\":1},\"1\":{\"627\":1}}],[\"property\",{\"1\":{\"288\":1,\"724\":1,\"867\":1}}],[\"production环境配置文件中变量名必须以vue\",{\"1\":{\"868\":1}}],[\"product\",{\"1\":{\"613\":1}}],[\"provider\",{\"1\":{\"575\":1,\"629\":1}}],[\"providers\",{\"1\":{\"566\":1}}],[\"provides\",{\"1\":{\"213\":1}}],[\"profile\",{\"1\":{\"458\":5}}],[\"protect\",{\"1\":{\"313\":1}}],[\"protected\",{\"1\":{\"306\":1,\"307\":2,\"310\":1,\"314\":6,\"320\":1,\"322\":1}}],[\"prototypepatterndemo\",{\"1\":{\"306\":3}}],[\"prototype\",{\"0\":{\"306\":1},\"1\":{\"279\":2,\"288\":8}}],[\"proxy和reflect\",{\"0\":{\"789\":1}}],[\"proxypatterndemo\",{\"1\":{\"313\":1}}],[\"proxyimage\",{\"1\":{\"313\":5}}],[\"proxy\",{\"0\":{\"313\":1},\"1\":{\"280\":2,\"582\":1}}],[\"process\",{\"1\":{\"558\":1,\"638\":1}}],[\"processor\",{\"1\":{\"260\":1}}],[\"processing\",{\"0\":{\"35\":1},\"1\":{\"327\":4}}],[\"prolog\",{\"1\":{\"260\":1}}],[\"project\",{\"0\":{\"17\":1},\"1\":{\"17\":2,\"576\":1,\"595\":2,\"739\":1}}],[\"ps默认会使用lorem默认填充\",{\"1\":{\"181\":1}}],[\"ps\",{\"0\":{\"168\":1},\"1\":{\"445\":2,\"579\":1}}],[\"psd\",{\"1\":{\"155\":1}}],[\"ps和ai都只是工具\",{\"1\":{\"132\":1,\"168\":1}}],[\"psw状态条件寄存器\",{\"1\":{\"37\":1}}],[\"p2p\",{\"1\":{\"127\":1}}],[\"pki\",{\"0\":{\"116\":1}}],[\"plain\",{\"1\":{\"927\":1}}],[\"platforms\",{\"1\":{\"638\":1}}],[\"platform\",{\"1\":{\"627\":1}}],[\"playground\",{\"1\":{\"719\":1}}],[\"playing\",{\"1\":{\"324\":4}}],[\"play\",{\"1\":{\"324\":4}}],[\"player\",{\"1\":{\"321\":4}}],[\"plan\",{\"1\":{\"219\":2}}],[\"placeholder\",{\"1\":{\"895\":1}}],[\"placeholder=\",{\"1\":{\"860\":1,\"895\":1}}],[\"placeorders\",{\"1\":{\"315\":2}}],[\"place\",{\"1\":{\"17\":1,\"228\":1}}],[\"plugin\",{\"1\":{\"213\":1,\"637\":1,\"638\":1}}],[\"plugins下面\",{\"1\":{\"637\":1}}],[\"plugins\",{\"1\":{\"211\":1,\"594\":1}}],[\"please\",{\"1\":{\"17\":1,\"19\":1,\"209\":1,\"212\":1,\"228\":1}}],[\"花游夺金\",{\"1\":{\"16\":1}}],[\"郑钦文创造历史\",{\"1\":{\"16\":1}}],[\"75\",{\"1\":{\"927\":3}}],[\"7指的是gitlab的版本和安装包适用于red\",{\"1\":{\"431\":1}}],[\"76\",{\"1\":{\"312\":1}}],[\"768+12288\",{\"1\":{\"259\":1}}],[\"78\",{\"1\":{\"312\":1}}],[\"70\",{\"1\":{\"312\":1,\"894\":1}}],[\"71\",{\"1\":{\"312\":1}}],[\"72\",{\"1\":{\"310\":1}}],[\"7\",{\"0\":{\"583\":1,\"699\":1,\"786\":1,\"879\":1,\"928\":1},\"1\":{\"251\":2,\"252\":2,\"304\":1,\"306\":1,\"313\":1,\"327\":1,\"331\":1,\"332\":1,\"431\":3,\"447\":2,\"596\":1,\"736\":1,\"893\":1,\"895\":1}}],[\"7月到8月12日\",{\"1\":{\"16\":1}}],[\"7在2024年6月30日停止技术服务支持\",{\"1\":{\"15\":1}}],[\"公告指出\",{\"1\":{\"15\":1}}],[\"ccc\",{\"1\":{\"926\":1}}],[\"css的扩展语法\",{\"1\":{\"920\":1}}],[\"css预处理\",{\"2\":{\"919\":1,\"938\":1,\"940\":1}}],[\"css预处理器\",{\"0\":{\"850\":1}}],[\"css\",{\"0\":{\"606\":1,\"714\":1,\"847\":1},\"1\":{\"613\":10,\"880\":1,\"927\":1,\"929\":5}}],[\"csv头部\",{\"1\":{\"558\":1}}],[\"csv\",{\"1\":{\"558\":4}}],[\"ckyl\",{\"1\":{\"582\":1}}],[\"cf\",{\"1\":{\"582\":1}}],[\"cyou\",{\"1\":{\"582\":2}}],[\"cyclic\",{\"0\":{\"73\":1}}],[\"cw\",{\"1\":{\"487\":1}}],[\"ctl\",{\"1\":{\"431\":1,\"433\":2}}],[\"ctri\",{\"1\":{\"319\":1}}],[\"ctrl+s\",{\"1\":{\"487\":1}}],[\"ctrl+v\",{\"1\":{\"487\":1}}],[\"ctrl+v可以进入可视模式\",{\"1\":{\"486\":1}}],[\"ctrl+r\",{\"1\":{\"487\":1}}],[\"ctrl++\",{\"1\":{\"174\":1}}],[\"ctrl+alt+shift+k\",{\"1\":{\"173\":1}}],[\"ctrl\",{\"1\":{\"135\":2,\"143\":4,\"155\":2,\"174\":25,\"177\":2,\"184\":5,\"185\":5,\"487\":2,\"596\":1}}],[\"cn\",{\"1\":{\"431\":1,\"449\":1,\"545\":4,\"582\":4,\"583\":2,\"628\":1}}],[\"cd\",{\"0\":{\"375\":1},\"1\":{\"445\":3,\"458\":1,\"477\":2,\"478\":2}}],[\"cdots\",{\"1\":{\"218\":1}}],[\"cgo\",{\"1\":{\"328\":3}}],[\"cunkai\",{\"1\":{\"465\":1}}],[\"curd\",{\"1\":{\"572\":1}}],[\"curl\",{\"1\":{\"431\":1,\"447\":1,\"458\":1,\"465\":1}}],[\"current\",{\"1\":{\"319\":2,\"571\":1,\"612\":1}}],[\"custom\",{\"1\":{\"566\":1}}],[\"customers\",{\"1\":{\"322\":2}}],[\"customer4\",{\"1\":{\"322\":2}}],[\"customer3\",{\"1\":{\"322\":2}}],[\"customer2\",{\"1\":{\"322\":2}}],[\"customer1\",{\"1\":{\"322\":2}}],[\"customerfactory\",{\"1\":{\"322\":8}}],[\"customer\",{\"1\":{\"322\":3}}],[\"customize\",{\"1\":{\"205\":1,\"627\":2}}],[\"cmd\",{\"0\":{\"837\":1},\"1\":{\"315\":1,\"477\":1,\"478\":4,\"580\":1}}],[\"cmyk模式\",{\"1\":{\"155\":1}}],[\"certificate\",{\"1\":{\"431\":1}}],[\"ce\",{\"1\":{\"431\":8}}],[\"cells\",{\"1\":{\"418\":4}}],[\"ceo\",{\"1\":{\"309\":7}}],[\"cent\",{\"1\":{\"884\":1}}],[\"center\",{\"1\":{\"610\":1,\"612\":1,\"874\":1}}],[\"central\",{\"0\":{\"35\":1}}],[\"centos\",{\"0\":{\"15\":1,\"583\":1},\"1\":{\"15\":1,\"444\":1,\"447\":6}}],[\"cli\",{\"1\":{\"576\":1}}],[\"client\",{\"1\":{\"327\":10,\"328\":10,\"331\":11,\"332\":2,\"333\":1,\"566\":1}}],[\"cloud\",{\"1\":{\"391\":1,\"582\":1,\"637\":1}}],[\"close\",{\"0\":{\"336\":1},\"1\":{\"418\":1,\"558\":2}}],[\"clonable\",{\"1\":{\"306\":1}}],[\"clonedshape3\",{\"1\":{\"306\":2}}],[\"clonedshape2\",{\"1\":{\"306\":2}}],[\"clonedshape\",{\"1\":{\"306\":2}}],[\"clonenotsupportedexception\",{\"1\":{\"306\":1}}],[\"clone\",{\"1\":{\"306\":9,\"421\":4}}],[\"cloneable\",{\"1\":{\"306\":4}}],[\"clean\",{\"1\":{\"453\":1,\"556\":2,\"639\":1}}],[\"clear和vertical\",{\"1\":{\"912\":1}}],[\"clearable\",{\"1\":{\"860\":1}}],[\"clear\",{\"1\":{\"315\":1}}],[\"clerk2\",{\"1\":{\"309\":2}}],[\"clerk1\",{\"1\":{\"309\":2}}],[\"class的命名\",{\"0\":{\"613\":1}}],[\"classes\",{\"1\":{\"566\":1}}],[\"class=\",{\"1\":{\"556\":1,\"860\":1,\"880\":1}}],[\"classloder\",{\"1\":{\"305\":2}}],[\"class\",{\"0\":{\"796\":1},\"1\":{\"303\":5,\"304\":11,\"305\":10,\"306\":6,\"307\":5,\"308\":7,\"309\":2,\"310\":5,\"311\":5,\"312\":3,\"313\":3,\"314\":5,\"315\":5,\"316\":4,\"317\":3,\"318\":3,\"319\":4,\"320\":6,\"321\":4,\"322\":5,\"323\":5,\"324\":4,\"325\":6,\"326\":4,\"327\":6,\"328\":6,\"329\":4,\"330\":5,\"331\":7,\"332\":6,\"333\":3,\"556\":1,\"558\":1,\"673\":1,\"867\":2}}],[\"cite\",{\"1\":{\"875\":1}}],[\"ci\",{\"0\":{\"375\":1,\"434\":1},\"1\":{\"434\":1}}],[\"circlemap\",{\"1\":{\"312\":3}}],[\"circle\",{\"1\":{\"303\":9,\"304\":9,\"306\":12,\"307\":9,\"310\":12,\"311\":8,\"312\":46}}],[\"civic\",{\"1\":{\"288\":3}}],[\"cisc\",{\"1\":{\"48\":1}}],[\"cisc和risc\",{\"0\":{\"48\":1}}],[\"crud\",{\"1\":{\"567\":1}}],[\"crawl\",{\"1\":{\"554\":2}}],[\"crapy\",{\"1\":{\"554\":1}}],[\"credential\",{\"1\":{\"421\":1}}],[\"creating\",{\"1\":{\"312\":6,\"332\":4}}],[\"creator\",{\"1\":{\"304\":1}}],[\"createrenderer\",{\"1\":{\"866\":1}}],[\"createbackup\",{\"1\":{\"418\":1}}],[\"create\",{\"1\":{\"208\":1,\"229\":1,\"288\":4,\"366\":1,\"431\":1}}],[\"cricket\",{\"1\":{\"324\":9}}],[\"criteriapatterndemo\",{\"1\":{\"308\":2}}],[\"criteriasingle\",{\"1\":{\"308\":3}}],[\"criteriafemale\",{\"1\":{\"308\":3}}],[\"criteriamale\",{\"1\":{\"308\":3}}],[\"criteria\",{\"0\":{\"308\":1},\"1\":{\"280\":1,\"308\":33}}],[\"c++\",{\"0\":{\"538\":1},\"1\":{\"260\":1,\"720\":2}}],[\"c\",{\"0\":{\"537\":1,\"539\":1},\"1\":{\"127\":1,\"155\":1,\"260\":2,\"465\":1,\"478\":1,\"628\":1,\"638\":2,\"720\":4,\"724\":1,\"736\":1,\"880\":1}}],[\"child\",{\"1\":{\"869\":2}}],[\"children\",{\"1\":{\"864\":1}}],[\"chrome支持\",{\"1\":{\"895\":1}}],[\"chrome=1\",{\"1\":{\"880\":1}}],[\"chrome\",{\"1\":{\"693\":1,\"880\":1}}],[\"chrome浏览器中如何防止input\",{\"0\":{\"668\":1}}],[\"chenby\",{\"1\":{\"582\":1}}],[\"checker\",{\"1\":{\"776\":2}}],[\"checked\",{\"1\":{\"305\":1,\"895\":1}}],[\"checkout\",{\"1\":{\"421\":3,\"423\":1}}],[\"checkbox\",{\"1\":{\"309\":1,\"893\":1}}],[\"check\",{\"0\":{\"73\":1},\"1\":{\"431\":1,\"556\":1,\"724\":1,\"739\":1}}],[\"chmod\",{\"1\":{\"445\":1}}],[\"choice\",{\"1\":{\"304\":3}}],[\"choosesort\",{\"1\":{\"251\":2}}],[\"charset=utf\",{\"1\":{\"880\":1}}],[\"change\",{\"1\":{\"320\":4}}],[\"chatroom\",{\"1\":{\"318\":3}}],[\"chatgpt\",{\"0\":{\"11\":1}}],[\"chainpatterndemo\",{\"1\":{\"314\":2}}],[\"chain\",{\"0\":{\"314\":1},\"1\":{\"281\":1,\"331\":1}}],[\"camera\",{\"1\":{\"629\":1}}],[\"callback\",{\"0\":{\"769\":1}}],[\"callback=self\",{\"1\":{\"556\":2}}],[\"call\",{\"0\":{\"808\":1},\"1\":{\"672\":1,\"761\":1,\"815\":1}}],[\"called\",{\"1\":{\"288\":2}}],[\"cask\",{\"1\":{\"467\":1}}],[\"cat\",{\"1\":{\"433\":1,\"445\":2}}],[\"catch\",{\"1\":{\"306\":1}}],[\"category\",{\"1\":{\"227\":1}}],[\"caretaker\",{\"1\":{\"319\":11}}],[\"car\",{\"1\":{\"288\":5}}],[\"caches\",{\"1\":{\"627\":1,\"638\":2}}],[\"cached\",{\"1\":{\"332\":3,\"422\":1}}],[\"cachedshape\",{\"1\":{\"306\":2}}],[\"cache代理\",{\"1\":{\"313\":1}}],[\"cache中的块替换\",{\"1\":{\"54\":1}}],[\"cache中的块与主存中的块\",{\"1\":{\"54\":1}}],[\"cache\",{\"1\":{\"52\":1,\"53\":1,\"332\":11,\"453\":1,\"627\":3,\"628\":1}}],[\"canvas\",{\"0\":{\"896\":1}}],[\"candidate\",{\"1\":{\"671\":1}}],[\"can\",{\"1\":{\"17\":1,\"199\":1,\"205\":2,\"208\":2,\"226\":1,\"227\":1,\"228\":1,\"229\":2,\"288\":2,\"670\":1}}],[\"cookie\",{\"1\":{\"902\":1}}],[\"could\",{\"1\":{\"638\":1}}],[\"count\",{\"1\":{\"288\":1,\"418\":1,\"894\":1}}],[\"core\",{\"0\":{\"950\":1},\"1\":{\"424\":1,\"437\":1,\"638\":2}}],[\"coarsegrainedobject\",{\"1\":{\"328\":4}}],[\"coarse\",{\"1\":{\"328\":1}}],[\"colums\",{\"1\":{\"843\":1}}],[\"columns\",{\"1\":{\"418\":1,\"613\":1,\"843\":1}}],[\"column\",{\"1\":{\"418\":7,\"610\":1,\"612\":1,\"843\":1}}],[\"colleague\",{\"1\":{\"318\":1}}],[\"color=\",{\"1\":{\"875\":1}}],[\"colorname\",{\"1\":{\"724\":1}}],[\"color3\",{\"1\":{\"304\":2}}],[\"color2\",{\"1\":{\"304\":2}}],[\"color1\",{\"1\":{\"304\":2}}],[\"colorfactory\",{\"1\":{\"304\":7}}],[\"color\",{\"1\":{\"220\":1,\"304\":21,\"307\":4,\"310\":3,\"312\":38,\"596\":1,\"613\":3,\"724\":5,\"843\":3,\"893\":2,\"920\":3,\"922\":3,\"926\":4,\"927\":6,\"928\":3,\"929\":2}}],[\"colors\",{\"0\":{\"166\":1},\"1\":{\"167\":1,\"312\":3}}],[\"copyright\",{\"1\":{\"610\":1,\"612\":1}}],[\"copybat\",{\"1\":{\"418\":1}}],[\"copy\",{\"1\":{\"313\":1,\"418\":1,\"477\":1,\"580\":1,\"884\":1}}],[\"codereview\",{\"0\":{\"664\":1}}],[\"codelinter\",{\"1\":{\"596\":1}}],[\"code\",{\"0\":{\"214\":1},\"1\":{\"596\":2,\"736\":3}}],[\"comfortable\",{\"1\":{\"484\":1}}],[\"com\",{\"1\":{\"421\":1,\"425\":4,\"431\":1,\"447\":2,\"465\":1,\"466\":2,\"475\":2,\"545\":3,\"554\":2,\"556\":3,\"582\":2,\"583\":2,\"637\":5}}],[\"common\",{\"1\":{\"880\":1}}],[\"commonjs\",{\"0\":{\"835\":1},\"1\":{\"288\":1,\"290\":1}}],[\"community\",{\"1\":{\"459\":1}}],[\"commit操作后\",{\"1\":{\"420\":1}}],[\"command命令\",{\"0\":{\"477\":1}}],[\"commandpatterndemo\",{\"1\":{\"315\":2}}],[\"command\",{\"0\":{\"315\":1},\"1\":{\"281\":1,\"288\":1,\"315\":2}}],[\"comments\",{\"1\":{\"205\":1,\"929\":1}}],[\"comment\",{\"1\":{\"199\":1,\"225\":1,\"929\":3}}],[\"compiledebugjavawithjavac\",{\"1\":{\"638\":1}}],[\"compiler\",{\"1\":{\"272\":1,\"724\":1}}],[\"compatible\",{\"1\":{\"595\":1,\"880\":1}}],[\"complementary\",{\"1\":{\"927\":1}}],[\"completion\",{\"1\":{\"466\":3,\"596\":1}}],[\"complex\",{\"1\":{\"48\":1}}],[\"compression\",{\"1\":{\"424\":1}}],[\"computer\",{\"1\":{\"325\":13}}],[\"computerpartdisplayvisitor\",{\"1\":{\"325\":4}}],[\"computerpartvisitor\",{\"1\":{\"325\":18}}],[\"computerpart\",{\"1\":{\"325\":9}}],[\"composition\",{\"1\":{\"866\":1}}],[\"compositeentitypatterndemo\",{\"1\":{\"328\":2,\"329\":1}}],[\"compositeentity\",{\"1\":{\"328\":8}}],[\"compositepatterndemo\",{\"1\":{\"309\":2}}],[\"composite\",{\"0\":{\"309\":1,\"328\":1,\"342\":1},\"1\":{\"280\":1,\"282\":1,\"328\":1}}],[\"components\",{\"0\":{\"229\":1},\"1\":{\"229\":1}}],[\"component\",{\"0\":{\"222\":1},\"1\":{\"229\":1,\"309\":1,\"310\":2}}],[\"conf\",{\"0\":{\"586\":1}}],[\"config中\",{\"1\":{\"421\":1}}],[\"configurable\",{\"1\":{\"288\":4}}],[\"configuration\",{\"1\":{\"17\":1,\"19\":1,\"210\":1,\"638\":1}}],[\"config\",{\"0\":{\"210\":1,\"225\":1},\"1\":{\"17\":1,\"227\":1,\"288\":2,\"421\":6,\"424\":2,\"437\":1,\"627\":4},\"2\":{\"231\":1}}],[\"const\",{\"0\":{\"780\":1},\"1\":{\"288\":1,\"736\":2,\"864\":1}}],[\"constructor\",{\"1\":{\"279\":1,\"288\":1}}],[\"consolelogger\",{\"1\":{\"314\":6}}],[\"console\",{\"1\":{\"252\":3,\"288\":6,\"314\":6,\"724\":3,\"727\":1,\"780\":6}}],[\"concrete\",{\"1\":{\"329\":1}}],[\"concat\",{\"1\":{\"252\":2}}],[\"concept\",{\"1\":{\"210\":1}}],[\"converted\",{\"1\":{\"229\":1}}],[\"convert\",{\"1\":{\"208\":1,\"920\":1}}],[\"continuous\",{\"1\":{\"375\":3}}],[\"context\",{\"1\":{\"316\":9,\"321\":22,\"323\":17,\"330\":1,\"332\":5}}],[\"content=\",{\"1\":{\"880\":4}}],[\"content属性是必须的\",{\"1\":{\"873\":1}}],[\"contents\",{\"1\":{\"205\":1}}],[\"content\",{\"0\":{\"228\":1},\"1\":{\"17\":1,\"202\":1,\"211\":1,\"225\":1,\"610\":2,\"612\":1,\"637\":1,\"880\":2,\"912\":2,\"925\":1,\"933\":1}}],[\"control\",{\"1\":{\"288\":1}}],[\"controller负责路由接口\",{\"1\":{\"566\":1}}],[\"controllers\",{\"1\":{\"566\":1}}],[\"controller\",{\"0\":{\"330\":1},\"1\":{\"282\":1,\"326\":6,\"330\":1,\"566\":1,\"567\":2,\"575\":1}}],[\"contributors\",{\"1\":{\"199\":1,\"205\":1}}],[\"container\",{\"1\":{\"309\":1,\"317\":4,\"579\":2,\"610\":1,\"612\":2,\"927\":1}}],[\"contain\",{\"1\":{\"205\":1}}],[\"contains\",{\"1\":{\"205\":1,\"308\":1,\"316\":1}}],[\"cp\",{\"1\":{\"445\":1,\"458\":1}}],[\"cpi\",{\"1\":{\"44\":1}}],[\"cpu使用情况\",{\"1\":{\"445\":1}}],[\"cpu执行时间\",{\"1\":{\"121\":1}}],[\"cpu响应程序中断方式请求是在一条指令执行结束时\",{\"1\":{\"59\":1}}],[\"cpu会响应dma请求开始读取数据\",{\"1\":{\"59\":1}}],[\"cpu主动查询外设是否完成数据传输\",{\"1\":{\"59\":1}}],[\"cpu送出的是主存单元地址\",{\"1\":{\"54\":1}}],[\"cpu内部通用寄存器\",{\"1\":{\"52\":1}}],[\"cpu访问的内存单元地址\",{\"1\":{\"37\":1}}],[\"cpu的核心\",{\"1\":{\"37\":1}}],[\"cpu\",{\"0\":{\"35\":1},\"1\":{\"480\":1}}],[\"拼多多市值超过阿里巴巴\",{\"0\":{\"13\":1}}],[\"高阶函数\",{\"1\":{\"815\":1}}],[\"高级用法\",{\"0\":{\"931\":1}}],[\"高级类型\",{\"1\":{\"722\":1}}],[\"高级程序设计\",{\"1\":{\"677\":1}}],[\"高级\",{\"1\":{\"479\":1}}],[\"高级管理\",{\"1\":{\"401\":1}}],[\"高级语言有其特定的语法和结构\",{\"1\":{\"263\":1}}],[\"高级语言\",{\"0\":{\"260\":1,\"536\":1}}],[\"高层模块不应该依赖低层模块\",{\"1\":{\"338\":1}}],[\"高层模块调用简单\",{\"1\":{\"309\":1}}],[\"高翠兰本人和孙悟空都实现了这个接口\",{\"1\":{\"313\":1}}],[\"高度抽象\",{\"1\":{\"271\":1}}],[\"高效\",{\"1\":{\"260\":2}}],[\"高速缓存cache\",{\"0\":{\"54\":1}}],[\"高扩展性\",{\"0\":{\"7\":1},\"1\":{\"313\":1}}],[\"高可用\",{\"0\":{\"6\":1}}],[\"高性能的http和反向代理web服务器\",{\"1\":{\"584\":1}}],[\"高性能npm\",{\"1\":{\"413\":1}}],[\"高性能\",{\"0\":{\"5\":1}}],[\"赢得程序员的尊重\",{\"1\":{\"4\":1}}],[\"不是div\",{\"1\":{\"893\":1}}],[\"不再支持以点分隔的字符串路径\",{\"1\":{\"867\":1}}],[\"不再支持点分隔字符串路径\",{\"1\":{\"867\":1}}],[\"不再注册\",{\"1\":{\"867\":1}}],[\"不兼容的change\",{\"0\":{\"867\":1}}],[\"不支持新的语法所致\",{\"1\":{\"861\":1}}],[\"不受限于\",{\"1\":{\"738\":1}}],[\"不预先确定的数据类型\",{\"1\":{\"734\":1}}],[\"不建议使用异构枚举\",{\"1\":{\"724\":1}}],[\"不建议使用第\",{\"1\":{\"305\":1}}],[\"不知道传参的类型\",{\"1\":{\"720\":1}}],[\"不许改变变量的数据类型\",{\"1\":{\"720\":1}}],[\"不会换行\",{\"1\":{\"909\":1}}],[\"不会出错\",{\"1\":{\"704\":2}}],[\"不会跟着改变\",{\"1\":{\"627\":1}}],[\"不会相互耦合\",{\"1\":{\"310\":1}}],[\"不保存\",{\"1\":{\"487\":1}}],[\"不论位于什么模式下\",{\"1\":{\"486\":1}}],[\"不论一幅画有没有画框都可以挂在墙上\",{\"1\":{\"310\":1}}],[\"不仅兼容vi的所有指令\",{\"1\":{\"483\":1}}],[\"不仅用在编程程序设计中\",{\"1\":{\"273\":1}}],[\"不要拿来做不好的事情\",{\"0\":{\"549\":1}}],[\"不要让它成为一个负担\",{\"1\":{\"483\":1}}],[\"不要求线程安全\",{\"1\":{\"305\":1}}],[\"不涉及其他\",{\"1\":{\"366\":1}}],[\"不考虑计算机的具体实现\",{\"1\":{\"366\":1}}],[\"不输出\",{\"1\":{\"356\":1}}],[\"不含数据的栈叫空栈\",{\"1\":{\"355\":1}}],[\"不跟\",{\"1\":{\"341\":1}}],[\"不正常状态和超常状态\",{\"1\":{\"321\":1}}],[\"不应当在职责混乱的时候使用\",{\"1\":{\"318\":1}}],[\"不应该随着内部状态的变化而变化\",{\"1\":{\"312\":1}}],[\"不应该具体实现\",{\"1\":{\"310\":1}}],[\"不符合开闭原则\",{\"1\":{\"311\":1}}],[\"不用安装\",{\"1\":{\"602\":1}}],[\"不用https方式\",{\"1\":{\"424\":1}}],[\"不用管里面具体怎么实现的\",{\"1\":{\"307\":1}}],[\"不用每次刷新都在数据库里加一次\",{\"1\":{\"305\":1}}],[\"不一定被初始化\",{\"1\":{\"305\":1}}],[\"不过因为玩过less\",{\"1\":{\"920\":1}}],[\"不过\",{\"1\":{\"305\":2}}],[\"不合法的构造函数\",{\"1\":{\"305\":1}}],[\"不能嵌套块级元素\",{\"1\":{\"909\":1}}],[\"不能被提交\",{\"1\":{\"895\":1}}],[\"不能定制样式\",{\"1\":{\"893\":1}}],[\"不能再标记的尖括号之内\",{\"1\":{\"873\":1}}],[\"不能去修改原有的代码\",{\"1\":{\"336\":1}}],[\"不能保证请求一定被接收\",{\"1\":{\"314\":1}}],[\"不能通过\",{\"1\":{\"305\":1}}],[\"不能继承\",{\"1\":{\"305\":1}}],[\"不能纠错crc编码计算步骤\",{\"1\":{\"73\":1}}],[\"不需要知道集合对象的底层表示\",{\"1\":{\"317\":1}}],[\"不需要实例化该类的对象\",{\"1\":{\"305\":1}}],[\"不需要显式指定它们的类\",{\"1\":{\"304\":1}}],[\"不易整体进行把握\",{\"1\":{\"284\":1}}],[\"不依赖于机器硬件\",{\"0\":{\"260\":1}}],[\"不可以有歧义\",{\"1\":{\"238\":1}}],[\"不确定性\",{\"1\":{\"120\":1}}],[\"不采用流水线技术\",{\"1\":{\"49\":1}}],[\"不同于旧的sass语法\",{\"1\":{\"920\":1}}],[\"不同级别对应显示大小不同的标题\",{\"1\":{\"875\":1}}],[\"不同的方式来遍历整个整合对象\",{\"1\":{\"317\":1}}],[\"不同的处理器族支持不同的指令集体系结构\",{\"1\":{\"43\":1}}],[\"不同cpu\",{\"1\":{\"43\":1}}],[\"不存在变量提升\",{\"1\":{\"780\":1}}],[\"不存在\",{\"1\":{\"42\":1}}],[\"不实际\",{\"1\":{\"42\":1}}],[\"不赞成在业务团队设置专门的架构岗位\",{\"1\":{\"4\":1}}],[\"不断提升自己统筹项目的能力\",{\"1\":{\"1\":1}}],[\"架构部分\",{\"0\":{\"865\":1}}],[\"架构的演进\",{\"0\":{\"693\":1}}],[\"架构\",{\"1\":{\"4\":1}}],[\"架构设计\",{\"0\":{\"4\":1}}],[\"并将生成原生的\",{\"1\":{\"867\":1}}],[\"并根据验证结果决定是否允许继续处理请求\",{\"1\":{\"568\":1}}],[\"并没有使用git\",{\"1\":{\"421\":1}}],[\"并不明确指定其类型\",{\"1\":{\"366\":1}}],[\"并缓存该服务对象\",{\"1\":{\"332\":1}}],[\"并支持松耦合\",{\"1\":{\"318\":1}}],[\"并打印名字\",{\"1\":{\"317\":1}}],[\"并解析它们\",{\"1\":{\"316\":1}}],[\"并定义一个解释器\",{\"1\":{\"316\":1}}],[\"并把删除的行存到剪贴板里\",{\"1\":{\"487\":1}}],[\"并把它传递给服务器\",{\"1\":{\"333\":1}}],[\"并把它发送到客户端或按值传递它\",{\"1\":{\"333\":1}}],[\"并把它们存储在一个\",{\"1\":{\"306\":1}}],[\"并把该命令传给相应的对象\",{\"1\":{\"315\":1}}],[\"并传给调用对象\",{\"1\":{\"315\":1}}],[\"并在\",{\"1\":{\"331\":1}}],[\"并在把请求传给实际目标应用程序之前应用在请求上\",{\"1\":{\"331\":1}}],[\"并在数据变化时更新视图\",{\"1\":{\"326\":1}}],[\"并在该对象之外保存这个状态\",{\"1\":{\"319\":2}}],[\"并在每个记录器中设置下一个记录器\",{\"1\":{\"314\":1}}],[\"并在保持类方法签名完整性的前提下\",{\"1\":{\"310\":1}}],[\"并提供业务对象对业务代表对象的访问\",{\"1\":{\"327\":1}}],[\"并提供对签发人账号上资金的控制\",{\"1\":{\"313\":1}}],[\"并提供一个访问它的全局访问点\",{\"1\":{\"305\":1}}],[\"并向客户端提供了一个客户端可以访问系统的接口\",{\"1\":{\"311\":1}}],[\"并创建该形状\",{\"1\":{\"306\":1}}],[\"并调用它的\",{\"1\":{\"303\":3}}],[\"并最终统一为大众所接受的标准建模语言\",{\"1\":{\"302\":1}}],[\"并且对特定类型的更改做了优化处理\",{\"1\":{\"864\":1}}],[\"并且对\",{\"1\":{\"864\":1}}],[\"并且任何变量都可以分配\",{\"1\":{\"749\":1}}],[\"并且所有类型都是对象类型\",{\"1\":{\"647\":1}}],[\"并且只有一个入口\",{\"1\":{\"372\":1}}],[\"并且只提供单一个方法入口\",{\"1\":{\"288\":1}}],[\"并且使它们可相互替换\",{\"1\":{\"323\":1}}],[\"并且使得小于x的元素数量是k\",{\"1\":{\"254\":1}}],[\"并且可以方便地增加新的状态\",{\"1\":{\"321\":1}}],[\"并且可以根据它的状态改变而改变它的相关行为\",{\"1\":{\"321\":1}}],[\"并且沿着这条链传递请求\",{\"1\":{\"314\":1}}],[\"并且实际上是画框被挂在墙上\",{\"1\":{\"310\":1}}],[\"并且随着扩展功能的增多\",{\"1\":{\"310\":1}}],[\"并且含有内部属性\",{\"1\":{\"309\":1}}],[\"并且通过拷贝这些原型创建新的对象\",{\"1\":{\"306\":1}}],[\"并且是通过使用一个共同的接口来指向新创建的对象\",{\"1\":{\"303\":1}}],[\"并活用\",{\"1\":{\"276\":1}}],[\"并和第i个记录进行交换\",{\"1\":{\"249\":1}}],[\"并可切换水平或垂直\",{\"1\":{\"184\":1}}],[\"并行\",{\"1\":{\"120\":1}}],[\"并行处理机\",{\"0\":{\"50\":1}}],[\"并行处理系统\",{\"1\":{\"41\":1}}],[\"并发\",{\"1\":{\"120\":1}}],[\"并发性\",{\"1\":{\"120\":1}}],[\"并\",{\"1\":{\"96\":1}}],[\"并联\",{\"1\":{\"78\":1}}],[\"并送往对应的部件\",{\"1\":{\"36\":1}}],[\"并关注产品ue背后的决策思考\",{\"1\":{\"1\":1}}],[\"并思考将其与过往的经验相结合\",{\"1\":{\"1\":1}}],[\"站在行业和用户的角度\",{\"1\":{\"1\":1}}],[\"更快\",{\"1\":{\"487\":1}}],[\"更改了一个数据的参数类型\",{\"1\":{\"720\":1}}],[\"更改执行策略\",{\"1\":{\"481\":1}}],[\"更改密码\",{\"1\":{\"445\":1}}],[\"更换为阿里云\",{\"1\":{\"447\":1}}],[\"更换镜像源\",{\"0\":{\"447\":1}}],[\"更换submodule\",{\"1\":{\"422\":1}}],[\"更新版本可解决\",{\"1\":{\"861\":1}}],[\"更新地址\",{\"0\":{\"475\":1}}],[\"更新升级不能直接跨大版本号\",{\"1\":{\"431\":1}}],[\"更新学生\",{\"1\":{\"329\":1,\"333\":1}}],[\"更新模型数据\",{\"1\":{\"326\":1}}],[\"更需要关注\",{\"1\":{\"21\":1}}],[\"更多地关注其底层原理\",{\"1\":{\"1\":1}}],[\"更不要说体会技术带来的乐趣了\",{\"1\":{\"1\":1}}],[\"置身自己于浩瀚的知识中而苦苦挣扎\",{\"1\":{\"1\":1}}],[\"急于求成只会是浮于表面\",{\"1\":{\"1\":1}}],[\"介绍\",{\"0\":{\"1\":1,\"271\":1,\"430\":1,\"443\":1,\"569\":1,\"709\":1}}],[\"a+b+c+d\",{\"1\":{\"736\":1}}],[\"age\",{\"1\":{\"724\":2,\"736\":9}}],[\"agent\",{\"1\":{\"556\":5}}],[\"aot\",{\"1\":{\"643\":2}}],[\"aop\",{\"1\":{\"313\":1}}],[\"at\",{\"1\":{\"724\":1}}],[\"atwood定律\",{\"0\":{\"675\":1}}],[\"atwood\",{\"1\":{\"670\":1}}],[\"attribute\",{\"1\":{\"867\":2}}],[\"attributes\",{\"1\":{\"638\":1}}],[\"attach\",{\"1\":{\"320\":4}}],[\"attack\",{\"1\":{\"305\":1}}],[\"atomic\",{\"1\":{\"595\":1}}],[\"atomhub\",{\"1\":{\"582\":2}}],[\"await\",{\"0\":{\"772\":1},\"1\":{\"673\":1}}],[\"awsl9527\",{\"1\":{\"582\":1}}],[\"awt\",{\"1\":{\"309\":1,\"323\":1}}],[\"a等\",{\"1\":{\"486\":1}}],[\"a=\",{\"1\":{\"478\":1,\"724\":1}}],[\"audio\",{\"0\":{\"898\":1}}],[\"aux\",{\"1\":{\"445\":1}}],[\"autocomplete=\",{\"1\":{\"895\":1}}],[\"autocomplete\",{\"1\":{\"895\":1}}],[\"autocrlf\",{\"1\":{\"437\":1}}],[\"autocrlf选项来实现lf和crlf之间的自动转换\",{\"1\":{\"437\":1}}],[\"autofocus>\",{\"1\":{\"895\":1}}],[\"autofocus\",{\"1\":{\"895\":1}}],[\"authenticating\",{\"1\":{\"331\":2}}],[\"authenticationfilter\",{\"1\":{\"331\":3}}],[\"authenticated\",{\"1\":{\"330\":3}}],[\"author\",{\"0\":{\"0\":1},\"1\":{\"227\":1}}],[\"aaa\",{\"1\":{\"422\":1,\"487\":3,\"556\":1}}],[\"apos\",{\"1\":{\"884\":1}}],[\"appear\",{\"1\":{\"929\":2}}],[\"append\",{\"1\":{\"556\":1}}],[\"appendix\",{\"0\":{\"488\":1}}],[\"apply\",{\"0\":{\"809\":1},\"1\":{\"672\":1,\"815\":1}}],[\"application\",{\"1\":{\"418\":8,\"595\":1,\"670\":1}}],[\"appdata\",{\"1\":{\"628\":1}}],[\"app\",{\"1\":{\"602\":1,\"627\":1,\"866\":1,\"868\":1,\"880\":2}}],[\"api\",{\"1\":{\"329\":1,\"596\":1,\"866\":1,\"867\":6}}],[\"apache\",{\"1\":{\"314\":1}}],[\"available\",{\"1\":{\"322\":3}}],[\"amp\",{\"1\":{\"884\":1}}],[\"am\",{\"1\":{\"288\":3}}],[\"amd\",{\"0\":{\"836\":1},\"1\":{\"288\":1,\"290\":1}}],[\"adrsdk\",{\"1\":{\"638\":1}}],[\"adaptive\",{\"1\":{\"629\":1}}],[\"adapter\",{\"1\":{\"280\":2}}],[\"adt\",{\"1\":{\"366\":1}}],[\"add到暂存区\",{\"1\":{\"421\":1}}],[\"add操作过后\",{\"1\":{\"420\":1}}],[\"addservice\",{\"1\":{\"332\":2}}],[\"addfilter\",{\"1\":{\"331\":2}}],[\"add\",{\"1\":{\"288\":1,\"308\":10,\"309\":8,\"315\":1,\"319\":4,\"320\":1,\"329\":2,\"331\":1,\"332\":1,\"333\":2,\"366\":1,\"418\":1,\"422\":1,\"425\":1,\"638\":1}}],[\"address\",{\"1\":{\"117\":1}}],[\"axios\",{\"0\":{\"619\":1}}],[\"ax\",{\"1\":{\"259\":1}}],[\"abcstock\",{\"1\":{\"315\":13}}],[\"abc\",{\"1\":{\"315\":3}}],[\"abstractcustomer\",{\"1\":{\"322\":9}}],[\"abstractlogger\",{\"1\":{\"314\":18}}],[\"abstractfactorypatterndemo\",{\"1\":{\"304\":2}}],[\"abstractfactory\",{\"1\":{\"304\":9}}],[\"abstract\",{\"0\":{\"304\":1},\"1\":{\"279\":2,\"304\":3,\"306\":2,\"307\":2,\"310\":1,\"314\":2,\"320\":2,\"322\":3,\"324\":4}}],[\"absolute\",{\"1\":{\"228\":1}}],[\"about\",{\"0\":{\"0\":1}}],[\"aside\",{\"1\":{\"927\":1}}],[\"async\",{\"0\":{\"772\":1},\"1\":{\"673\":1}}],[\"ascii=false\",{\"1\":{\"558\":1}}],[\"associate\",{\"1\":{\"487\":1}}],[\"assets\",{\"1\":{\"228\":1}}],[\"as\",{\"0\":{\"627\":1},\"1\":{\"225\":1,\"226\":1,\"418\":4,\"558\":1,\"627\":7,\"727\":1}}],[\"arguments\",{\"1\":{\"638\":1}}],[\"args\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1}}],[\"artifacttype=\",{\"1\":{\"638\":1}}],[\"article\",{\"0\":{\"202\":1},\"1\":{\"202\":1,\"927\":1}}],[\"arkui\",{\"0\":{\"589\":1}}],[\"arkcompiler\",{\"0\":{\"588\":1}}],[\"arkts是js的超集不同\",{\"1\":{\"642\":1}}],[\"arkts\",{\"0\":{\"587\":1}}],[\"arr3\",{\"1\":{\"724\":1}}],[\"arr2\",{\"1\":{\"724\":1}}],[\"arr1\",{\"1\":{\"724\":1}}],[\"array<number\",{\"1\":{\"724\":1}}],[\"array<number>\",{\"1\":{\"724\":1}}],[\"array\",{\"0\":{\"762\":1},\"1\":{\"722\":1,\"752\":1}}],[\"arraylist<studentvo>\",{\"1\":{\"333\":1}}],[\"arraylist<student>\",{\"1\":{\"329\":1}}],[\"arraylist<service>\",{\"1\":{\"332\":1}}],[\"arraylist<filter>\",{\"1\":{\"331\":1}}],[\"arraylist<observer>\",{\"1\":{\"320\":1}}],[\"arraylist<order>\",{\"1\":{\"315\":1}}],[\"arraylist<memento>\",{\"1\":{\"319\":1}}],[\"arraylist<employee>\",{\"1\":{\"309\":1}}],[\"arraylist<person>\",{\"1\":{\"308\":4}}],[\"arraylist\",{\"1\":{\"308\":4,\"309\":1,\"315\":1,\"319\":1,\"320\":2,\"329\":1,\"331\":1,\"332\":1,\"333\":1}}],[\"arr\",{\"1\":{\"251\":12,\"252\":11,\"724\":1,\"780\":1}}],[\"areas\",{\"1\":{\"418\":3}}],[\"area\",{\"1\":{\"418\":3}}],[\"are\",{\"1\":{\"209\":1,\"227\":1,\"228\":1,\"929\":1}}],[\"activewindow\",{\"1\":{\"418\":1}}],[\"activeworkbook\",{\"1\":{\"418\":1}}],[\"actionscript\",{\"1\":{\"774\":1}}],[\"actionservlet\",{\"1\":{\"315\":1}}],[\"action\",{\"1\":{\"315\":1}}],[\"actual\",{\"1\":{\"202\":1}}],[\"accept\",{\"1\":{\"325\":7}}],[\"access\",{\"0\":{\"329\":1},\"1\":{\"282\":1,\"313\":1,\"329\":2}}],[\"according\",{\"1\":{\"208\":1}}],[\"ac累加寄存器\",{\"1\":{\"37\":1}}],[\"align\",{\"1\":{\"912\":3}}],[\"align属性失效\",{\"1\":{\"912\":1}}],[\"aliyun\",{\"1\":{\"447\":2,\"545\":2,\"637\":4}}],[\"alert\",{\"1\":{\"736\":3}}],[\"allow\",{\"1\":{\"739\":1}}],[\"allowed\",{\"0\":{\"560\":1},\"1\":{\"556\":1}}],[\"all\",{\"1\":{\"453\":1,\"627\":2,\"638\":1}}],[\"al\",{\"1\":{\"445\":1}}],[\"alfa\",{\"1\":{\"391\":1}}],[\"algorithm\",{\"1\":{\"238\":1}}],[\"also\",{\"1\":{\"205\":2,\"226\":1,\"229\":1,\"288\":1}}],[\"alt+左键\",{\"1\":{\"180\":1}}],[\"alt重新调整参数\",{\"1\":{\"174\":1}}],[\"alt\",{\"1\":{\"135\":1,\"143\":1,\"155\":3,\"174\":9,\"177\":2,\"184\":1,\"185\":1,\"596\":1}}],[\"alu算术逻辑单元\",{\"1\":{\"37\":1}}],[\"ai\",{\"0\":{\"132\":1},\"1\":{\"134\":1,\"425\":6}}],[\"a\",{\"0\":{\"559\":1,\"684\":1,\"859\":1},\"1\":{\"17\":1,\"19\":1,\"117\":1,\"174\":1,\"209\":1,\"219\":1,\"229\":1,\"284\":1,\"316\":2,\"320\":1,\"332\":4,\"366\":4,\"445\":2,\"478\":1,\"486\":1,\"487\":6,\"556\":2,\"579\":1,\"627\":2,\"724\":1,\"727\":1,\"736\":1,\"753\":2,\"780\":8,\"877\":1,\"880\":3,\"920\":2,\"923\":1,\"927\":2,\"928\":2,\"929\":1}}],[\"any类型是十分有用的\",{\"1\":{\"724\":1}}],[\"any\",{\"1\":{\"670\":1,\"722\":1,\"724\":4,\"727\":1,\"736\":2}}],[\"anyhub\",{\"1\":{\"582\":1}}],[\"anything\",{\"1\":{\"1\":1}}],[\"ancestor\",{\"1\":{\"556\":1}}],[\"anotherkey\",{\"1\":{\"288\":1}}],[\"androidjdkimage\",{\"1\":{\"638\":1}}],[\"androidstudio\",{\"1\":{\"627\":2}}],[\"android\",{\"0\":{\"474\":1,\"627\":1},\"1\":{\"627\":4,\"637\":1,\"638\":2}}],[\"andexpression\",{\"1\":{\"316\":4}}],[\"andcriteria\",{\"1\":{\"308\":4}}],[\"and\",{\"0\":{\"199\":1,\"221\":1},\"1\":{\"19\":1,\"199\":1,\"205\":3,\"208\":1,\"209\":2,\"213\":1,\"220\":1,\"227\":1,\"229\":1,\"259\":1,\"288\":1,\"332\":4,\"566\":1,\"596\":2}}],[\"an\",{\"1\":{\"17\":1,\"199\":1,\"210\":1,\"314\":9}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
