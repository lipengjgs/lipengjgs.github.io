import{_ as e,c as t,o as r,e as n}from"./app-DbqnuMtl.js";const a={},o=n('<h2 id="二叉树" tabindex="-1"><a class="header-anchor" href="#二叉树"><span>二叉树</span></a></h2><h2 id="最优二叉树-哈夫曼树" tabindex="-1"><a class="header-anchor" href="#最优二叉树-哈夫曼树"><span>最优二叉树（哈夫曼树）</span></a></h2><p>又叫霍夫曼树，是一类带权路径长度最短的树 路径：一个节点到另一个节点的通路 节点的路径长度：路径的分支数目 权：节点的值 节点的带权路径长度：节点到根节点的路径长度乘以该节点的权值 树的带权路径长度：树的所有叶子节点的带权路径长度之和 求法：将两个最小值（左小又大，霍夫曼编码左0右1）放在树的两侧，相加得到根节点，根节点再与剩下的权值放一起取最小的两个同样操作，生成树</p><h2 id="森林" tabindex="-1"><a class="header-anchor" href="#森林"><span>森林</span></a></h2>',4),i=[o];function c(p,l){return r(),t("div",null,i)}const h=e(a,[["render",c],["__file","Tree.html.vue"]]),m=JSON.parse('{"path":"/programming/structure/Tree.html","title":"树","lang":"zh-CN","frontmatter":{"title":"树","footer":"","description":"二叉树 最优二叉树（哈夫曼树） 又叫霍夫曼树，是一类带权路径长度最短的树 路径：一个节点到另一个节点的通路 节点的路径长度：路径的分支数目 权：节点的值 节点的带权路径长度：节点到根节点的路径长度乘以该节点的权值 树的带权路径长度：树的所有叶子节点的带权路径长度之和 求法：将两个最小值（左小又大，霍夫曼编码左0右1）放在树的两侧，相加得到根节点，根节点...","head":[["meta",{"property":"og:url","content":"https://lipengjgs.github.io/programming/structure/Tree.html"}],["meta",{"property":"og:site_name","content":"SE Docs"}],["meta",{"property":"og:title","content":"树"}],["meta",{"property":"og:description","content":"二叉树 最优二叉树（哈夫曼树） 又叫霍夫曼树，是一类带权路径长度最短的树 路径：一个节点到另一个节点的通路 节点的路径长度：路径的分支数目 权：节点的值 节点的带权路径长度：节点到根节点的路径长度乘以该节点的权值 树的带权路径长度：树的所有叶子节点的带权路径长度之和 求法：将两个最小值（左小又大，霍夫曼编码左0右1）放在树的两侧，相加得到根节点，根节点..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-17T13:39:04.000Z"}],["meta",{"property":"article:author","content":"lipengjgs"}],["meta",{"property":"article:modified_time","content":"2024-07-17T13:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"树\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-17T13:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lipengjgs\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"二叉树","slug":"二叉树","link":"#二叉树","children":[]},{"level":2,"title":"最优二叉树（哈夫曼树）","slug":"最优二叉树-哈夫曼树","link":"#最优二叉树-哈夫曼树","children":[]},{"level":2,"title":"森林","slug":"森林","link":"#森林","children":[]}],"git":{"createdTime":1721223544000,"updatedTime":1721223544000,"contributors":[{"name":"jgs","email":"12345@qq.com","commits":1}]},"readingTime":{"minutes":0.61,"words":183},"filePathRelative":"programming/structure/Tree.md","localizedDate":"2024年7月17日","autoDesc":true,"excerpt":"<h2>二叉树</h2>\\n<h2>最优二叉树（哈夫曼树）</h2>\\n<p>又叫霍夫曼树，是一类带权路径长度最短的树\\n路径：一个节点到另一个节点的通路\\n节点的路径长度：路径的分支数目\\n权：节点的值\\n节点的带权路径长度：节点到根节点的路径长度乘以该节点的权值\\n树的带权路径长度：树的所有叶子节点的带权路径长度之和\\n求法：将两个最小值（左小又大，霍夫曼编码左0右1）放在树的两侧，相加得到根节点，根节点再与剩下的权值放一起取最小的两个同样操作，生成树</p>\\n<h2>森林</h2>\\n"}');export{h as comp,m as data};
