import{_ as n,r as l,c as t,b as i,f as s,d as h,w as k,e as a,o as r}from"./app-DQrPXBkm.js";const p={},d=a(`<h1 id="es6" tabindex="-1"><a class="header-anchor" href="#es6"><span>ES6</span></a></h1><h2 id="什么是ecmascript-这里后续都用es代替" tabindex="-1"><a class="header-anchor" href="#什么是ecmascript-这里后续都用es代替"><span>什么是ECMAScript（这里后续都用ES代替）</span></a></h2><ul><li><strong>1991年 世界上第一个网页诞生（蒂姆·伯纳斯·李）</strong></li><li><strong>1995年 Netscape 的 <mark>Brandan Eich</mark> 创造了JavaScript</strong></li><li>1996年 将该语言提交给了ECMA(国际标准化组织)想将其标准化</li><li>ECMA发布了ECMA-262标准文件，将该语言称为ECMAScript(原因是JavaScript是被网景公司注册了的)</li></ul><blockquote><p><mark>所以ECMAScript是JavaScript的规格，而JavaScript算是ECMAScript的一种实现(还有JScript,ActionScript)；平时两词可互换</mark></p></blockquote><h2 id="如何演变到现在的es-6-版本" tabindex="-1"><a class="header-anchor" href="#如何演变到现在的es-6-版本"><span>如何演变到现在的ES 6 版本</span></a></h2><ul><li>1997年: ES 1.0</li><li>1998年: ES 2.0</li><li>1999年: ES 3.0 (成功的通行版本，其后的版本完全继承)</li><li>2000年: ES 4.0 (未通过，太过激进，大部分内容放到了ES6)</li><li>2007年: 预备发布4.0，依旧分歧太大</li><li>2008年: 将部分功能改善的一小部分发布为ES 3.1, 会后不久改为ES 5; 激进的部分改为ESHarmony</li><li>2009年12月: ES5正式发布</li><li>2011年6月：ES5.1发布，成为国际标准</li><li>2013年3月：ESHarmony分出来的可行的构想ES6草案冻结</li><li>2013年12月: ES6发布</li><li><mark>2015年6月：ES6正式成为国际标准, ES2015</mark></li></ul><h2 id="如何查看各浏览器-nodejs对es6的支持度" tabindex="-1"><a class="header-anchor" href="#如何查看各浏览器-nodejs对es6的支持度"><span>如何查看各浏览器/nodejs对ES6的支持度</span></a></h2><ul><li>浏览器</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 阮一峰写的一个工具</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> es-checker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">es-checker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>nodejs</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --v8-options</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> harmony</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --v8-options</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> findstr</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> harmony</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>到目前（2024年）为止，ES6支持度应该还是蛮好的</strong></p></blockquote><h2 id="如何处理es6的兼容问题-即如何使用babel转码器" tabindex="-1"><a class="header-anchor" href="#如何处理es6的兼容问题-即如何使用babel转码器"><span>如何处理ES6的兼容问题(即如何使用Babel转码器)</span></a></h2><ul><li>.babelrc</li><li>从Babel 6.0开始不再提供浏览器版本，所以需要构建</li><li>此外还可利用：在线转换、Traceur转码器</li></ul>`,14),c={id:"新版本es7-请跳转es7",tabindex:"-1"},g={class:"header-anchor",href:"#新版本es7-请跳转es7"},o=a(`<h2 id="es6新特性有哪些" tabindex="-1"><a class="header-anchor" href="#es6新特性有哪些"><span>ES6新特性有哪些</span></a></h2><h3 id="_1-let-和-const" tabindex="-1"><a class="header-anchor" href="#_1-let-和-const"><span>1. let 和 const</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// ReferenceError</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// ReferenceError</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * var 声明的变量 全局范围内有效</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    a</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]() </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * let 声明的变量 块级作用域内有效</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    a</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]() </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * 不存在变量提升, typeof也不再是一个百分百安全的操作</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> bar</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> // ReferenceError</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> bar</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * 暂时性死区</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-变量的解构赋值" tabindex="-1"><a class="header-anchor" href="#_2-变量的解构赋值"><span>2. 变量的解构赋值</span></a></h3><h3 id="_3-字符串扩展" tabindex="-1"><a class="header-anchor" href="#_3-字符串扩展"><span>3. 字符串扩展</span></a></h3><h3 id="_4-正则的扩展" tabindex="-1"><a class="header-anchor" href="#_4-正则的扩展"><span>4. 正则的扩展</span></a></h3><h3 id="_5-数值的扩展" tabindex="-1"><a class="header-anchor" href="#_5-数值的扩展"><span>5. 数值的扩展</span></a></h3><h3 id="_6-数组的扩展" tabindex="-1"><a class="header-anchor" href="#_6-数组的扩展"><span>6. 数组的扩展</span></a></h3><h3 id="_7-函数的扩展" tabindex="-1"><a class="header-anchor" href="#_7-函数的扩展"><span>7. 函数的扩展</span></a></h3><h3 id="_8-对象的扩展" tabindex="-1"><a class="header-anchor" href="#_8-对象的扩展"><span>8. 对象的扩展</span></a></h3><h3 id="_9-symbol" tabindex="-1"><a class="header-anchor" href="#_9-symbol"><span>9. Symbol</span></a></h3><h3 id="_10-proxy和reflect" tabindex="-1"><a class="header-anchor" href="#_10-proxy和reflect"><span>10. Proxy和Reflect</span></a></h3><h3 id="_11-二进制数组" tabindex="-1"><a class="header-anchor" href="#_11-二进制数组"><span>11. 二进制数组</span></a></h3><h3 id="_12-set和map数据结构" tabindex="-1"><a class="header-anchor" href="#_12-set和map数据结构"><span>12. Set和Map数据结构</span></a></h3><h3 id="_13-iterator和for-of循环" tabindex="-1"><a class="header-anchor" href="#_13-iterator和for-of循环"><span>13. Iterator和for of循环</span></a></h3><h3 id="_14-generator函数" tabindex="-1"><a class="header-anchor" href="#_14-generator函数"><span>14. Generator函数</span></a></h3><h3 id="_15-promise对象" tabindex="-1"><a class="header-anchor" href="#_15-promise对象"><span>15. Promise对象</span></a></h3><h3 id="_16-异步操作和async函数" tabindex="-1"><a class="header-anchor" href="#_16-异步操作和async函数"><span>16. 异步操作和async函数</span></a></h3><h3 id="_17-class" tabindex="-1"><a class="header-anchor" href="#_17-class"><span>17. Class</span></a></h3><h3 id="_18-修饰器" tabindex="-1"><a class="header-anchor" href="#_18-修饰器"><span>18. 修饰器</span></a></h3><h3 id="_19-module" tabindex="-1"><a class="header-anchor" href="#_19-module"><span>19. Module</span></a></h3>`,25);function y(E,B){const e=l("RouteLink");return r(),t("div",null,[d,i("h2",c,[i("a",g,[i("span",null,[s("新版本ES7(请"),h(e,{to:"/soft-engineering/fe/fe-basic/js/core/es7.html"},{default:k(()=>[s("跳转ES7")]),_:1}),s(")")])])]),o])}const v=n(p,[["render",y],["__file","es6.html.vue"]]),u=JSON.parse('{"path":"/soft-engineering/fe/fe-basic/js/core/es6.html","title":"ES6","lang":"zh-CN","frontmatter":{"description":"ES6 什么是ECMAScript（这里后续都用ES代替） 1991年 世界上第一个网页诞生（蒂姆·伯纳斯·李） 1995年 Netscape 的 Brandan Eich 创造了JavaScript 1996年 将该语言提交给了ECMA(国际标准化组织)想将其标准化 ECMA发布了ECMA-262标准文件，将该语言称为ECMAScript(原因是Ja...","head":[["meta",{"property":"og:url","content":"https://lipengjgs.github.io/soft-engineering/fe/fe-basic/js/core/es6.html"}],["meta",{"property":"og:site_name","content":"SE Docs"}],["meta",{"property":"og:title","content":"ES6"}],["meta",{"property":"og:description","content":"ES6 什么是ECMAScript（这里后续都用ES代替） 1991年 世界上第一个网页诞生（蒂姆·伯纳斯·李） 1995年 Netscape 的 Brandan Eich 创造了JavaScript 1996年 将该语言提交给了ECMA(国际标准化组织)想将其标准化 ECMA发布了ECMA-262标准文件，将该语言称为ECMAScript(原因是Ja..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T11:43:26.000Z"}],["meta",{"property":"article:author","content":"lipengjgs"}],["meta",{"property":"article:modified_time","content":"2024-06-27T11:43:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ES6\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-27T11:43:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lipengjgs\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"什么是ECMAScript（这里后续都用ES代替）","slug":"什么是ecmascript-这里后续都用es代替","link":"#什么是ecmascript-这里后续都用es代替","children":[]},{"level":2,"title":"如何演变到现在的ES 6 版本","slug":"如何演变到现在的es-6-版本","link":"#如何演变到现在的es-6-版本","children":[]},{"level":2,"title":"如何查看各浏览器/nodejs对ES6的支持度","slug":"如何查看各浏览器-nodejs对es6的支持度","link":"#如何查看各浏览器-nodejs对es6的支持度","children":[]},{"level":2,"title":"如何处理ES6的兼容问题(即如何使用Babel转码器)","slug":"如何处理es6的兼容问题-即如何使用babel转码器","link":"#如何处理es6的兼容问题-即如何使用babel转码器","children":[]},{"level":2,"title":"新版本ES7(请跳转ES7)","slug":"新版本es7-请跳转es7","link":"#新版本es7-请跳转es7","children":[]},{"level":2,"title":"ES6新特性有哪些","slug":"es6新特性有哪些","link":"#es6新特性有哪些","children":[{"level":3,"title":"1. let 和 const","slug":"_1-let-和-const","link":"#_1-let-和-const","children":[]},{"level":3,"title":"2. 变量的解构赋值","slug":"_2-变量的解构赋值","link":"#_2-变量的解构赋值","children":[]},{"level":3,"title":"3. 字符串扩展","slug":"_3-字符串扩展","link":"#_3-字符串扩展","children":[]},{"level":3,"title":"4. 正则的扩展","slug":"_4-正则的扩展","link":"#_4-正则的扩展","children":[]},{"level":3,"title":"5. 数值的扩展","slug":"_5-数值的扩展","link":"#_5-数值的扩展","children":[]},{"level":3,"title":"6. 数组的扩展","slug":"_6-数组的扩展","link":"#_6-数组的扩展","children":[]},{"level":3,"title":"7. 函数的扩展","slug":"_7-函数的扩展","link":"#_7-函数的扩展","children":[]},{"level":3,"title":"8. 对象的扩展","slug":"_8-对象的扩展","link":"#_8-对象的扩展","children":[]},{"level":3,"title":"9. Symbol","slug":"_9-symbol","link":"#_9-symbol","children":[]},{"level":3,"title":"10. Proxy和Reflect","slug":"_10-proxy和reflect","link":"#_10-proxy和reflect","children":[]},{"level":3,"title":"11. 二进制数组","slug":"_11-二进制数组","link":"#_11-二进制数组","children":[]},{"level":3,"title":"12. Set和Map数据结构","slug":"_12-set和map数据结构","link":"#_12-set和map数据结构","children":[]},{"level":3,"title":"13. Iterator和for of循环","slug":"_13-iterator和for-of循环","link":"#_13-iterator和for-of循环","children":[]},{"level":3,"title":"14. Generator函数","slug":"_14-generator函数","link":"#_14-generator函数","children":[]},{"level":3,"title":"15. Promise对象","slug":"_15-promise对象","link":"#_15-promise对象","children":[]},{"level":3,"title":"16. 异步操作和async函数","slug":"_16-异步操作和async函数","link":"#_16-异步操作和async函数","children":[]},{"level":3,"title":"17. Class","slug":"_17-class","link":"#_17-class","children":[]},{"level":3,"title":"18. 修饰器","slug":"_18-修饰器","link":"#_18-修饰器","children":[]},{"level":3,"title":"19. Module","slug":"_19-module","link":"#_19-module","children":[]}]}],"git":{"createdTime":1719488606000,"updatedTime":1719488606000,"contributors":[{"name":"jgs","email":"12345@qq.com","commits":1}]},"readingTime":{"minutes":2.24,"words":673},"filePathRelative":"soft-engineering/fe/fe-basic/js/core/es6.md","localizedDate":"2024年6月27日","autoDesc":true,"excerpt":"\\n<h2>什么是ECMAScript（这里后续都用ES代替）</h2>\\n<ul>\\n<li><strong>1991年 世界上第一个网页诞生（蒂姆·伯纳斯·李）</strong></li>\\n<li><strong>1995年 Netscape 的 <mark>Brandan Eich</mark> 创造了JavaScript</strong></li>\\n<li>1996年 将该语言提交给了ECMA(国际标准化组织)想将其标准化</li>\\n<li>ECMA发布了ECMA-262标准文件，将该语言称为ECMAScript(原因是JavaScript是被网景公司注册了的)</li>\\n</ul>\\n<blockquote>\\n<p><mark>所以ECMAScript是JavaScript的规格，而JavaScript算是ECMAScript的一种实现(还有JScript,ActionScript)；平时两词可互换</mark></p>\\n</blockquote>"}');export{v as comp,u as data};
