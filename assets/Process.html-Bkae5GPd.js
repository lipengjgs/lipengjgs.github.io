import{_ as t,c as i,e as n,o as a}from"./app-B3GjuO38.js";const l="/os/jincheng-santaitu.jpg",s="/os/qianqutu.jpg",o="/os/jincheng-ziyuan.jpg",r={};function p(c,e){return a(),i("div",null,e[0]||(e[0]=[n('<blockquote><p>也称处理机管理</p><p>系统进行资源分配的基本单位</p></blockquote><h2 id="进程组成" tabindex="-1"><a class="header-anchor" href="#进程组成"><span>进程组成</span></a></h2><ul><li>进程控制块PCB（唯一标志）</li><li>程序: 进程要做什么</li><li>数据：存放进程执行时所需数据</li></ul><h2 id="三态图" tabindex="-1"><a class="header-anchor" href="#三态图"><span>三态图</span></a></h2><p><mark>三态图之间的转换</mark>：运行需要CPU，就绪等待CPU，阻塞没有CPU也没有其他必要数据</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="前趋图" tabindex="-1"><a class="header-anchor" href="#前趋图"><span>前趋图</span></a></h2><p>用来表示哪些任务可以并行执行，哪些任务之间有顺序关系</p><p>确定任务键的并行、任务间的先后顺序; 下面是两个前趋图：一个串行，一个并行后串行</p><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="进程资源图" tabindex="-1"><a class="header-anchor" href="#进程资源图"><span>进程资源图</span></a></h2><p>表示进程和资源之间的分配和请求关系</p><p>P - 进程， R - 资源</p><p>当一个进程资源图中所有的进程都是阻塞节点（所请求的资源已经全部分配完毕）时，陷入<mark>死锁状态</mark></p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="进程同步与互斥" tabindex="-1"><a class="header-anchor" href="#进程同步与互斥"><span><mark>进程同步与互斥</mark></span></a></h2><ul><li><strong>临界资源</strong>：各进程间需要以互斥方式对其进行访问的资源， 如生产者与消费者共用一个仓库时，生产者存东西（进程1），消费者取东西（进程2），生产者存东西的时候消费者不能取东西，那么仓库就是临界资源</li><li><strong>临界区</strong>：本质是一段代码（存、取操作的那一段操作）</li><li><strong>互斥</strong>: 如上诉所说的仓库（临界资源）同一时间内只能由一个任务单独使用</li><li><strong>同步</strong>：多个任务并发执行，速度上有差异，如自行车与汽车</li><li><strong>互斥信号量</strong>：初值为1</li><li><strong>同步信号量</strong>：初值一般为共享资源的数量</li></ul><p>P操作： 申请资源， 资源个数减一 S = S - 1 ；若S &gt;= 0, P操作的进程继续进行</p><p>V操作： 释放资源， 资源个数加一 S = S + 1</p><p>前趋图中每个箭头代表一个信号量，前者释放V，后者申请P</p><h2 id="进程调度" tabindex="-1"><a class="header-anchor" href="#进程调度"><span>进程调度</span></a></h2><p>当有更高优先级的进程到来时如何分配CPU，分为可剥夺（强制分配）和不可剥夺（需等待）</p><h2 id="死锁" tabindex="-1"><a class="header-anchor" href="#死锁"><span>死锁</span></a></h2><h2 id="线程" tabindex="-1"><a class="header-anchor" href="#线程"><span>线程</span></a></h2>',24)]))}const h=t(r,[["render",p],["__file","Process.html.vue"]]),d=JSON.parse('{"path":"/cs-basic/os/functions/Process.html","title":"进程管理","lang":"zh-CN","frontmatter":{"title":"进程管理","footer":"","description":"也称处理机管理 系统进行资源分配的基本单位 进程组成 进程控制块PCB（唯一标志） 程序: 进程要做什么 数据：存放进程执行时所需数据 三态图 三态图之间的转换：运行需要CPU，就绪等待CPU，阻塞没有CPU也没有其他必要数据 前趋图 用来表示哪些任务可以并行执行，哪些任务之间有顺序关系 确定任务键的并行、任务间的先后顺序; 下面是两个前趋图：一个串行...","head":[["meta",{"property":"og:url","content":"https://lipengjgs.github.io/cs-basic/os/functions/Process.html"}],["meta",{"property":"og:site_name","content":"SE Docs"}],["meta",{"property":"og:title","content":"进程管理"}],["meta",{"property":"og:description","content":"也称处理机管理 系统进行资源分配的基本单位 进程组成 进程控制块PCB（唯一标志） 程序: 进程要做什么 数据：存放进程执行时所需数据 三态图 三态图之间的转换：运行需要CPU，就绪等待CPU，阻塞没有CPU也没有其他必要数据 前趋图 用来表示哪些任务可以并行执行，哪些任务之间有顺序关系 确定任务键的并行、任务间的先后顺序; 下面是两个前趋图：一个串行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lipengjgs.github.io/os/jincheng-santaitu.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-08T12:45:54.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-08T12:45:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"进程管理\\",\\"image\\":[\\"https://lipengjgs.github.io/os/jincheng-santaitu.jpg\\",\\"https://lipengjgs.github.io/os/qianqutu.jpg\\",\\"https://lipengjgs.github.io/os/jincheng-ziyuan.jpg\\"],\\"dateModified\\":\\"2024-09-08T12:45:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lipengjgs\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"进程组成","slug":"进程组成","link":"#进程组成","children":[]},{"level":2,"title":"三态图","slug":"三态图","link":"#三态图","children":[]},{"level":2,"title":"前趋图","slug":"前趋图","link":"#前趋图","children":[]},{"level":2,"title":"进程资源图","slug":"进程资源图","link":"#进程资源图","children":[]},{"level":2,"title":"进程同步与互斥","slug":"进程同步与互斥","link":"#进程同步与互斥","children":[]},{"level":2,"title":"进程调度","slug":"进程调度","link":"#进程调度","children":[]},{"level":2,"title":"死锁","slug":"死锁","link":"#死锁","children":[]},{"level":2,"title":"线程","slug":"线程","link":"#线程","children":[]}],"git":{"createdTime":1721290604000,"updatedTime":1725799554000,"contributors":[{"name":"jgs","email":"12345@qq.com","commits":2},{"name":"lipengjgs","email":"12345@qq.com","commits":1}]},"readingTime":{"minutes":1.79,"words":536},"filePathRelative":"cs-basic/os/functions/Process.md","localizedDate":"2024年7月18日","autoDesc":true,"excerpt":"<blockquote>\\n<p>也称处理机管理</p>\\n<p>系统进行资源分配的基本单位</p>\\n</blockquote>\\n<h2>进程组成</h2>\\n<ul>\\n<li>进程控制块PCB（唯一标志）</li>\\n<li>程序: 进程要做什么</li>\\n<li>数据：存放进程执行时所需数据</li>\\n</ul>\\n<h2>三态图</h2>\\n<p><mark>三态图之间的转换</mark>：运行需要CPU，就绪等待CPU，阻塞没有CPU也没有其他必要数据</p>\\n<figure><img src=\\"/os/jincheng-santaitu.jpg\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>"}');export{h as comp,d as data};
