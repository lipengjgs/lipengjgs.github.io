import{_ as i,c as s,o as e,e as a}from"./app-DQrPXBkm.js";const t={},n=a(`<h2 id="工程环境安装与配置" tabindex="-1"><a class="header-anchor" href="#工程环境安装与配置"><span><a href="https://docs.flutter.cn/" target="_blank" rel="noopener noreferrer">工程环境安装与配置</a></span></a></h2><h3 id="windows-下用-vscode-或者-as-android-studio-进行开发" tabindex="-1"><a class="header-anchor" href="#windows-下用-vscode-或者-as-android-studio-进行开发"><span>windows 下用 VSCode 或者 AS (Android Studio) 进行开发</span></a></h3><p>Flutter部分</p><ul><li>下载 flutter SDK，一般里面已经包括了Dart SDK</li><li>配置flutter环境变量、Dart环境变量和相关镜像站点环境变量(毕竟国内)：<code>PUB_HOSTED_URL</code> 和 <code>FLUTTER_STORAGE_BASE_URL</code></li><li>使用<code>flutter doctor</code>命令检查</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 修改flutter配置；修改之后，环境变量变了，不会跟着改变</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --jdk-dir=/path/to/your/jdk</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 手动修改jdk位置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># flutter 安装环境检测</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> doctor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> doctor</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --verbose</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AS 部分</p><ul><li>JAVA 环境：下载JDK，配置环境变量，<code>java -version</code>检验</li><li>下载 <code>AS (Android Studio)</code></li><li>AS 中下载<code>Flutter</code>和<code>Dart插件</code>, 配置<code>Project Structure</code>下面的JDK地址, 根据flutter doctor的结果安装必要的工具(【SDK Manager】下)</li><li>安装 <code>Android SDK</code>， 配置各种环境变量：platform-tools等，便于开发</li><li><a href="https://mirrors.cloud.tencent.com/gradle/" target="_blank" rel="noopener noreferrer">下载</a>Java<a href="https://docs.gradle.org/current/userguide/compatibility.html#java" target="_blank" rel="noopener noreferrer">对应版本</a>的gradle(安卓构建工具)</li><li>调整 android -&gt; gradle -&gt; gradle-wrapper.properties （也有可能在其他位置） 中 gradle变量，默认是下载很慢，所以下下来之后好一些</li></ul><div class="language-t line-numbers-mode" data-highlighter="shiki" data-ext="t" data-title="t" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>#distributionUrl=https\\://services.gradle.org/distributions/gradle-8.8-all.zip</span></span>
<span class="line"><span>distributionUrl=file:///F\\:/gradle/gradle-8.8-all.zip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>app -&gt; build.gradle中需要调整相应的SDK版本</p></li><li><p>WINDOWS 下调整Android Studio的缓存位置， 缓存等文件夹不放在C盘：修改<code>F:\\ProgramData\\android-studio\\bin\\idea.properties</code>文件中的config和system的path</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Uncomment this option if you want to customize a path to the settings directory.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">idea.config.path</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">=F:/ProgramData/as-cache/.AndroidStudio/config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Uncomment this option if you want to customize a path to the caches directory.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">idea.system.path</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">=F:/ProgramData/as-cache/.AndroidStudio/system</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>windows下调整.gradle保存位置，因为占用很多，修改环境变量：<code>GRADLE_USER_HOME = F:\\ProgramData\\as-cache\\.gradle</code> 或者 直接在 AS 中Settings -&gt; Gradle下进行调整</p></li></ul><h2 id="flutter依赖-类似web前端工程依赖" tabindex="-1"><a class="header-anchor" href="#flutter依赖-类似web前端工程依赖"><span>Flutter依赖(类似web前端工程依赖)</span></a></h2><ul><li><a href="https://pub.dev/" target="_blank" rel="noopener noreferrer">依赖包查找</a></li><li>修改<code>pubspec.yaml</code> 中 <code>dependences</code> 和 <code>dev_dependences</code>, 直接在AS中可以update</li><li>注意：下载依赖时，一定要看它的文档和推荐版本</li><li>会生成一个 pubspec.lock 文件，可能有时候也要删除掉重新下载依赖</li><li>下载的依赖一般在： <code>C:\\Users\\用户名\\AppData\\Local\\Pub\\Cache\\hosted\\pub.flutter-io.cn</code></li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 下载命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> get</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用插件" tabindex="-1"><a class="header-anchor" href="#常用插件"><span>常用插件</span></a></h2><p>http请求：dio loading： flutter_easyloading dialog：adaptive_dialog 状态管理：provider 数据持久化：share_preferences 相机： camera</p><h2 id="基本概念一-widget" tabindex="-1"><a class="header-anchor" href="#基本概念一-widget"><span>基本概念一： Widget</span></a></h2><p>Flutter的核心设计思想便是 &quot;一切皆 <code>Widget</code>&quot;</p><h3 id="widget-element-renderobject" tabindex="-1"><a class="header-anchor" href="#widget-element-renderobject"><span>Widget Element RenderObject</span></a></h3><h3 id="statelesswidget-statefulwidget" tabindex="-1"><a class="header-anchor" href="#statelesswidget-statefulwidget"><span>StatelessWidget StatefulWidget</span></a></h3><p>当你所要构建的用户界面不随任何状态信息的变化而变化时，需要选择使用StatelessWidget，反之则选用 StatefulWidget</p><h2 id="基本概念二、-state" tabindex="-1"><a class="header-anchor" href="#基本概念二、-state"><span>基本概念二、 State</span></a></h2><p>Flutter的视图开发是声明式的，其核心设计思想就是将视图和数据分离，这与 React 的设计思路完全一致</p><h2 id="基本概念三、-生命周期" tabindex="-1"><a class="header-anchor" href="#基本概念三、-生命周期"><span>基本概念三、 生命周期</span></a></h2><h2 id="其他ui组件库" tabindex="-1"><a class="header-anchor" href="#其他ui组件库"><span>其他UI组件库</span></a></h2><ol><li><a href="https://docs.getwidget.dev" target="_blank" rel="noopener noreferrer">Get Widget</a></li><li><a href="https://bruno.ke.com/page/guide/bruno" target="_blank" rel="noopener noreferrer">Bruno</a>: Bruno 贝壳公司一整套设计体系</li><li><a href="https://macosui.github.io/macos_ui/" target="_blank" rel="noopener noreferrer">macos_ui</a>: macOS</li><li><a href="https://bdlukaa.github.io/fluent_ui/" target="_blank" rel="noopener noreferrer">fluent_ui</a>: windows</li><li><a href="https://teko-flat-design.web.app/docs/overview" target="_blank" rel="noopener noreferrer">tekflat_design</a></li></ol><h2 id="相关问题" tabindex="-1"><a class="header-anchor" href="#相关问题"><span>相关问题</span></a></h2><h3 id="一、安卓调试时-gradle下载慢的问题-安装依赖后-依赖中一般也会慢" tabindex="-1"><a class="header-anchor" href="#一、安卓调试时-gradle下载慢的问题-安装依赖后-依赖中一般也会慢"><span>一、安卓调试时，gradle下载慢的问题，安装依赖后，依赖中一般也会慢</span></a></h3><p>解决方法一： 用梯子，google() mavenCentral() 需要连接外网 解决方法二： 麻烦一些，调整<code>[android]</code> 中 <code>build.gradle</code>、 <code>Settings.gradle</code>， 下载的依赖中也进行调整External -&gt; Flutter Plugins下面</p><div class="language-.gradle文件 line-numbers-mode" data-highlighter="shiki" data-ext=".gradle文件" data-title=".gradle文件" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>    // 腾讯maven</span></span>
<span class="line"><span>    maven {</span></span>
<span class="line"><span>        url &#39;https://mirrors.cloud.tencent.com/nexus/repository/maven-public&#39;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    // 阿里maven</span></span>
<span class="line"><span>    maven {</span></span>
<span class="line"><span>        url &#39;https://maven.aliyun.com/repository/google&#39;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    maven {</span></span>
<span class="line"><span>        url &#39;https://maven.aliyun.com/repository/jcenter&#39;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    maven {</span></span>
<span class="line"><span>        url &#39;https://maven.aliyun.com/repository/gradle-plugin&#39;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    maven {</span></span>
<span class="line"><span>        url &#39;https://maven.aliyun.com/nexus/content/groups/public&#39;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    // 默认官方maven</span></span>
<span class="line"><span>    //  google()</span></span>
<span class="line"><span>    //  mavenCentral()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、安装完三方fluttertoast依赖后运行报错" tabindex="-1"><a class="header-anchor" href="#二、安装完三方fluttertoast依赖后运行报错"><span>二、安装完三方fluttertoast依赖后运行报错</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Execution</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> failed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;:fluttertoast:compileDebugJavaWithJavac&#39;.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> Could not resolve all files </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> configuration </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;:fluttertoast:androidJdkImage&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">   &gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Failed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> transform</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> core-for-system-modules.jar</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> match</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> attributes</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {artifactType=_internal_android_jdk_image,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> org.gradle.libraryelements=jar,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> org.gradle.usage=java-runtime}.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      &gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Execution</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> failed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> JdkImageTransform:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> F:</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\A</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">drSDK</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">latforms</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\a</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ndroid-33</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\c</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ore-for-system-modules.jar.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">         &gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Error</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> while</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> executing</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> process</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> F:</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rogramData</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\j</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">dk-22.0.2</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\b</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\j</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">link.exe</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> arguments</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {--module-path</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">sers</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ell</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">gradle</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\c</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">aches</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\8</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.8</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ransforms</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\2</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">b0b454e888697ca218318e4ac8fecc6-ee76b1ff-daac-4017-802f-8a4e847a1ead</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ransformed</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\o</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">utput</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">emp</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\j</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">mod</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --add-modules</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> java.base</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --output</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">sers</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ell</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">gradle</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\c</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">aches</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\8</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.8</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ransforms</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\2</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">b0b454e888697ca218318e4ac8fecc6-ee76b1ff-daac-4017-802f-8a4e847a1ead</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ransformed</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\o</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">utput</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\j</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">dkImage</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --disable-plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> system-modules}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决办法：根据报错位置来看，JDK中的jlink.exe报错，尝试调整JDK版本，最后确实是JDK版本的问题, 将22.0.1降到了19.0.1</p><h3 id="三、打包的时候报kotlin版本不对" tabindex="-1"><a class="header-anchor" href="#三、打包的时候报kotlin版本不对"><span>三、打包的时候报kotlin版本不对</span></a></h3><p>解决办法：</p><ol><li><p>打开android目录下build.gradle</p></li><li><p>查找buildscript配置块中的ext.kotlin_version属性，这个属性定义了项目使用的Kotlin版本</p><div class="language-.gradle line-numbers-mode" data-highlighter="shiki" data-ext=".gradle" data-title=".gradle" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>buildscript {</span></span>
<span class="line"><span>    ext.kotlin_version = &#39;1.6.0&#39;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>如果你需要更新Kotlin版本，只需将ext.kotlin_version的值改为你想要的版本，保存build.gradle文件</p></li><li><p>flutter clean, flutter build</p></li></ol><h3 id="四、keystore打包签名" tabindex="-1"><a class="header-anchor" href="#四、keystore打包签名"><span>四、keystore打包签名</span></a></h3>`,35),l=[n];function r(h,d){return e(),s("div",null,l)}const k=i(t,[["render",r],["__file","basic.html.vue"]]),o=JSON.parse('{"path":"/soft-engineering/client/flutter/basic.html","title":"Flutter","lang":"zh-CN","frontmatter":{"title":"Flutter","footer":"","description":"工程环境安装与配置 windows 下用 VSCode 或者 AS (Android Studio) 进行开发 Flutter部分 下载 flutter SDK，一般里面已经包括了Dart SDK 配置flutter环境变量、Dart环境变量和相关镜像站点环境变量(毕竟国内)：PUB_HOSTED_URL 和 FLUTTER_STORAGE_BASE_...","head":[["meta",{"property":"og:url","content":"https://lipengjgs.github.io/soft-engineering/client/flutter/basic.html"}],["meta",{"property":"og:site_name","content":"SE Docs"}],["meta",{"property":"og:title","content":"Flutter"}],["meta",{"property":"og:description","content":"工程环境安装与配置 windows 下用 VSCode 或者 AS (Android Studio) 进行开发 Flutter部分 下载 flutter SDK，一般里面已经包括了Dart SDK 配置flutter环境变量、Dart环境变量和相关镜像站点环境变量(毕竟国内)：PUB_HOSTED_URL 和 FLUTTER_STORAGE_BASE_..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-27T03:16:56.000Z"}],["meta",{"property":"article:author","content":"lipengjgs"}],["meta",{"property":"article:modified_time","content":"2024-08-27T03:16:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flutter\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-27T03:16:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lipengjgs\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"工程环境安装与配置","slug":"工程环境安装与配置","link":"#工程环境安装与配置","children":[{"level":3,"title":"windows 下用 VSCode 或者 AS (Android Studio) 进行开发","slug":"windows-下用-vscode-或者-as-android-studio-进行开发","link":"#windows-下用-vscode-或者-as-android-studio-进行开发","children":[]}]},{"level":2,"title":"Flutter依赖(类似web前端工程依赖)","slug":"flutter依赖-类似web前端工程依赖","link":"#flutter依赖-类似web前端工程依赖","children":[]},{"level":2,"title":"常用插件","slug":"常用插件","link":"#常用插件","children":[]},{"level":2,"title":"基本概念一： Widget","slug":"基本概念一-widget","link":"#基本概念一-widget","children":[{"level":3,"title":"Widget Element RenderObject","slug":"widget-element-renderobject","link":"#widget-element-renderobject","children":[]},{"level":3,"title":"StatelessWidget StatefulWidget","slug":"statelesswidget-statefulwidget","link":"#statelesswidget-statefulwidget","children":[]}]},{"level":2,"title":"基本概念二、 State","slug":"基本概念二、-state","link":"#基本概念二、-state","children":[]},{"level":2,"title":"基本概念三、 生命周期","slug":"基本概念三、-生命周期","link":"#基本概念三、-生命周期","children":[]},{"level":2,"title":"其他UI组件库","slug":"其他ui组件库","link":"#其他ui组件库","children":[]},{"level":2,"title":"相关问题","slug":"相关问题","link":"#相关问题","children":[{"level":3,"title":"一、安卓调试时，gradle下载慢的问题，安装依赖后，依赖中一般也会慢","slug":"一、安卓调试时-gradle下载慢的问题-安装依赖后-依赖中一般也会慢","link":"#一、安卓调试时-gradle下载慢的问题-安装依赖后-依赖中一般也会慢","children":[]},{"level":3,"title":"二、安装完三方fluttertoast依赖后运行报错","slug":"二、安装完三方fluttertoast依赖后运行报错","link":"#二、安装完三方fluttertoast依赖后运行报错","children":[]},{"level":3,"title":"三、打包的时候报kotlin版本不对","slug":"三、打包的时候报kotlin版本不对","link":"#三、打包的时候报kotlin版本不对","children":[]},{"level":3,"title":"四、keystore打包签名","slug":"四、keystore打包签名","link":"#四、keystore打包签名","children":[]}]}],"git":{"createdTime":1723025589000,"updatedTime":1724728616000,"contributors":[{"name":"jgs","email":"12345@qq.com","commits":4}]},"readingTime":{"minutes":3.6,"words":1079},"filePathRelative":"soft-engineering/client/flutter/basic.md","localizedDate":"2024年8月7日","autoDesc":true,"excerpt":"<h2><a class=\\"header-anchor\\" href=\\"#工程环境安装与配置\\"><span></span></a><a href=\\"https://docs.flutter.cn/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">工程环境安装与配置</a></h2>\\n<h3>windows 下用 VSCode 或者 AS (Android Studio) 进行开发</h3>\\n<p>Flutter部分</p>\\n<ul>\\n<li>下载 flutter SDK，一般里面已经包括了Dart SDK</li>\\n<li>配置flutter环境变量、Dart环境变量和相关镜像站点环境变量(毕竟国内)：<code>PUB_HOSTED_URL</code> 和 <code>FLUTTER_STORAGE_BASE_URL</code></li>\\n<li>使用<code>flutter doctor</code>命令检查</li>\\n</ul>"}');export{k as comp,o as data};
