import{_ as l,c as t,d as e,e as i,o as n}from"./app-BJqe5cHa.js";const a={},r=i('<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义</span></a></h2><ul><li>Algorithm: 一个有限指令集，每一个指令表示一个或多个操作</li><li>每一条指令：有<strong>充分明确的目标</strong>，不可以有歧义；在计算机能处理的范围之内；描述应不依赖于任何一种计算机语言以及具体实现</li></ul><h2 id="五个特性" tabindex="-1"><a class="header-anchor" href="#五个特性"><span>五个特性</span></a></h2><ol><li>有穷性： 一定在有限步骤之后终止</li><li>确定性： 固定的输入产生确定的输出</li><li>可行性： 可以通过基本运算有限次执行来实现</li><li>有输入： 可能没有</li><li>有输出： 一个或多个</li></ol><div class="hint-container important"><p class="hint-container-title">重要</p><p>学习算法最重要的是学习算法的设计过程（<strong style="cursor:pointer;" title="等算法能力掌握到一定程度后，再去学习复杂度算法这些; 数据结构的价值在于其思维逻辑结构层面的价值">算法思维</strong>）， 而不是算法本身，理论要与实践相结合</p></div><h2 id="算法分析" tabindex="-1"><a class="header-anchor" href="#算法分析"><span>算法分析</span></a></h2><ul><li>指标</li></ul><ol><li><p>空间复杂度S(n) Space</p><ul><li>写成的程序在执行时占用存储单元的长度</li><li>长度往往与输入数据的<strong>规模n</strong>有关</li></ul></li><li><p>事件复杂度T(n) Time</p><ul><li>写成的程序在执行时耗费时间的长度</li><li>长度往往与输入数据的规模n有关</li><li>机器运算加减法要比乘除法要快很多</li></ul></li></ol><ul><li>分析一般算法的效率</li></ul><ol><li><p>最坏情况复杂度T<sub>worst</sub>(n)</p></li><li><p>平均复杂度T<sub>avg</sub>(n)</p><p>T<sub>avg</sub>(n) &lt;= T<sub>worst</sub>(n)</p></li><li><p>所以一般就分析最坏情况复杂度</p></li></ol><ul><li>复杂度的渐进表示</li></ul>',11),p=i('<h2 id="算法表示" tabindex="-1"><a class="header-anchor" href="#算法表示"><span>算法表示</span></a></h2><h2 id="算法设计策略-一般性方法" tabindex="-1"><a class="header-anchor" href="#算法设计策略-一般性方法"><span>算法设计策略(一般性方法)</span></a></h2><p>设计算法时正确性，可读性，健壮性，最后考虑高效率和低存储量</p><ul><li><p><a href="./Search">查找算法</a></p></li><li><p><a href="./Sort">排序算法</a></p></li><li><p><a href="./String">字符串算法</a></p></li><li><p><a href="./Divide%20and%20Conquer">分治法</a></p></li><li><p>动态规划法</p></li><li><p>贪心法</p></li><li><p>回溯法</p></li><li><p>分支限界法</p></li><li><p>概率算法</p></li><li><p>近似算法</p></li><li><p>数据挖掘算法</p></li><li><p>智能优化算法</p></li></ul><h2 id="人工智能相关算法-了解" tabindex="-1"><a class="header-anchor" href="#人工智能相关算法-了解"><span>人工智能相关算法（了解）</span></a></h2>',5);function o(s,h){return n(),t("div",null,[r,e(` ![表示](/img/复杂度表示.png)
![各种输入规模下的复杂度](/img/输入规模.png)
![复杂度分析技巧](/img/复杂度分析技巧.png) `),p])}const c=l(a,[["render",o],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/programming/algorithm/","title":"算法-概述","lang":"zh-CN","frontmatter":{"title":"算法-概述","footer":"","description":"定义 Algorithm: 一个有限指令集，每一个指令表示一个或多个操作 每一条指令：有充分明确的目标，不可以有歧义；在计算机能处理的范围之内；描述应不依赖于任何一种计算机语言以及具体实现 五个特性 有穷性： 一定在有限步骤之后终止 确定性： 固定的输入产生确定的输出 可行性： 可以通过基本运算有限次执行来实现 有输入： 可能没有 有输出： 一个或多个...","head":[["meta",{"property":"og:url","content":"https://lipengjgs.github.io/programming/algorithm/"}],["meta",{"property":"og:site_name","content":"SE Docs"}],["meta",{"property":"og:title","content":"算法-概述"}],["meta",{"property":"og:description","content":"定义 Algorithm: 一个有限指令集，每一个指令表示一个或多个操作 每一条指令：有充分明确的目标，不可以有歧义；在计算机能处理的范围之内；描述应不依赖于任何一种计算机语言以及具体实现 五个特性 有穷性： 一定在有限步骤之后终止 确定性： 固定的输入产生确定的输出 可行性： 可以通过基本运算有限次执行来实现 有输入： 可能没有 有输出： 一个或多个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lipengjgs.github.io/img/复杂度表示.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-18T08:16:44.000Z"}],["meta",{"property":"article:author","content":"lipengjgs"}],["meta",{"property":"article:modified_time","content":"2024-07-18T08:16:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法-概述\\",\\"image\\":[\\"https://lipengjgs.github.io/img/复杂度表示.png\\",\\"https://lipengjgs.github.io/img/输入规模.png\\",\\"https://lipengjgs.github.io/img/复杂度分析技巧.png\\"],\\"dateModified\\":\\"2024-07-18T08:16:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lipengjgs\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"五个特性","slug":"五个特性","link":"#五个特性","children":[]},{"level":2,"title":"算法分析","slug":"算法分析","link":"#算法分析","children":[]},{"level":2,"title":"算法表示","slug":"算法表示","link":"#算法表示","children":[]},{"level":2,"title":"算法设计策略(一般性方法)","slug":"算法设计策略-一般性方法","link":"#算法设计策略-一般性方法","children":[]},{"level":2,"title":"人工智能相关算法（了解）","slug":"人工智能相关算法-了解","link":"#人工智能相关算法-了解","children":[]}],"git":{"createdTime":1719488606000,"updatedTime":1721290604000,"contributors":[{"name":"jgs","email":"12345@qq.com","commits":3}]},"readingTime":{"minutes":1.89,"words":566},"filePathRelative":"programming/algorithm/README.md","localizedDate":"2024年6月27日","autoDesc":true,"excerpt":"<h2>定义</h2>\\n<ul>\\n<li>Algorithm: 一个有限指令集，每一个指令表示一个或多个操作</li>\\n<li>每一条指令：有<strong>充分明确的目标</strong>，不可以有歧义；在计算机能处理的范围之内；描述应不依赖于任何一种计算机语言以及具体实现</li>\\n</ul>\\n<h2>五个特性</h2>\\n<ol>\\n<li>有穷性： 一定在有限步骤之后终止</li>\\n<li>确定性： 固定的输入产生确定的输出</li>\\n<li>可行性： 可以通过基本运算有限次执行来实现</li>\\n<li>有输入： 可能没有</li>\\n<li>有输出： 一个或多个</li>\\n</ol>\\n<div class=\\"hint-container important\\">\\n<p class=\\"hint-container-title\\">重要</p>\\n<p>学习算法最重要的是学习算法的设计过程（<strong style=\\"cursor: pointer;\\" title=\\"等算法能力掌握到一定程度后，再去学习复杂度算法这些; 数据结构的价值在于其思维逻辑结构层面的价值\\">算法思维</strong>），\\n而不是算法本身，理论要与实践相结合</p>\\n</div>"}');export{c as comp,d as data};
