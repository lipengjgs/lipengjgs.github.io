import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,e as l}from"./app-Ch9JtAZr.js";const s={},c=l("<p>各种不同的style</p><ol><li><code>&lt;style&gt;</code></li><li><code>&lt;style scoped&gt;</code></li><li><code>&lt;style module&gt;</code></li></ol><p><code>&lt;style&gt;</code>插入<code>&lt;head&gt;</code>的顺序</p><p>对单个组件，按照<code>&lt;style&gt;</code>出现的顺序插入<code>&lt;head&gt;</code> 遍历组件的子组件，依次对子组件执行步骤1，在开发时执行的顺序按照子组件在template中出现的顺序，生产构建时执行的顺序按照引入子组件的顺序</p>",4),d=[c];function n(p,a){return o(),t("div",null,d)}const y=e(s,[["render",n],["__file","style.html.vue"]]),m=JSON.parse('{"path":"/soft-engineering/fe/fe-frames/vue/v2x/style.html","title":"","lang":"zh-CN","frontmatter":{"description":"各种不同的style <style> <style scoped> <style module> <style>插入<head>的顺序 对单个组件，按照<style>出现的顺序插入<head> 遍历组件的子组件，依次对子组件执行步骤1，在开发时执行的顺序按照子组件在template中出现的顺序，生产构建时执行的顺序按照引入子组件的顺序","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/soft-engineering/fe/fe-frames/vue/v2x/style.html"}],["meta",{"property":"og:site_name","content":"SE Docs"}],["meta",{"property":"og:description","content":"各种不同的style <style> <style scoped> <style module> <style>插入<head>的顺序 对单个组件，按照<style>出现的顺序插入<head> 遍历组件的子组件，依次对子组件执行步骤1，在开发时执行的顺序按照子组件在template中出现的顺序，生产构建时执行的顺序按照引入子组件的顺序"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"lipengjgs"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lipengjgs\\",\\"url\\":\\"\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.33,"words":98},"filePathRelative":"soft-engineering/fe/fe-frames/vue/v2x/style.md","autoDesc":true,"excerpt":"<p>各种不同的style</p>\\n<ol>\\n<li><code>&lt;style&gt;</code></li>\\n<li><code>&lt;style scoped&gt;</code></li>\\n<li><code>&lt;style module&gt;</code></li>\\n</ol>\\n<p><code>&lt;style&gt;</code>插入<code>&lt;head&gt;</code>的顺序</p>\\n<p>对单个组件，按照<code>&lt;style&gt;</code>出现的顺序插入<code>&lt;head&gt;</code>\\n遍历组件的子组件，依次对子组件执行步骤1，在开发时执行的顺序按照子组件在template中出现的顺序，生产构建时执行的顺序按照引入子组件的顺序</p>"}');export{y as comp,m as data};
