import{_ as e,c as t,o as n,e as a}from"./app-M3Oeh5Ky.js";const r={},l=a('<h2 id="类型" tabindex="-1"><a class="header-anchor" href="#类型"><span>类型</span></a></h2><p>Dart 是类型安全的语言，并且所有类型都是对象类型，都继承自顶层类型 Object<br> 因此一切变量的值都是类的实例（即对象），甚至数字、布尔值、函数和 null 也都是继承自Object 的对象\\</p><h3 id="内置基本类型" tabindex="-1"><a class="header-anchor" href="#内置基本类型"><span>内置基本类型</span></a></h3><p>num、bool、String、List 和 Map</p><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h2><h2 id="类" tabindex="-1"><a class="header-anchor" href="#类"><span>类</span></a></h2><h3 id="可选参数" tabindex="-1"><a class="header-anchor" href="#可选参数"><span>可选参数</span></a></h3><blockquote><p>没有多态概念，用可选参数的方式代替</p></blockquote><h3 id="继承" tabindex="-1"><a class="header-anchor" href="#继承"><span>继承</span></a></h3><h3 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h3><h3 id="混入" tabindex="-1"><a class="header-anchor" href="#混入"><span>混入</span></a></h3>',11),i=[l];function o(c,h){return n(),t("div",null,i)}const p=e(r,[["render",o],["__file","dart.html.vue"]]),d=JSON.parse('{"path":"/soft-engineering/client/flutter/dart.html","title":"Dart","lang":"zh-CN","frontmatter":{"title":"Dart","footer":"","description":"类型 Dart 是类型安全的语言，并且所有类型都是对象类型，都继承自顶层类型 Object 因此一切变量的值都是类的实例（即对象），甚至数字、布尔值、函数和 null 也都是继承自Object 的对象\\\\ 内置基本类型 num、bool、String、List 和 Map 函数 类 可选参数 没有多态概念，用可选参数的方式代替 继承 实现 混入","head":[["meta",{"property":"og:url","content":"https://lipengjgs.github.io/soft-engineering/client/flutter/dart.html"}],["meta",{"property":"og:site_name","content":"SE Docs"}],["meta",{"property":"og:title","content":"Dart"}],["meta",{"property":"og:description","content":"类型 Dart 是类型安全的语言，并且所有类型都是对象类型，都继承自顶层类型 Object 因此一切变量的值都是类的实例（即对象），甚至数字、布尔值、函数和 null 也都是继承自Object 的对象\\\\ 内置基本类型 num、bool、String、List 和 Map 函数 类 可选参数 没有多态概念，用可选参数的方式代替 继承 实现 混入"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-09T08:52:53.000Z"}],["meta",{"property":"article:author","content":"lipengjgs"}],["meta",{"property":"article:modified_time","content":"2024-08-09T08:52:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dart\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-09T08:52:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lipengjgs\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"类型","slug":"类型","link":"#类型","children":[{"level":3,"title":"内置基本类型","slug":"内置基本类型","link":"#内置基本类型","children":[]}]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[]},{"level":2,"title":"类","slug":"类","link":"#类","children":[{"level":3,"title":"可选参数","slug":"可选参数","link":"#可选参数","children":[]},{"level":3,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":3,"title":"实现","slug":"实现","link":"#实现","children":[]},{"level":3,"title":"混入","slug":"混入","link":"#混入","children":[]}]}],"git":{"createdTime":1721223544000,"updatedTime":1723193573000,"contributors":[{"name":"jgs","email":"12345@qq.com","commits":2}]},"readingTime":{"minutes":0.38,"words":114},"filePathRelative":"soft-engineering/client/flutter/dart.md","localizedDate":"2024年7月17日","autoDesc":true,"excerpt":"<h2>类型</h2>\\n<p>Dart 是类型安全的语言，并且所有类型都是对象类型，都继承自顶层类型 Object<br>\\n因此一切变量的值都是类的实例（即对象），甚至数字、布尔值、函数和 null 也都是继承自Object 的对象\\\\</p>\\n<h3>内置基本类型</h3>\\n<p>num、bool、String、List 和 Map</p>\\n<h2>函数</h2>\\n<h2>类</h2>\\n<h3>可选参数</h3>\\n<blockquote>\\n<p>没有多态概念，用可选参数的方式代替</p>\\n</blockquote>\\n<h3>继承</h3>\\n<h3>实现</h3>\\n<h3>混入</h3>\\n"}');export{p as comp,d as data};
