import{_ as e,c as l,d as t,e as i,o as n}from"./app-BYHMrj4z.js";const a={},s=i('<blockquote><p>最多只有一个出度和一个入度</p></blockquote><h2 id="线性表" tabindex="-1"><a class="header-anchor" href="#线性表"><span>线性表</span></a></h2><ul><li>最基本最常用的线性结构</li><li>是零个或多个元素的有穷序列，通常可以表示为k<sub>0</sub>, k<sub>1</sub>, ... k<sub>n-1</sub>(n&gt;=1)</li><li>线性表中的元素叫<strong>表目</strong>或者<strong>记录</strong></li><li>i 称为表目 k<sub>i</sub> 的 <strong>索引</strong> 或 <strong>下标</strong></li><li>n是<strong>表的长度</strong></li><li>长度为零的线性表叫<strong>空表</strong></li></ul><p>特点</p><ul><li>灵活，长度可增长、缩短</li></ul>',5),r=i(`<h3 id="_1-顺序存储结构-顺序表" tabindex="-1"><a class="header-anchor" href="#_1-顺序存储结构-顺序表"><span>1. 顺序存储结构(顺序表)</span></a></h3><blockquote><p>一组地址 <mark>连续的存储单元</mark> 依次存储线性表中的数据元素，逻辑上相邻的两个元素在物理位置上也相邻</p></blockquote><ul><li>优点：可以随机存取表中的元素</li><li>缺点：插入和删除需要移动元素</li></ul><h3 id="_2-链式存储结构-链表" tabindex="-1"><a class="header-anchor" href="#_2-链式存储结构-链表"><span>2. 链式存储结构(链表)</span></a></h3><blockquote><p>通过指针链接起来的结点（<mark>地址不要求连续</mark>）存储数据元素，有一个数据域和一个指针域，指针域中的信息称为指针(或链)</p><p>结点空间只在需要的时候才申请，无须事先分配</p></blockquote><ul><li>单链表</li><li>双向链表： 每个结点包含两个指针</li><li>循环链表： 表尾指针纸箱链表第一个结点</li><li>静态链表： 借助数组来描述线性表的链式存储结构</li></ul><h2 id="栈" tabindex="-1"><a class="header-anchor" href="#栈"><span>栈</span></a></h2><ul><li>LIFO last in first out</li><li>插入和删除操作都限制在表的同一端进行</li><li>不含数据的栈叫<strong>空栈</strong></li><li>应用：深搜</li><li>可以用数组来实现堆栈，也可以用链表（单向链尾不能找到前一个）来实现堆栈</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 抽象数据结构</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 通常由一个一维数组和一个记录栈顶元素位置的变量组成</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-中缀表达式转换为后缀表达式" tabindex="-1"><a class="header-anchor" href="#_1-中缀表达式转换为后缀表达式"><span>1. 中缀表达式转换为后缀表达式</span></a></h3><ol><li>从头到尾读取中缀表达式的每个对象</li><li>假如是运算符：直接输出</li><li>假如是左括号：压入堆栈</li><li>假如是右括号，将栈顶的运算符弹出并输出，直到遇到左括号（出栈，不输出）</li><li>运算符： <ul><li>若优先级大于栈顶运算符时，则把它压栈；</li><li>若优先级小于等于栈顶运算符时，将栈顶运算符弹出并输出；</li><li>再比较新的栈顶运算符，直到该运算符大于栈顶运算符优先级为止，然后将该运算符压栈</li></ul></li><li>若各对象处理完毕，则把堆栈中存留的运算符一并输出</li></ol><h2 id="队列" tabindex="-1"><a class="header-anchor" href="#队列"><span>队列</span></a></h2><ul><li>FIFP first in first out</li><li>插入操作在表的一端，删除操作在另一端；队头（Front），队尾（Rear）</li><li>应用：宽搜</li><li>也是一种受限制的线性表</li></ul><h3 id="_1-顺序队列" tabindex="-1"><a class="header-anchor" href="#_1-顺序队列"><span>1. 顺序队列</span></a></h3><h3 id="_2-循环队列" tabindex="-1"><a class="header-anchor" href="#_2-循环队列"><span>2. 循环队列</span></a></h3><h2 id="串" tabindex="-1"><a class="header-anchor" href="#串"><span>串</span></a></h2><ul><li>由字符构成的有限序列</li></ul><h3 id="模式匹配算法" tabindex="-1"><a class="header-anchor" href="#模式匹配算法"><span><a href="../algorithm/String">模式匹配算法</a></span></a></h3>`,18);function o(h,c){return n(),l("div",null,[s,t(" - 二元组 `B = (K, R) K = {a0, a1,...an-1} R = {r}` r表示前驱/后继关系，具有反对称性和传递性 "),r])}const p=e(a,[["render",o],["__file","Linear.html.vue"]]),u=JSON.parse('{"path":"/programming/structure/Linear.html","title":"线性结构","lang":"zh-CN","frontmatter":{"title":"线性结构","footer":"","description":"最多只有一个出度和一个入度 线性表 最基本最常用的线性结构 是零个或多个元素的有穷序列，通常可以表示为k0, k1, ... kn-1(n>=1) 线性表中的元素叫表目或者记录 i 称为表目 ki 的 索引 或 下标 n是表的长度 长度为零的线性表叫空表 特点 灵活，长度可增长、缩短 1. 顺序存储结构(顺序表) 一组地址 连续的存储单元 依次存储线性...","head":[["meta",{"property":"og:url","content":"https://lipengjgs.github.io/programming/structure/Linear.html"}],["meta",{"property":"og:site_name","content":"SE Docs"}],["meta",{"property":"og:title","content":"线性结构"}],["meta",{"property":"og:description","content":"最多只有一个出度和一个入度 线性表 最基本最常用的线性结构 是零个或多个元素的有穷序列，通常可以表示为k0, k1, ... kn-1(n>=1) 线性表中的元素叫表目或者记录 i 称为表目 ki 的 索引 或 下标 n是表的长度 长度为零的线性表叫空表 特点 灵活，长度可增长、缩短 1. 顺序存储结构(顺序表) 一组地址 连续的存储单元 依次存储线性..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-21T12:04:28.000Z"}],["meta",{"property":"article:author","content":"lipengjgs"}],["meta",{"property":"article:modified_time","content":"2024-07-21T12:04:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线性结构\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-21T12:04:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lipengjgs\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"线性表","slug":"线性表","link":"#线性表","children":[{"level":3,"title":"1. 顺序存储结构(顺序表)","slug":"_1-顺序存储结构-顺序表","link":"#_1-顺序存储结构-顺序表","children":[]},{"level":3,"title":"2. 链式存储结构(链表)","slug":"_2-链式存储结构-链表","link":"#_2-链式存储结构-链表","children":[]}]},{"level":2,"title":"栈","slug":"栈","link":"#栈","children":[{"level":3,"title":"1. 中缀表达式转换为后缀表达式","slug":"_1-中缀表达式转换为后缀表达式","link":"#_1-中缀表达式转换为后缀表达式","children":[]}]},{"level":2,"title":"队列","slug":"队列","link":"#队列","children":[{"level":3,"title":"1. 顺序队列","slug":"_1-顺序队列","link":"#_1-顺序队列","children":[]},{"level":3,"title":"2. 循环队列","slug":"_2-循环队列","link":"#_2-循环队列","children":[]}]},{"level":2,"title":"串","slug":"串","link":"#串","children":[{"level":3,"title":"模式匹配算法","slug":"模式匹配算法","link":"#模式匹配算法","children":[]}]}],"git":{"createdTime":1721223544000,"updatedTime":1721563468000,"contributors":[{"name":"jgs","email":"12345@qq.com","commits":2}]},"readingTime":{"minutes":2.46,"words":738},"filePathRelative":"programming/structure/Linear.md","localizedDate":"2024年7月17日","autoDesc":true,"excerpt":"<blockquote>\\n<p>最多只有一个出度和一个入度</p>\\n</blockquote>\\n<h2>线性表</h2>\\n<ul>\\n<li>最基本最常用的线性结构</li>\\n<li>是零个或多个元素的有穷序列，通常可以表示为k<sub>0</sub>, k<sub>1</sub>, ... k<sub>n-1</sub>(n&gt;=1)</li>\\n<li>线性表中的元素叫<strong>表目</strong>或者<strong>记录</strong></li>\\n<li>i 称为表目 k<sub>i</sub> 的 <strong>索引</strong> 或 <strong>下标</strong></li>\\n<li>n是<strong>表的长度</strong></li>\\n<li>长度为零的线性表叫<strong>空表</strong></li>\\n</ul>"}');export{p as comp,u as data};
